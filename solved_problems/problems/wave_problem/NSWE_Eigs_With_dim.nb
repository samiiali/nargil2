(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    681453,      14829]
NotebookOptionsPosition[    669351,      14425]
NotebookOutlinePosition[    669724,      14441]
CellTagsIndexPosition[    669681,      14438]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Fij2D", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q2", ",", "q3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"q2", "^", "2"}], "/", "q1"}], "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", "g", "*", 
        RowBox[{"q1", "^", "2"}]}]}], ",", 
      RowBox[{"q2", "*", 
       RowBox[{"q3", "/", "q1"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q2", "*", 
       RowBox[{"q3", "/", "q1"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q3", "^", "2"}], "/", "q1"}], "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", "g", "*", 
        RowBox[{"q1", "^", "2"}]}]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.668345410411787*^9, 3.668345425579926*^9}, {
  3.668345457852322*^9, 3.66834554125366*^9}, {3.686591900828504*^9, 
  3.686591911708293*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fijnj", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"Dot", "[", 
   RowBox[{
    RowBox[{"Fij2D", "[", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n1", ",", "n2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668363807193759*^9, 3.668363848747478*^9}, {
  3.668363957005209*^9, 3.6683639588847313`*^9}, {3.6683640679828587`*^9, 
  3.668364070798332*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gradFijqk", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_"}], "]"}], "=", 
  RowBox[{"Grad", "[", 
   RowBox[{
    RowBox[{"Fij2D", "[", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668345546541519*^9, 3.66834557410972*^9}, {
   3.668345636337719*^9, 3.6683456403349047`*^9}, {3.6683465263857603`*^9, 
   3.6683466010654917`*^9}, 3.66834681437329*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"g", " ", "q1"}], "-", 
        FractionBox[
         SuperscriptBox["q2", "2"], 
         SuperscriptBox["q1", "2"]]}], ",", 
       FractionBox[
        RowBox[{"2", " ", "q2"}], "q1"], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"q2", " ", "q3"}], 
         SuperscriptBox["q1", "2"]]}], ",", 
       FractionBox["q3", "q1"], ",", 
       FractionBox["q2", "q1"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"q2", " ", "q3"}], 
         SuperscriptBox["q1", "2"]]}], ",", 
       FractionBox["q3", "q1"], ",", 
       FractionBox["q2", "q1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"g", " ", "q1"}], "-", 
        FractionBox[
         SuperscriptBox["q3", "2"], 
         SuperscriptBox["q1", "2"]]}], ",", "0", ",", 
       FractionBox[
        RowBox[{"2", " ", "q3"}], "q1"]}], "}"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.6683468159988403`*^9, 3.6692148977061243`*^9, 
  3.669313746179895*^9, 3.669328518548699*^9, 3.669328878074862*^9, 
  3.6695527146741*^9, 3.6865919405469437`*^9, 3.686592771195896*^9, 
  3.686741779364296*^9, 3.6867603246172447`*^9, 3.686763032048815*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FqDotN2D", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"q2", "^", "2"}]}], "/", 
          RowBox[{"q1", "^", "2"}]}], "+", 
         RowBox[{"g", " ", "q1"}]}], ",", 
        RowBox[{"2", "*", 
         RowBox[{"q2", "/", "q1"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "q2"}], "*", 
         RowBox[{"q3", "/", 
          RowBox[{"q1", "^", "2"}]}]}], ",", 
        RowBox[{"q3", "/", "q1"}], ",", 
        RowBox[{"q2", "/", "q1"}]}], "}"}]}], "}"}], "*", "n1"}], "+", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "q2"}], "*", 
         RowBox[{"q3", "/", 
          RowBox[{"q1", "^", "2"}]}]}], ",", 
        RowBox[{"q3", "/", "q1"}], ",", 
        RowBox[{"q2", "/", "q1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"q3", "^", "2"}]}], "/", 
          RowBox[{"q1", "^", "2"}]}], "+", 
         RowBox[{"g", " ", "q1"}]}], ",", "0", ",", 
        RowBox[{"2", "*", 
         RowBox[{"q3", "/", "q1"}]}]}], "}"}]}], "}"}], "*", 
    "n2"}]}]}]], "Input",
 CellChangeTimes->{{3.667578807307095*^9, 3.667578893650547*^9}, {
  3.667578937322854*^9, 3.667579094489859*^9}, {3.667579236078918*^9, 
  3.667579275506254*^9}, {3.667580919540827*^9, 3.667580921292622*^9}, {
  3.667582125684271*^9, 3.6675822476045837`*^9}, {3.668355157380597*^9, 
  3.66835515924408*^9}, {3.686592973815566*^9, 3.6865929744074383`*^9}, {
  3.686593201697584*^9, 3.686593201774775*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gradFqDotn", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], 
  "=", 
  RowBox[{"Grad", "[", 
   RowBox[{
    RowBox[{"Fijnj", "[", 
     RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668355161280492*^9, 3.668355216396407*^9}, {
  3.668363882100129*^9, 3.668363908388386*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "n1", ",", "n2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"n1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", "q1"}], "-", 
         FractionBox[
          SuperscriptBox["q2", "2"], 
          SuperscriptBox["q1", "2"]]}], ")"}]}], "-", 
      FractionBox[
       RowBox[{"n2", " ", "q2", " ", "q3"}], 
       SuperscriptBox["q1", "2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", "n1", " ", "q2"}], "q1"], "+", 
      FractionBox[
       RowBox[{"n2", " ", "q3"}], "q1"]}], ",", 
     FractionBox[
      RowBox[{"n2", " ", "q2"}], "q1"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"n1", " ", "q2", " ", "q3"}], 
        SuperscriptBox["q1", "2"]]}], "+", 
      RowBox[{"n2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", "q1"}], "-", 
         FractionBox[
          SuperscriptBox["q3", "2"], 
          SuperscriptBox["q1", "2"]]}], ")"}]}]}], ",", 
     FractionBox[
      RowBox[{"n1", " ", "q3"}], "q1"], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"n1", " ", "q2"}], "q1"], "+", 
      FractionBox[
       RowBox[{"2", " ", "n2", " ", "q3"}], "q1"]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.668355227516103*^9, {3.6683638968363667`*^9, 3.66836392644785*^9}, 
   3.668363965426827*^9, 3.668364003274852*^9, 3.668364075746676*^9, 
   3.6692164229333267`*^9, 3.6693137587558613`*^9, 3.6695530421850452`*^9, 
   3.669553166799725*^9, 3.6865932568602667`*^9, 3.686593293892606*^9, 
   3.6865936767671537`*^9, 3.686594033324456*^9, 3.6866834884394093`*^9, 
   3.68674178778494*^9, 3.686760327802463*^9, 3.686763036381069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"FqDotN2D", "[", 
     RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n1", "*", "n1"}], "+", 
       RowBox[{"n2", "*", "n2"}]}], "\[Equal]", "1"}], ",", 
     RowBox[{"q1", "\[Element]", "Reals"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6675792892041616`*^9, 3.667579312632608*^9}, {
  3.667580927111174*^9, 3.667580927876409*^9}, {3.667582255334292*^9, 
  3.6675822565242977`*^9}, {3.686594711816881*^9, 3.686594757464925*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"n1", " ", "q2"}], "+", 
     RowBox[{"n2", " ", "q3"}]}], "q1"], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{"g", " ", 
        SuperscriptBox["q1", "5"]}]]}], "+", 
     RowBox[{"n1", " ", "q1", " ", "q2"}], "+", 
     RowBox[{"n2", " ", "q1", " ", "q3"}]}], 
    SuperscriptBox["q1", "2"]], ",", 
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{"g", " ", 
       SuperscriptBox["q1", "5"]}]], "+", 
     RowBox[{"n1", " ", "q1", " ", "q2"}], "+", 
     RowBox[{"n2", " ", "q1", " ", "q3"}]}], 
    SuperscriptBox["q1", "2"]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.667848756709136*^9, 3.668344910312854*^9, 3.669216771507156*^9, 
   3.669313764737336*^9, 3.68659403885386*^9, {3.686594739073341*^9, 
   3.686594758914661*^9}, 3.686594853948752*^9, 3.68668408407051*^9, 
   3.686741792369199*^9, 3.686760329727717*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"tau", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "q2"}], "/", "q1"}], "*", "n1"}], "-", 
       RowBox[{
        RowBox[{"q3", "/", "q1"}], "*", "n2"}], "+", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}], ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "q2"}], "/", "q1"}], "*", "n1"}], "-", 
       RowBox[{
        RowBox[{"q3", "/", "q1"}], "*", "n2"}], "+", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "q2"}], "/", "q1"}], "*", "n1"}], "-", 
       RowBox[{
        RowBox[{"q3", "/", "q1"}], "*", "n2"}], "+", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.667584908308647*^9, 3.6675850102947397`*^9}, {
  3.667851477939457*^9, 3.66785148981435*^9}, {3.667852281653861*^9, 
  3.667852298493443*^9}, {3.667855748107106*^9, 3.667855761430134*^9}, {
  3.686595120244584*^9, 3.6865951376905527`*^9}, {3.686597702223792*^9, 
  3.686597718607204*^9}, {3.6866864180615396`*^9, 3.686686434028274*^9}, {
  3.686686470085545*^9, 3.686686492084579*^9}, {3.6866867209202023`*^9, 
  3.6866867288790693`*^9}, {3.686688904126451*^9, 3.686688927317631*^9}, {
  3.686690609671665*^9, 3.686690631526969*^9}, {3.6866914939207697`*^9, 
  3.686691512055841*^9}, {3.6866947461779213`*^9, 3.6866947609130087`*^9}, {
  3.686695065461287*^9, 3.686695072155966*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"d\[Tau]ijdqhkqj", "[", 
   RowBox[{
   "qh1_", ",", "qh2_", ",", "qh3_", ",", "q1_", ",", "q2_", ",", "q3_", ",", 
    "n1_", ",", "n2_"}], "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"tau", "[", 
         RowBox[{"qh1", ",", "qh2", ",", "qh3", ",", "n1", ",", "n2"}], "]"}],
         ",", 
        RowBox[{"{", "qh1", "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"tau", "[", 
         RowBox[{"qh1", ",", "qh2", ",", "qh3", ",", "n1", ",", "n2"}], "]"}],
         ",", 
        RowBox[{"{", "qh2", "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"tau", "[", 
         RowBox[{"qh1", ",", "qh2", ",", "qh3", ",", "n1", ",", "n2"}], "]"}],
         ",", 
        RowBox[{"{", "qh3", "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}]}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.668364256022263*^9, 3.668364506356309*^9}, {
   3.668365457840653*^9, 3.668365476000698*^9}, {3.668366446862245*^9, 
   3.668366449262941*^9}, {3.668369528940958*^9, 3.668369568086933*^9}, {
   3.668370025436945*^9, 3.6683700342368937`*^9}, 3.669216943511149*^9, {
   3.686596468882965*^9, 3.686596537963072*^9}, {3.686597009592434*^9, 
   3.686597015696066*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"q1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"qh1", " ", 
          SqrtBox[
           RowBox[{"g", " ", "qh1"}]]}], "+", 
         RowBox[{"2", " ", "n1", " ", "qh2"}], "+", 
         RowBox[{"2", " ", "n2", " ", "qh3"}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["qh1", "2"]}]], ",", 
     FractionBox[
      RowBox[{"q2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"qh1", " ", 
          SqrtBox[
           RowBox[{"g", " ", "qh1"}]]}], "+", 
         RowBox[{"2", " ", "n1", " ", "qh2"}], "+", 
         RowBox[{"2", " ", "n2", " ", "qh3"}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["qh1", "2"]}]], ",", 
     FractionBox[
      RowBox[{"q3", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"qh1", " ", 
          SqrtBox[
           RowBox[{"g", " ", "qh1"}]]}], "+", 
         RowBox[{"2", " ", "n1", " ", "qh2"}], "+", 
         RowBox[{"2", " ", "n2", " ", "qh3"}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["qh1", "2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"n1", " ", "q1"}], "qh1"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"n1", " ", "q2"}], "qh1"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"n1", " ", "q3"}], "qh1"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"n2", " ", "q1"}], "qh1"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"n2", " ", "q2"}], "qh1"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"n2", " ", "q3"}], "qh1"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.668364436533477*^9, 3.668364458241825*^9}, {
   3.668364491476303*^9, 3.668364507332704*^9}, {3.6683654670318213`*^9, 
   3.668365476504595*^9}, {3.668366451563079*^9, 3.6683664776002617`*^9}, 
   3.668366836535967*^9, 3.66836953432246*^9, 3.6683695694641*^9, 
   3.668369999728497*^9, 3.668370034969783*^9, {3.669216928829192*^9, 
   3.6692169439640102`*^9}, 3.6693137691269836`*^9, 3.6693290946528893`*^9, 
   3.68659610627127*^9, {3.686596512457081*^9, 3.686596538637677*^9}, {
   3.686597010979484*^9, 3.686597016230761*^9}, 3.6865977211298027`*^9, {
   3.6866845785024843`*^9, 3.686684589946341*^9}, 3.6866853436749563`*^9, 
   3.686686439998913*^9, {3.686686479596774*^9, 3.686686493877112*^9}, 
   3.686686734870886*^9, 3.6866889304704647`*^9, 3.686690267892283*^9, 
   3.686690310476573*^9, 3.6866906399910307`*^9, 3.6866906924360237`*^9, 
   3.686691516241486*^9, 3.6866947631022043`*^9, 3.686741806393018*^9, 
   3.686760335038732*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", 
  RowBox[{"Transpose", "[", "%", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.686690269707686*^9, 3.6866902732825193`*^9}, {
  3.686690316948708*^9, 3.686690324723263*^9}}],

Cell["\<\
List(List((q1*(qh1*Sqrt(g*qh1) + 2*n1*qh2 + \
2*n2*qh3))/(2.*Power(qh1,2)),-((n1*q1)/qh1),-((n2*q1)/qh1)),
   List((q2*(qh1*Sqrt(g*qh1) + 2*n1*qh2 + \
2*n2*qh3))/(2.*Power(qh1,2)),-((n1*q2)/qh1),-((n2*q2)/qh1)),
   List((q3*(qh1*Sqrt(g*qh1) + 2*n1*qh2 + \
2*n2*qh3))/(2.*Power(qh1,2)),-((n1*q3)/qh1),-((n2*q3)/qh1)))\
\>", "Output",
 CellChangeTimes->{3.686690273980547*^9, 3.686690325201488*^9, 
  3.686690695131118*^9, 3.6867418142209387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"d\[Tau]ijdqhkqj", "[", 
   RowBox[{
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"-", "1"}], ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.668364520844158*^9, 3.668364560900473*^9}, {
   3.668366485478314*^9, 3.668366498733882*^9}, {3.668366628319829*^9, 
   3.668366632559482*^9}, {3.668366815346673*^9, 3.6683668642264547`*^9}, {
   3.668369957435484*^9, 3.668369976670966*^9}, {3.668370040868428*^9, 
   3.668370081012514*^9}, {3.668370167894087*^9, 3.6683701786936693`*^9}, {
   3.6683791785635223`*^9, 3.6683792063553534`*^9}, 3.668379237460026*^9, {
   3.669217001893815*^9, 3.6692170098783617`*^9}, {3.669218363448637*^9, 
   3.669218410840332*^9}, {3.6693291480142508`*^9, 3.6693291502779284`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.5082`", ",", "0.`", ",", "0.6657605092162844`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`", ",", "0.4414272040951362`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6683668646317987`*^9, {3.66836996194659*^9, 3.668370003192081*^9}, {
   3.668370045191937*^9, 3.668370051437685*^9}, 3.66837008181212*^9, 
   3.668370179230692*^9, 3.668379238077717*^9, {3.669217003415866*^9, 
   3.669217010460012*^9}, 3.669218413611065*^9, 3.669313771731708*^9, 
   3.669329097159006*^9, 3.669329150846182*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"tau", "[", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["q", "^"], "1"], ",", 
      SubscriptBox[
       OverscriptBox["q", "^"], "2"], ",", 
      SubscriptBox[
       OverscriptBox["q", "^"], "3"], ",", 
      SubscriptBox["n", "1"], ",", 
      SubscriptBox["n", "2"]}], "]"}], ",", 
    SubscriptBox[
     OverscriptBox["q", "^"], "1"]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6678565430445766`*^9, 3.6678565626756563`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["q", "^"], "1"], " ", 
        SqrtBox[
         RowBox[{"g", " ", 
          SubscriptBox[
           OverscriptBox["q", "^"], "1"]}]]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["n", "1"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "2"]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["n", "2"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "3"]}]}], 
      RowBox[{"2", " ", 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "2"]}]], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["q", "^"], "1"], " ", 
        SqrtBox[
         RowBox[{"g", " ", 
          SubscriptBox[
           OverscriptBox["q", "^"], "1"]}]]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["n", "1"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "2"]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["n", "2"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "3"]}]}], 
      RowBox[{"2", " ", 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "2"]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["q", "^"], "1"], " ", 
        SqrtBox[
         RowBox[{"g", " ", 
          SubscriptBox[
           OverscriptBox["q", "^"], "1"]}]]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["n", "1"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "2"]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["n", "2"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "3"]}]}], 
      RowBox[{"2", " ", 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.667856545717669*^9, 3.6678565631706657`*^9}, 
   3.6693137733588457`*^9, 3.6865979158466873`*^9, 3.686741820392097*^9, 
   3.6867603464691963`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"tau", "[", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["q", "^"], "1"], ",", 
       SubscriptBox[
        OverscriptBox["q", "^"], "2"], ",", 
       SubscriptBox[
        OverscriptBox["q", "^"], "3"], ",", 
       SubscriptBox["n", "1"], ",", 
       SubscriptBox["n", "2"]}], "]"}], ",", 
     SubscriptBox[
      OverscriptBox["q", "^"], "1"]}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["q", "^"], "1"], ",", 
     SubscriptBox[
      OverscriptBox["q", "^"], "2"], ",", 
     SubscriptBox[
      OverscriptBox["q", "^"], "3"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.667585700210175*^9, 3.66758572966441*^9}, {
  3.667585977317697*^9, 3.667585985219808*^9}, {3.667586028300396*^9, 
  3.667586033140554*^9}, {3.6675860634208508`*^9, 3.667586070933133*^9}, {
  3.6675867837263823`*^9, 3.6675868969523993`*^9}, {3.667589163094808*^9, 
  3.6675891731015577`*^9}, {3.6678488700674133`*^9, 3.6678490586588907`*^9}, {
  3.667849833678089*^9, 3.667849833857904*^9}, {3.667850378291691*^9, 
  3.66785037854747*^9}, {3.667851511051722*^9, 3.6678515113037252`*^9}, {
  3.6678520442184362`*^9, 3.66785204440977*^9}, {3.66785212075596*^9, 
  3.667852120940878*^9}, {3.667852309846012*^9, 3.6678523345818167`*^9}, {
  3.66785542170296*^9, 3.667855422093688*^9}, {3.6678555301347237`*^9, 
  3.6678555303155003`*^9}, {3.667855870443965*^9, 3.6678558705959167`*^9}, {
  3.667856766047209*^9, 3.667856766192214*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      SubscriptBox[
       OverscriptBox["q", "^"], "1"], " ", 
      SqrtBox[
       RowBox[{"g", " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "1"]}]]}], "+", 
     RowBox[{"2", " ", 
      SubscriptBox["n", "1"], " ", 
      SubscriptBox[
       OverscriptBox["q", "^"], "2"]}], "+", 
     RowBox[{"2", " ", 
      SubscriptBox["n", "2"], " ", 
      SubscriptBox[
       OverscriptBox["q", "^"], "3"]}]}], 
    RowBox[{"2", " ", 
     SubscriptBox[
      OverscriptBox["q", "^"], "1"]}]], ",", 
   FractionBox[
    RowBox[{
     SubscriptBox[
      OverscriptBox["q", "^"], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["q", "^"], "1"], " ", 
        SqrtBox[
         RowBox[{"g", " ", 
          SubscriptBox[
           OverscriptBox["q", "^"], "1"]}]]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["n", "1"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "2"]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["n", "2"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "3"]}]}], ")"}]}], 
    RowBox[{"2", " ", 
     SubsuperscriptBox[
      OverscriptBox["q", "^"], "1", "2"]}]], ",", 
   FractionBox[
    RowBox[{
     SubscriptBox[
      OverscriptBox["q", "^"], "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["q", "^"], "1"], " ", 
        SqrtBox[
         RowBox[{"g", " ", 
          SubscriptBox[
           OverscriptBox["q", "^"], "1"]}]]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["n", "1"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "2"]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["n", "2"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "3"]}]}], ")"}]}], 
    RowBox[{"2", " ", 
     SubsuperscriptBox[
      OverscriptBox["q", "^"], "1", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.667852335630501*^9, 3.667852369177619*^9}, 
   3.667855422882242*^9, 3.667855531150214*^9, 3.6678557674433107`*^9, 
   3.667855872465427*^9, 3.667856766749379*^9, 3.669313774975926*^9, 
   3.686686960829421*^9, 3.686760349285205*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.66784877541783*^9, 3.667848787886204*^9}, {
  3.6678488417923813`*^9, 3.667848842143598*^9}}],

Cell["\<\
\\left\\{\\frac{2 n_1 \\hat{q}_2+2 n_2 \\hat{q}_3+\\hat{q}_1^{3/2}}{2
   \\hat{q}_1},\\frac{\\hat{q}_2 \\left(2 n_1 \\hat{q}_2+2 n_2
   \\hat{q}_3+\\hat{q}_1^{3/2}\\right)}{2 \\hat{q}_1^2},\\frac{\\hat{q}_3 \
\\left(2
   n_1 \\hat{q}_2+2 n_2 \\hat{q}_3+\\hat{q}_1^{3/2}\\right)}{2
   \\hat{q}_1^2}\\right\\}\
\>", "Output",
 CellChangeTimes->{
  3.667848843191544*^9, 3.667849068710487*^9, 3.667849841486986*^9, 
   3.667850381546481*^9, 3.667851526458538*^9, {3.667852035584065*^9, 
   3.667852049771681*^9}, 3.667852140601549*^9, 3.6678523458197603`*^9, 
   3.6678554265663853`*^9, 3.66785553514815*^9, 3.667856770241433*^9, 
   3.669313776124853*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"An1", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "q2"}], "*", 
        RowBox[{
         RowBox[{"q2", "/", "q1"}], "/", "q1"}]}], "+", "q1"}], ",", 
      RowBox[{"2", "*", 
       RowBox[{"q2", "/", "q1"}]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "q2"}], "*", 
       RowBox[{
        RowBox[{"q3", "/", "q1"}], "/", "q1"}]}], ",", 
      RowBox[{"q3", "/", "q1"}], ",", 
      RowBox[{"q2", "/", "q1"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.668115528624702*^9, 3.6681155811941347`*^9}, {
  3.668115663539152*^9, 3.6681156904920263`*^9}, {3.668115775661502*^9, 
  3.668115777165204*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"An2", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "q2"}], "*", 
       RowBox[{
        RowBox[{"q3", "/", "q1"}], "/", "q1"}]}], ",", 
      RowBox[{"q3", "/", "q1"}], ",", 
      RowBox[{"q2", "/", "q1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "q3"}], "*", 
        RowBox[{
         RowBox[{"q3", "/", "q1"}], "/", "q1"}]}], "+", "q1"}], ",", "0", ",", 
      RowBox[{"2", "*", 
       RowBox[{"q3", "/", "q1"}]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.668115695131*^9, 3.6681157512367973`*^9}, {
  3.66811578168541*^9, 3.6681157830760202`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"An", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"An1", "[", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "]"}], "*", "n1"}], "+", 
   RowBox[{
    RowBox[{"An2", "[", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "]"}], "*", "n2"}]}]}]], "Input",
 CellChangeTimes->{{3.668115786354007*^9, 3.668115825605117*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"An", "[", 
  RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "]"}]], "Input",\

 CellChangeTimes->{{3.669558134241651*^9, 3.669558141628241*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "n1", ",", "n2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"n1", " ", 
       RowBox[{"(", 
        RowBox[{"q1", "-", 
         FractionBox[
          SuperscriptBox["q2", "2"], 
          SuperscriptBox["q1", "2"]]}], ")"}]}], "-", 
      FractionBox[
       RowBox[{"n2", " ", "q2", " ", "q3"}], 
       SuperscriptBox["q1", "2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", "n1", " ", "q2"}], "q1"], "+", 
      FractionBox[
       RowBox[{"n2", " ", "q3"}], "q1"]}], ",", 
     FractionBox[
      RowBox[{"n2", " ", "q2"}], "q1"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"n1", " ", "q2", " ", "q3"}], 
        SuperscriptBox["q1", "2"]]}], "+", 
      RowBox[{"n2", " ", 
       RowBox[{"(", 
        RowBox[{"q1", "-", 
         FractionBox[
          SuperscriptBox["q3", "2"], 
          SuperscriptBox["q1", "2"]]}], ")"}]}]}], ",", 
     FractionBox[
      RowBox[{"n1", " ", "q3"}], "q1"], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"n1", " ", "q2"}], "q1"], "+", 
      FractionBox[
       RowBox[{"2", " ", "n2", " ", "q3"}], "q1"]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.669558142115815*^9, 3.686760367916388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"An", "[", 
   RowBox[{
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"-", "1"}], ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.66837026265974*^9, 3.6683702789354467`*^9}, {
  3.6692186592600517`*^9, 3.66921867822752*^9}, {3.669328987388261*^9, 
  3.669328990259533*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "1.`"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9.09866896`"}], ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "0.4414272040951362`"}], ",", "0.`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6683702750570107`*^9, 3.668370279330675*^9}, 
   3.6692150386322823`*^9, 3.6692186788194437`*^9, 3.6693137867382593`*^9, 
   3.669328557923183*^9, 3.669328909517003*^9, 3.669328990859128*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"An", "[", 
  RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "]"}]], "Input",\

 CellChangeTimes->{{3.6695534726537037`*^9, 3.6695534813827257`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "n1", ",", "n2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"n1", " ", 
       RowBox[{"(", 
        RowBox[{"q1", "-", 
         FractionBox[
          SuperscriptBox["q2", "2"], 
          SuperscriptBox["q1", "2"]]}], ")"}]}], "-", 
      FractionBox[
       RowBox[{"n2", " ", "q2", " ", "q3"}], 
       SuperscriptBox["q1", "2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", "n1", " ", "q2"}], "q1"], "+", 
      FractionBox[
       RowBox[{"n2", " ", "q3"}], "q1"]}], ",", 
     FractionBox[
      RowBox[{"n2", " ", "q2"}], "q1"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"n1", " ", "q2", " ", "q3"}], 
        SuperscriptBox["q1", "2"]]}], "+", 
      RowBox[{"n2", " ", 
       RowBox[{"(", 
        RowBox[{"q1", "-", 
         FractionBox[
          SuperscriptBox["q3", "2"], 
          SuperscriptBox["q1", "2"]]}], ")"}]}]}], ",", 
     FractionBox[
      RowBox[{"n1", " ", "q3"}], "q1"], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"n1", " ", "q2"}], "q1"], "+", 
      FractionBox[
       RowBox[{"2", " ", "n2", " ", "q3"}], "q1"]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.66955348225357*^9, 3.686760370730481*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"An", "[", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["q", "^"], "1"], ",", 
     SubscriptBox[
      OverscriptBox["q", "^"], "2"], ",", 
     SubscriptBox[
      OverscriptBox["q", "^"], "3"], ",", 
     SubscriptBox["n", "1"], ",", 
     SubscriptBox["n", "2"]}], "]"}], ",", 
   SubscriptBox[
    OverscriptBox["q", "^"], "1"]}], "]"}]], "Input",
 CellChangeTimes->{{3.66955325832938*^9, 3.669553262363893*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["n", "1"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", 
           SubsuperscriptBox[
            OverscriptBox["q", "^"], "2", "2"]}], 
          SubsuperscriptBox[
           OverscriptBox["q", "^"], "1", "3"]]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SubscriptBox["n", "2"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "2"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "3"]}], 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "3"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SubscriptBox["n", "1"], " ", 
         SubscriptBox[
          OverscriptBox["q", "^"], "2"]}], 
        SubsuperscriptBox[
         OverscriptBox["q", "^"], "1", "2"]]}], "-", 
      FractionBox[
       RowBox[{
        SubscriptBox["n", "2"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "3"]}], 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "2"]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SubscriptBox["n", "2"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "2"]}], 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "2"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SubscriptBox["n", "1"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "2"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "3"]}], 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "3"]], "+", 
      RowBox[{
       SubscriptBox["n", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", 
           SubsuperscriptBox[
            OverscriptBox["q", "^"], "3", "2"]}], 
          SubsuperscriptBox[
           OverscriptBox["q", "^"], "1", "3"]]}], ")"}]}]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SubscriptBox["n", "1"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "3"]}], 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "2"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SubscriptBox["n", "1"], " ", 
         SubscriptBox[
          OverscriptBox["q", "^"], "2"]}], 
        SubsuperscriptBox[
         OverscriptBox["q", "^"], "1", "2"]]}], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        SubscriptBox["n", "2"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "3"]}], 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.669553273691927*^9, 3.6867603720950623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"An", "[", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["q", "^"], "1"], ",", 
       SubscriptBox[
        OverscriptBox["q", "^"], "2"], ",", 
       SubscriptBox[
        OverscriptBox["q", "^"], "3"], ",", 
       SubscriptBox["n", "1"], ",", 
       SubscriptBox["n", "2"]}], "]"}], ",", 
     SubscriptBox[
      OverscriptBox["q", "^"], "1"]}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["q", "^"], "1"], ",", 
     SubscriptBox[
      OverscriptBox["q", "^"], "2"], ",", 
     SubscriptBox[
      OverscriptBox["q", "^"], "3"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6681157618518963`*^9, 3.668115770364471*^9}, {
  3.668115901943606*^9, 3.668115915243833*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    SubscriptBox["n", "1"], " ", 
    SubscriptBox[
     OverscriptBox["q", "^"], "1"]}], ",", 
   RowBox[{
    SubscriptBox["n", "2"], " ", 
    SubscriptBox[
     OverscriptBox["q", "^"], "1"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.669313790950486*^9, 3.686760375871357*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"An", "[", 
     RowBox[{"qh1", ",", "qh2", ",", "qh3", ",", "n1", ",", "n2"}], "]"}], 
    ",", "qh3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.669313686892836*^9, 3.669313696389385*^9}, {
  3.669313798751235*^9, 3.6693138304790497`*^9}, {3.669313866136813*^9, 
  3.669313883919354*^9}, {3.669314136795775*^9, 3.669314136874605*^9}, {
  3.669316840589522*^9, 3.6693168407488413`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"n2", " ", "qh2"}], 
       SuperscriptBox["qh1", "2"]]}], ",", 
     FractionBox["n2", "qh1"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "qh2"}], "+", 
        RowBox[{"2", " ", "n2", " ", "qh3"}]}], 
       SuperscriptBox["qh1", "2"]]}], ",", 
     FractionBox["n1", "qh1"], ",", 
     FractionBox[
      RowBox[{"2", " ", "n2"}], "qh1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.669313804070977*^9, 3.6693138315526323`*^9}, 
   3.669313885049786*^9, 3.669314137343596*^9, 3.669316713764276*^9, 
   3.6693168414346647`*^9, 3.686760377130795*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "n1", " ", "qh2"}], "+", 
         RowBox[{"n2", " ", "qh3"}]}], 
        SuperscriptBox["qh1", "2"]]}], ",", 
      FractionBox[
       RowBox[{"2", " ", "n1"}], "qh1"], ",", 
      FractionBox["n2", "qh1"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"n1", " ", "qh3"}], 
        SuperscriptBox["qh1", "2"]]}], ",", "0", ",", 
      FractionBox["n1", "qh1"]}], "}"}]}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "n1", " ", "qh2"}], "+", 
         RowBox[{"n2", " ", "qh3"}]}], 
        SuperscriptBox["qh1", "2"]]}], 
      FractionBox[
       RowBox[{"2", " ", "n1"}], "qh1"], 
      FractionBox["n2", "qh1"]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"n1", " ", "qh3"}], 
        SuperscriptBox["qh1", "2"]]}], "0", 
      FractionBox["n1", "qh1"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.669314154144924*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6693138886852703`*^9, 3.66931389463126*^9}}],

Cell["\<\
List(List(0,0,0),List(-((n2*qh2)/Power(qh1,2)),n2/qh1,0),
   List(-((n1*qh2 + 2*n2*qh3)/Power(qh1,2)),n1/qh1,(2*n2)/qh1))\
\>", "Output",
 CellChangeTimes->{3.669313895012854*^9, 3.669316728714015*^9, 
  3.6693168437431793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dAikdqhjqk", "[", 
   RowBox[{
   "qh1_", ",", "qh2_", ",", "qh3_", ",", "q1_", ",", "q2_", ",", "q3_", ",", 
    "n1_", ",", "n2_"}], "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"An", "[", 
       RowBox[{"qh1", ",", "qh2", ",", "qh3", ",", "n1", ",", "n2"}], "]"}], 
      ",", "qh1"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6681159560631733`*^9, 3.668115983879512*^9}, {
  3.668370493330562*^9, 3.668370591100123*^9}, {3.668370671886541*^9, 
  3.668370765038093*^9}, {3.668370946881021*^9, 3.668370964608068*^9}, {
  3.669219100345808*^9, 3.669219113609064*^9}, {3.669228473193041*^9, 
  3.66922849728109*^9}, {3.66922872210071*^9, 3.669228722171912*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox[
    RowBox[{
     RowBox[{"n1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "q2", " ", "qh1", " ", "qh2"}], "+", 
        RowBox[{"q1", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["qh1", "3"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["qh2", "2"]}]}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{"n2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"q3", " ", "qh1", " ", "qh2"}], "+", 
        RowBox[{"q2", " ", "qh1", " ", "qh3"}], "-", 
        RowBox[{"2", " ", "q1", " ", "qh2", " ", "qh3"}]}], ")"}]}]}], 
    SuperscriptBox["qh1", "3"]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "n1"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"q3", " ", "qh1", " ", "qh2"}], "+", 
        RowBox[{"q2", " ", "qh1", " ", "qh3"}], "-", 
        RowBox[{"2", " ", "q1", " ", "qh2", " ", "qh3"}]}], ")"}]}], "+", 
     RowBox[{"n2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "q3", " ", "qh1", " ", "qh3"}], "+", 
        RowBox[{"q1", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["qh1", "3"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["qh3", "2"]}]}], ")"}]}]}], ")"}]}]}], 
    SuperscriptBox["qh1", "3"]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.668370672421208*^9, 3.66837076925631*^9, {3.66837094754506*^9, 
   3.668370965361519*^9}, 3.669219050774191*^9, {3.6692191010462103`*^9, 
   3.6692191139501963`*^9}, {3.669228473670744*^9, 3.66922849758259*^9}, 
   3.669228722822502*^9, 3.669313051652554*^9, 3.686760384916236*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dAikdqh1", "[", 
   RowBox[{"qh1_", ",", "qh2_", ",", "qh3_", ",", "n1_", ",", "n2_"}], "]"}], 
  "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"An", "[", 
      RowBox[{"qh1", ",", "qh2", ",", "qh3", ",", "n1", ",", "n2"}], "]"}], 
     ",", "qh3"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6693294905541677`*^9, 3.6693295129388657`*^9}, {
  3.669329697173772*^9, 3.669329697237843*^9}, {3.6693297308301287`*^9, 
  3.669329730892922*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"n2", " ", "qh2"}], 
       SuperscriptBox["qh1", "2"]]}], ",", 
     FractionBox["n2", "qh1"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "qh2"}], "+", 
        RowBox[{"2", " ", "n2", " ", "qh3"}]}], 
       SuperscriptBox["qh1", "2"]]}], ",", 
     FractionBox["n1", "qh1"], ",", 
     FractionBox[
      RowBox[{"2", " ", "n2"}], "qh1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.669329516800351*^9, 3.6693296977788773`*^9, 
  3.6693297316843853`*^9, 3.6867603868636923`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"dAikdqh1", "[", 
   RowBox[{
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"-", "1"}], ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.669329553617095*^9, 3.6693295934272623`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "0.10990618566256752`"}], ",", "0.`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.669329594947516*^9, 3.669329699715575*^9, 
  3.669329734970028*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"dAikdqhjqk", "[", 
   RowBox[{
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"qsatpoint", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", "0", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6683706086273108`*^9, 3.6683706606122007`*^9}, {
  3.669219014384078*^9, 3.669219045681623*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", 
   RowBox[{"-", "9.09866896`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6683706614871264`*^9, 3.6683706748081017`*^9}, 
   3.668370772295608*^9, {3.6683709496927853`*^9, 3.6683709671940727`*^9}, {
   3.6692190470764923`*^9, 3.669219052287443*^9}, {3.669219103453176*^9, 
   3.6692191178925247`*^9}, {3.669228466685441*^9, 3.669228498986032*^9}, 
   3.669228724469964*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"An", "[", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["q", "^"], "1"], ",", 
      SubscriptBox[
       OverscriptBox["q", "^"], "2"], ",", 
      SubscriptBox[
       OverscriptBox["q", "^"], "3"], ",", 
      SubscriptBox["n", "1"], ",", 
      SubscriptBox["n", "2"]}], "]"}], ",", 
    SubscriptBox[
     OverscriptBox["q", "^"], "2"]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6681652474889383`*^9, 3.668165250056931*^9}, {
  3.668165759745265*^9, 3.668165780798071*^9}, {3.668165901643427*^9, 
  3.668165915866364*^9}, {3.668167265277388*^9, 3.668167265433136*^9}, {
  3.668168122872252*^9, 3.6681681229431963`*^9}, {3.6681683897959137`*^9, 
  3.668168391051154*^9}, {3.6681685131890287`*^9, 3.66816851335688*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", 
         SubscriptBox["n", "1"], " ", 
         SubscriptBox[
          OverscriptBox["q", "^"], "2"]}], "+", 
        RowBox[{
         SubscriptBox["n", "2"], " ", 
         SubscriptBox[
          OverscriptBox["q", "^"], "3"]}]}], 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "2"]]}], ",", 
     FractionBox[
      RowBox[{"2", " ", 
       SubscriptBox["n", "1"]}], 
      SubscriptBox[
       OverscriptBox["q", "^"], "1"]], ",", 
     FractionBox[
      SubscriptBox["n", "2"], 
      SubscriptBox[
       OverscriptBox["q", "^"], "1"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SubscriptBox["n", "1"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "3"]}], 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "2"]]}], ",", "0", ",", 
     FractionBox[
      SubscriptBox["n", "1"], 
      SubscriptBox[
       OverscriptBox["q", "^"], "1"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.668165845063018*^9, {3.668165902376871*^9, 3.6681659161909027`*^9}, 
   3.668167266116519*^9, 3.668168123646343*^9, 3.668168391509713*^9, 
   3.668168513961604*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "%21", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         SubscriptBox["n", "1"], " ", 
         SubsuperscriptBox[
          OverscriptBox["q", "^"], "1", "3"]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["n", "1"], " ", 
         SubsuperscriptBox[
          OverscriptBox["q", "^"], "2", "2"]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["n", "2"], " ", 
         SubscriptBox[
          OverscriptBox["q", "^"], "2"], " ", 
         SubscriptBox[
          OverscriptBox["q", "^"], "3"]}]}], 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "3"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["n", "1"], " ", 
          SubscriptBox[
           OverscriptBox["q", "^"], "2"]}], "+", 
         RowBox[{
          SubscriptBox["n", "2"], " ", 
          SubscriptBox[
           OverscriptBox["q", "^"], "3"]}]}], 
        SubsuperscriptBox[
         OverscriptBox["q", "^"], "1", "2"]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SubscriptBox["n", "2"], " ", 
         SubscriptBox[
          OverscriptBox["q", "^"], "2"]}], 
        SubsuperscriptBox[
         OverscriptBox["q", "^"], "1", "2"]]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         SubscriptBox["n", "2"], " ", 
         SubsuperscriptBox[
          OverscriptBox["q", "^"], "1", "3"]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["n", "1"], " ", 
         SubscriptBox[
          OverscriptBox["q", "^"], "2"], " ", 
         SubscriptBox[
          OverscriptBox["q", "^"], "3"]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["n", "2"], " ", 
         SubsuperscriptBox[
          OverscriptBox["q", "^"], "3", "2"]}]}], 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "3"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SubscriptBox["n", "1"], " ", 
         SubscriptBox[
          OverscriptBox["q", "^"], "3"]}], 
        SubsuperscriptBox[
         OverscriptBox["q", "^"], "1", "2"]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          SubscriptBox["n", "1"], " ", 
          SubscriptBox[
           OverscriptBox["q", "^"], "2"]}], "+", 
         RowBox[{"2", " ", 
          SubscriptBox["n", "2"], " ", 
          SubscriptBox[
           OverscriptBox["q", "^"], "3"]}]}], 
        SubsuperscriptBox[
         OverscriptBox["q", "^"], "1", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.668168129185989*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "%19", "]"}]], "Input",
 CellChangeTimes->{{3.668167925997755*^9, 3.668167927005335*^9}},
 NumberMarks->False],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "0", "0"},
    {
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", 
         SubscriptBox["n", "1"], " ", 
         SubscriptBox[
          OverscriptBox["q", "^"], "2"]}], "+", 
        RowBox[{
         SubscriptBox["n", "2"], " ", 
         SubscriptBox[
          OverscriptBox["q", "^"], "3"]}]}], 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "2"]]}], 
     FractionBox[
      RowBox[{"2", " ", 
       SubscriptBox["n", "1"]}], 
      SubscriptBox[
       OverscriptBox["q", "^"], "1"]], 
     FractionBox[
      SubscriptBox["n", "2"], 
      SubscriptBox[
       OverscriptBox["q", "^"], "1"]]},
    {
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SubscriptBox["n", "1"], " ", 
        SubscriptBox[
         OverscriptBox["q", "^"], "3"]}], 
       SubsuperscriptBox[
        OverscriptBox["q", "^"], "1", "2"]]}], "0", 
     FractionBox[
      SubscriptBox["n", "1"], 
      SubscriptBox[
       OverscriptBox["q", "^"], "1"]]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.66816690380124*^9, 3.668167928475521*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["An Example for NSWE :", "Subsubsection",
 CellChangeTimes->{3.670108735739663*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"qs", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"2", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{"Sin", "[", 
       RowBox[{"x", "+", "y", "-", "t"}], "]"}], "]"}]}], ",", 
    RowBox[{"Cos", "[", 
     RowBox[{"x", "-", 
      RowBox[{"4", "t"}]}], "]"}], ",", 
    RowBox[{"Sin", "[", 
     RowBox[{"y", "+", 
      RowBox[{"4", "t"}]}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.667666129664185*^9, 3.6676661627533207`*^9}, {
   3.667666958500176*^9, 3.66766708166934*^9}, {3.6676685018004313`*^9, 
   3.6676685438164883`*^9}, {3.6676685778332777`*^9, 
   3.6676686018490057`*^9}, {3.667668643458041*^9, 3.667668652145905*^9}, {
   3.667668741339188*^9, 3.6676687481852016`*^9}, {3.667668810628656*^9, 
   3.667668823011815*^9}, {3.6676688589807587`*^9, 3.6676688910851793`*^9}, {
   3.667670644972453*^9, 3.667670647153076*^9}, {3.6676706774369164`*^9, 
   3.66767070374365*^9}, {3.667671023928688*^9, 3.667671040175767*^9}, {
   3.6676710871608953`*^9, 3.6676711205205307`*^9}, {3.669211900580481*^9, 
   3.66921190201204*^9}, {3.669225692723792*^9, 3.6692257047515497`*^9}, {
   3.669305139453409*^9, 3.669305140244361*^9}, {3.6693054039123096`*^9, 
   3.669305404255639*^9}, {3.669305436200746*^9, 3.669305436640128*^9}, {
   3.669305631403688*^9, 3.669305652618903*^9}, {3.669652912524909*^9, 
   3.6696529777813873`*^9}, {3.669660446957718*^9, 3.669660449288824*^9}, {
   3.669660487543297*^9, 3.669660497542804*^9}, {3.66967491070337*^9, 
   3.669674972335142*^9}, {3.66967650107407*^9, 3.669676569696385*^9}, {
   3.6697187479179153`*^9, 3.669718748100896*^9}, {3.669718919386834*^9, 
   3.6697189244680023`*^9}, {3.669724711509259*^9, 3.669724711661353*^9}, {
   3.669725486292758*^9, 3.66972550745049*^9}, {3.669726981116714*^9, 
   3.66972698621459*^9}, {3.669729730931666*^9, 3.669729735235194*^9}, {
   3.6697394191337147`*^9, 3.669739422231223*^9}, {3.6697395432452*^9, 
   3.669739545101584*^9}, {3.66974820058462*^9, 3.669748212813113*^9}, {
   3.669748812300913*^9, 3.6697488152365227`*^9}, {3.669753765966343*^9, 
   3.669753774134054*^9}, {3.669758170553177*^9, 3.669758171256647*^9}, {
   3.669915152530286*^9, 3.669915171401554*^9}, {3.669992972549979*^9, 
   3.669992984789507*^9}, {3.670711793529868*^9, 3.670711798588663*^9}, {
   3.6708648319901648`*^9, 3.670864878022135*^9}, {3.6721619550040483`*^9, 
   3.672162030660679*^9}, {3.6721620648854856`*^9, 3.672162075029381*^9}, {
   3.67216336859256*^9, 3.672163424055016*^9}, {3.672163466350726*^9, 
   3.6721634666389503`*^9}, {3.6721635420663033`*^9, 3.672163548158029*^9}, {
   3.67216362183272*^9, 3.6721636227844553`*^9}, {3.672163777557637*^9, 
   3.672163788920619*^9}, {3.672165191582872*^9, 3.672165221826792*^9}, {
   3.672165322120676*^9, 3.672165357456353*^9}, {3.672165389305607*^9, 
   3.672165389600333*^9}, {3.6721654858829327`*^9, 3.672165519578837*^9}, {
   3.672165587844412*^9, 3.6721655941395903`*^9}, {3.672165693733514*^9, 
   3.67216569414085*^9}, {3.672165757174314*^9, 3.672165764269692*^9}, {
   3.672165804094974*^9, 3.672165935000437*^9}, {3.6721659976659403`*^9, 
   3.67216604268958*^9}, {3.672166230669282*^9, 3.672166258797752*^9}, {
   3.6721662928775187`*^9, 3.672166293716963*^9}, {3.6721663997109947`*^9, 
   3.6721664233909893`*^9}, {3.672166553673292*^9, 3.672166570568142*^9}, {
   3.672166618569909*^9, 3.672166701786734*^9}, {3.6721672976671886`*^9, 
   3.672167321546853*^9}, {3.672167369044611*^9, 3.672167466220686*^9}, {
   3.672171521915679*^9, 3.672171522866726*^9}, 3.6721724129173393`*^9, {
   3.6721733605222597`*^9, 3.672173399234089*^9}, {3.672173440034627*^9, 
   3.6721734413147583`*^9}, {3.672173519908243*^9, 3.6721735577961493`*^9}, 
   3.672173974457789*^9, {3.6721754668866653`*^9, 3.67217547008591*^9}, {
   3.686664316452497*^9, 3.686664324044017*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"qs", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"2", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{"Sin", "[", 
       RowBox[{"x", "+", "y", "+", "t"}], "]"}], "]"}]}], ",", 
    RowBox[{
     FractionBox["1", "3"], 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"2", "x"}], "-", "t"}], "]"}]}], ",", 
    RowBox[{"Cos", "[", 
     RowBox[{"y", "+", "t"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.685990492701339*^9, 3.685990535759516*^9}, {
  3.685990582536261*^9, 3.68599062209656*^9}, {3.68599070129781*^9, 
  3.685990787466549*^9}, {3.685990974933*^9, 3.685990979156547*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"qs", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.685991184013515*^9, 3.685991200878467*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"Cos", "[", 
    RowBox[{"x", "+", 
     RowBox[{"2", "y"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.685991079273533*^9, 3.685991104237574*^9}, 
   3.685991161544656*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", 
  RowBox[{"qs", "[", 
   RowBox[{"x", ",", "y", ",", "t"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6723245053268757`*^9, 3.6723245230444717`*^9}}],

Cell["\<\
\\left\\{e^{\\sin (t+x+y)}+2,-\\frac{1}{3} \\sin (t-2 x),\\cos (t+y)\\right\\}\
\>", "Output",
 CellChangeTimes->{{3.672324509687397*^9, 3.672324523669409*^9}, 
   3.6866639220562763`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", 
  RowBox[{
   RowBox[{"qs", "[", 
    RowBox[{"x0", ",", "y0", ",", "t"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.672168232916882*^9, 3.67216831609503*^9}, {
  3.672168359273226*^9, 3.6721683605284853`*^9}}],

Cell["-Sin(t - 2*x0)/3.", "Output",
 CellChangeTimes->{
  3.672168239802656*^9, {3.672168271691845*^9, 3.672168316434264*^9}, 
   3.672168361148594*^9, 3.6866639325037613`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"F1", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"qs", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"qs", "[", 
         RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "/", 
      RowBox[{
       RowBox[{"qs", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", "g", "*", 
      RowBox[{
       RowBox[{
        RowBox[{"qs", "[", 
         RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "^", "2"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"qs", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "*", 
     RowBox[{
      RowBox[{
       RowBox[{"qs", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"qs", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6676661745725822`*^9, 3.6676661936373463`*^9}, {
  3.667666951651881*^9, 3.66766695469201*^9}, {3.667667213790844*^9, 
  3.667667219853882*^9}, {3.667667250439389*^9, 3.6676673185523357`*^9}, {
  3.6676673756980333`*^9, 3.6676674246022997`*^9}, {3.667667558364127*^9, 
  3.667667558477001*^9}, {3.669660503622876*^9, 3.669660505654767*^9}, {
  3.6866639464802217`*^9, 3.686663947048053*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"F2", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"qs", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"qs", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "*", 
     RowBox[{
      RowBox[{
       RowBox[{"qs", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"qs", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"qs", "[", 
         RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], "^", "2"}], "/", 
      RowBox[{
       RowBox[{"qs", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", "g", "*", 
      RowBox[{
       RowBox[{
        RowBox[{"qs", "[", 
         RowBox[{"x", ",", "y", ",", "t"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "^", "2"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.667667523946157*^9, 3.667667599493649*^9}, 
   3.6696605082685833`*^9, {3.686663960336241*^9, 3.686663960760219*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"qs", "[", 
     RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66803163904827*^9, 3.668031654707209*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"Sin", "[", 
      RowBox[{"t", "+", "x", "+", "y"}], "]"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"t", "+", "x", "+", "y"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "3"]}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"t", "-", 
      RowBox[{"2", " ", "x"}]}], "]"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"Sin", "[", 
     RowBox[{"t", "+", "y"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.668031655351247*^9, 3.669211913080689*^9, 3.669221716223527*^9, 
   3.66922572270662*^9, 3.669228408912689*^9, 3.669305147801971*^9, 
   3.6693054101176558`*^9, 3.6693054414531116`*^9, {3.669305636625472*^9, 
   3.6693056578425627`*^9}, 3.669328495567027*^9, 3.669674982053516*^9, 
   3.669726991597268*^9, 3.66991517877595*^9, 3.6707118062489243`*^9, {
   3.672162456732934*^9, 3.672162467795309*^9}, 3.6859906809844923`*^9, 
   3.685990813111796*^9, 3.685990994156904*^9, 3.6866639670355673`*^9, 
   3.686664347708972*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp1", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"qs", "[", 
       RowBox[{"x0", ",", "y0", ",", "t"}], "]"}], ",", "t"}], "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"x0", ",", "y0", ",", "t"}], "]"}], ",", "x0"}], "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"F2", "[", 
       RowBox[{"x0", ",", "y0", ",", "t"}], "]"}], ",", "y0"}], "]"}], "+", 
    RowBox[{"g", " ", 
     RowBox[{"h", "[", 
      RowBox[{"x0", ",", "y0", ",", "t"}], "]"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        SubscriptBox["\[PartialD]", "x0"], 
        RowBox[{"b", "[", 
         RowBox[{"x0", ",", "y0"}], "]"}]}], ",", 
       RowBox[{
        SubscriptBox["\[PartialD]", "y0"], 
        RowBox[{"b", "[", 
         RowBox[{"x0", ",", "y0"}], "]"}]}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQvexdbF5Q+GvH/9lv8kG00dTGrkggnReo0w2il60W
PvoFSH9yzQPTcWt0ZCRiXjsGJa2RBdFdt1YogmjfiJNg+m3hNR0QvcH2MZie
VDbNGESzaFwB0wUfa53BdNA5MP1eh9esouy1oxKjLJg2ldziAKJXtl8E07um
LQsC0U+3JwaDaFkW3kQQPSPSGkw3XT2SBqI/nK/IAtHCq9TyQfQFBq1SEJ3p
bt8Iok2+CLSA6A7GJ0tBtLg292oQ/arCgrUSSCd4uIFpOaVCBRD96cI7ML2i
qCXqYPlrx6vC08B0GNNPv49AuiqO0x9EAwAgrZgi
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]]}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]]}], ")"}], "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]]}]}], ")"}], "3"], 
       " ", "g", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}], "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"8", " ", "t"}], "-", 
         RowBox[{"2", " ", "x0"}]}], "]"}]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]]}], ")"}], "2"], 
       " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", "-", "x0", "-", "y0"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]]}], ")"}], "3"], 
       " ", "g", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"x0", "+", 
         RowBox[{"2", " ", "y0"}]}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]]}], ")"}], "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]]}]}], ")"}], "3"], 
       " ", "g", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]]}], ")"}], "2"], 
       " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", "-", "x0", "-", "y0"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", "-", "x0", "-", "y0"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "t"}], "+", "y0"}], ")"}]}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]]}], ")"}], "3"], 
       " ", "g", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"x0", "+", 
         RowBox[{"2", " ", "y0"}]}], "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.685997905527718*^9, 3.6859991311048517`*^9, 3.686664302527628*^9, {
   3.686664349471376*^9, 3.686664364629863*^9}, 3.686664973623081*^9, {
   3.686763125089653*^9, 3.686763136871356*^9}, 3.686763179105894*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp1", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"qs", "[", 
       RowBox[{"x0", ",", "y0", ",", "t"}], "]"}], ",", "t"}], "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"x0", ",", "y0", ",", "t"}], "]"}], ",", "x0"}], "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"F2", "[", 
       RowBox[{"x0", ",", "y0", ",", "t"}], "]"}], ",", "y0"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.685996272202998*^9, 3.685996276098477*^9}, {
  3.6866649025057487`*^9, 3.686664903145729*^9}, {3.686761422357362*^9, 
  3.686761422906742*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]]}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]]}]}], ")"}], "2"]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"8", " ", "t"}], "-", 
             RowBox[{"2", " ", "x0"}]}], "]"}]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"Sin", "[", 
                RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"t", "-", "x0", "-", "y0"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"Sin", "[", 
                 RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]]}]}], ")"}], "3"],
            " ", "g"}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}], "2"]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}]}]}], ")"}]}]}], 
      ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]]}]}], ")"}], "2"]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"4", "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"Sin", "[", 
                RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"t", "-", "x0", "-", "y0"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"Sin", "[", 
                 RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]]}]}], ")"}], "3"],
            " ", "g"}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"4", " ", "t"}], "-", "x0"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", "-", "x0", "-", "y0"}], "]"}]}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"4", " ", "t"}], "+", "y0"}], "]"}], "2"]}]}], 
         ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6859913103899603`*^9, 3.6859914688119087`*^9, 3.6859917760130033`*^9, 
   3.685992496968451*^9, 3.685992716850216*^9, 3.68599628012*^9, {
   3.686761415107263*^9, 3.686761428196756*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", 
  RowBox[{"temp1", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6721631229771967`*^9, 3.672163123441733*^9}, {
  3.672167886730545*^9, 3.672167894306164*^9}, {3.672168045333452*^9, 
  3.672168094732366*^9}, {3.672174197620625*^9, 3.672174197774568*^9}, {
  3.672174524785318*^9, 3.6721745393770943`*^9}, {3.6721758353228893`*^9, 
  3.672175835434394*^9}}],

Cell["\<\
-(Cos(t - x0 - y0)/Power(E,Sin(t - x0 - y0))) + Cos(4*t + y0) + Sin(4*t - x0)\
\
\>", "Output",
 CellChangeTimes->{{3.686763163415696*^9, 3.6867631843742743`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", 
  RowBox[{"temp1", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.672175847274521*^9, 3.672175847370652*^9}}],

Cell["\<\
((Power(1 + 2*Power(E,Sin(t - x0 - y0)),3)*g*Cos(t - x0 - \
y0))/Power(E,4*Sin(t - x0 - y0)) - 
     (Power(Cos(4*t - x0),2)*Cos(t - x0 - y0))/Power(E,Sin(t - x0 - y0)) + (2 \
+ Power(E,-Sin(t - x0 - y0)))*Cos(4*t - x0)*Cos(4*t + y0) + 
     (2 + Power(E,-Sin(t - x0 - y0)))*Sin(8*t - 2*x0) - 4*Power(2 + \
Power(E,-Sin(t - x0 - y0)),2)*Sin(4*t - x0) - 
     (Cos(4*t - x0)*Cos(t - x0 - y0)*Sin(4*t + y0))/Power(E,Sin(t - x0 - y0)) \
+ Power(2 + Power(E,-Sin(t - x0 - y0)),3)*g*Sin(x0 + 2*y0))/
   Power(2 + Power(E,-Sin(t - x0 - y0)),2)\
\>", "Output",
 CellChangeTimes->{3.672175847695558*^9, 3.68599093143301*^9, 
  3.685991475412382*^9, 3.685991785191237*^9, 3.685992522845929*^9, 
  3.685992557357342*^9, 3.685992725778308*^9, 3.685996289215295*^9, 
  3.685997912517209*^9, 3.685999136713644*^9, 3.686664982936846*^9, 
  3.68667027855999*^9, 3.686761434821167*^9, 3.686763143289495*^9, 
  3.6867631870767803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", 
  RowBox[{"temp1", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.672175851506669*^9, 3.6721758517146683`*^9}, {
  3.686763144877067*^9, 3.686763146116782*^9}}],

Cell["\<\
((Power(1 + 2*Power(E,Sin(t - x0 - y0)),3)*g*Cos(t - x0 - \
y0))/Power(E,4*Sin(t - x0 - y0)) + 4*Power(2 + Power(E,-Sin(t - x0 - \
y0)),2)*Cos(4*t + y0) - 
     (Cos(4*t - x0)*Cos(t - x0 - y0)*Sin(4*t + y0))/Power(E,Sin(t - x0 - y0)) \
+ (2 + Power(E,-Sin(t - x0 - y0)))*Sin(4*t - x0)*Sin(4*t + y0) - 
     (Cos(t - x0 - y0)*Power(Sin(4*t + y0),2))/Power(E,Sin(t - x0 - y0)) + (2 \
+ Power(E,-Sin(t - x0 - y0)))*Sin(2*(4*t + y0)) + 
     2*Power(2 + Power(E,-Sin(t - x0 - y0)),3)*g*Sin(x0 + 2*y0))/Power(2 + \
Power(E,-Sin(t - x0 - y0)),2)\
\>", "Output",
 CellChangeTimes->{3.672175851977866*^9, 3.685990933184595*^9, 
  3.685991476395974*^9, 3.6859917876914663`*^9, 3.6859925248287373`*^9, 
  3.685992558376235*^9, 3.685992727176435*^9, 3.685996291186372*^9, 
  3.685997915533679*^9, 3.685999163976338*^9, 3.686664984906817*^9, 
  3.686670279903784*^9, 3.6867614360462723`*^9, 3.686763146670508*^9, 
  3.686763189531357*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qs0", "=", 
  RowBox[{"qs", "[", 
   RowBox[{"x", ",", "y", ",", "0."}], "]"}]}]], "Input",
 CellChangeTimes->{{3.672163189749152*^9, 3.672163200578944*^9}, {
   3.6721632451796722`*^9, 3.672163246670981*^9}, {3.672163283957101*^9, 
   3.67216328747248*^9}, {3.672163628579652*^9, 3.6721636300566673`*^9}, 
   3.672165289360681*^9, {3.6721653739528923`*^9, 3.672165374184155*^9}, {
   3.672165563235729*^9, 3.672165563410811*^9}, {3.672165954696595*^9, 
   3.672165954808044*^9}, {3.672166364421867*^9, 3.672166364493181*^9}, {
   3.6721672660822077`*^9, 3.67216726628936*^9}, {3.6721673517634373`*^9, 
   3.6721673525709248`*^9}, {3.672167450124735*^9, 3.6721674503800793`*^9}, {
   3.672167483533505*^9, 3.672167497812563*^9}, {3.672175600023983*^9, 
   3.672175612199705*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "y"}], "]"}]}]}]]}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", "x"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", "y"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6721632016438017`*^9, 3.672163247142784*^9, 3.6721632877818317`*^9, 
   3.672163400180705*^9, 3.672163432224421*^9, 3.672163472734461*^9, 
   3.672163555266164*^9, 3.672163630553624*^9, 3.6721639938856087`*^9, 
   3.6721651960621843`*^9, 3.6721652392218723`*^9, 3.672165290205946*^9, {
   3.672165338900818*^9, 3.6721653972028437`*^9}, 3.672165492774296*^9, 
   3.672165525764503*^9, 3.67216556377314*^9, 3.672165605610498*^9, 
   3.672165699523471*^9, 3.672165769169787*^9, 3.672165826610485*^9, 
   3.6721658619743443`*^9, {3.672165940728383*^9, 3.672165955167965*^9}, {
   3.672166024268256*^9, 3.672166047461396*^9}, 3.6721662639935904`*^9, 
   3.672166304572295*^9, 3.672166364915325*^9, {3.672166406557465*^9, 
   3.672166430048163*^9}, 3.6721665814274693`*^9, 3.672166632409112*^9, {
   3.672166670401216*^9, 3.672166706348998*^9}, 3.672167266921208*^9, {
   3.6721673261222897`*^9, 3.6721673528336143`*^9}, 3.672167386543339*^9, {
   3.672167444379506*^9, 3.6721674980362577`*^9}, 3.672172440544491*^9, 
   3.6721738721551943`*^9, 3.672175481543228*^9, {3.6721756010771627`*^9, 
   3.672175612614716*^9}, 3.672341264397591*^9, 3.672488331600848*^9, 
   3.6724907812636747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", "=", "0.0"}]], "Input",
 CellChangeTimes->{{3.672162724942399*^9, 3.672162733277856*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.672162734347843*^9, 3.67216277328743*^9, 3.672163084429195*^9, 
   3.6721634739037237`*^9, 3.672165240440674*^9, 3.672166634417838*^9, {
   3.672166671397683*^9, 3.672166689829184*^9}, 3.6723412657365627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"qs0", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"BarLegend", "[", "Automatic", "]"}], ",", "Above"}], "]"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.672162478282509*^9, 3.67216251244245*^9}, {
   3.6721626198762608`*^9, 3.672162640173617*^9}, {3.67216274152741*^9, 
   3.67216274201418*^9}, {3.6721631131701517`*^9, 3.672163139194557*^9}, {
   3.672163176082827*^9, 3.672163179571512*^9}, {3.672163211746971*^9, 
   3.6721632990513163`*^9}, {3.672164738182403*^9, 3.672164738383054*^9}, {
   3.672165199150885*^9, 3.672165199277858*^9}, 3.672165426626658*^9, {
   3.672165576052569*^9, 3.6721655761712646`*^9}, {3.672165832983745*^9, 
   3.672165833078245*^9}, {3.672166051594129*^9, 3.672166065929399*^9}, {
   3.6721664868644867`*^9, 3.672166486935335*^9}, {3.6721665850414886`*^9, 
   3.672166585136568*^9}, {3.672167519397992*^9, 3.672167536621389*^9}, {
   3.672172446765888*^9, 3.672172446933576*^9}, {3.672173875824192*^9, 
   3.6721738759771643`*^9}, {3.672488342841254*^9, 3.672488374960693*^9}, {
   3.672488514778467*^9, 3.672488573818392*^9}, {3.6724886661804657`*^9, 
   3.672488722284124*^9}, {3.672490787055863*^9, 3.672490787679104*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJyMnXeYVUXy9zHnsGLAuAZUdlddXRUDrAcwsmbWvKZV1xxRQUV3zYiKAcwY
0VUM6CgKIoONKAoCAjNDGgYYJoc7AyYwoL7s7fup89T3en6+95/z1O1cXV1V
XV1dvdN5V/X51+odOnSo371Dh/99429Z4Fs1+ooFo69oNfj9/4ELGgx+pHPv
IZ171xi8OJ9/gcGP5dPLDH4qD08Mvp2SUuB7Y3oC/EAsb/DcWL/BD8X2DX43
9s/gebH/iW9vmcI2Tv0yXmDGC8x4gRkvMOP1eCwpBWa8wIwXmPECM15gxgvM
eGXeFC4aF7B+GS8w4wVmvMCM19NJSSkw4wVmvMCMF5jxAjNeYMYrdKlw0bzp
uID1y3iBGS8w4/XroKQUmPECM15gxgvMeIEZLzDjlXWncBFd6rzpuID1y3iB
Ga9f5yWlwIwXmPECM15gxgvMeIEZr/AVhYvWndKlzpuOC1i/jNfzsZJSYMYL
zHiBGS8w4wVmvMCMV/imwkV8Rded0qXOm44LWL+MF5jxAjNeYMYLzHiBGS8w
4xW5oHAR31S+outO6VLnTccFrF8vj0pKvTwqKfXyqKTUy6OSUi+PSkq9PDK5
p3CRXFC+qXxF153Spc6bjgtYv4wXmPECM15gxgvMeEWuK1wk91QuKN9UvqLr
TulS503HBaxfxgvMeIEZLzDjFb1F4SK5rnJP5YLyTeUruu6ULnXedFzA+mW8
wIwXmPGKXqZwkd6icl3lnsoF5ZvKV3TdKV3qvOm4gPXLeIEZr+idChfpZaq3
qFxXuadyQfmm8hVdd0qXOm86LmD9Ml7RqxUu0jtVL1O9ReW6yj2VC8o3la/o
ulO61HnTcQHrl/Fm7SNUz1Y9VPU01WNUzqscVDmhfFT5jK5DpVOdRx2nfq/8
X/bRbYHv34b8r8Jmg2vz5acaPDzf3jsG3x5hq6c85jf48vjNbEe/u/2vuiF1
BtMeMO1lldPvB3l8zLEv4wGmfmAdt5bTL+WB6R8w48/Co45T+6Xt6Jf2gME/
8BGxfoPpT9Y8Kp51XNqufmkf+J04HoPpDzD9yaIjHZe2o1/aA6b+rH5pOf3u
HOnIvvQfWPGs49Ry+qV/wLpulI50HhWPOm5tR7+0B9+D3+l6VfuCrmPSo42p
2tJ1XcEPgeGHuu6oF/6o60b1ZqVj0lf+8r/fYksHpn7mh3SdB9LJDz/V/KSD
V5UjOq+KN2DwBwz+gMGfpsPvwB8w+AKGrimPPAEmnfzIF9LBH+nIG8Un6eCL
dPBFOvhQvg8e+Cpf53/krf7PF/wAgx9g1gvlkbfA4EfxR3nwQzr4IR38kA5+
SAc/pIMfXUdZ60rpAH1E8UY6+MrCk+YDP+QDP4o/yoEv0sEX6eCLdPBFOvgi
HXyRDr2QDr6y+Az6muILOgBfOm6Vw9QHfyEd/gNMuu5TSQdftA++SAdfpIMv
0sEX6eCLdPBFOvxF9Q/4rvINXSfkU71H7Sqqp6gdQvUI3beTDn50n0s6+FE5
qPYy1W/op/JF5kn7rfoX5fmqHsb/jFf1JNIZr+o1pMMPdHykMz7Vl36LDpVu
Fc+q72m/VP9TO5LqgWp3Ub2NdOiVdOgZGHyonkN55lP5uPJp0rP4GvnBl/I1
0sGXrmPSwZfqr6TTb9VHwRPrm3TwAwy/AwY/mk574EvlPjD8UdPpB/xR9QLS
wafim3TwqXKAdPCpfI90vqqX8z/40f/5Qk+qz5MOvoDBV5beqHol+MvSK8Gf
6k2kgz/VG0gHfyonlS6y6Ab+qXgkHfmieNN9D/nAF7DqyeAnS68GX6pXkw6+
VI8kHXypHkU69KN6g+7PsviOriPwp3SmeNDx6z5C7WVZ+wbGn6UnM37VE3V/
qHxT7WdZfETXhc47+XQfy//0Q+2FGftN2yeRDn5UrqscVDmgfE7XsfZL9mlF
+2L+B9+6P1U+oHbgrHUBvhQvem4NXdC+6vngif4AM//K15VP6TpUutR5AKYf
eo6u+zPdh6ieDax6OP1Vvql8QdcJMHhXvOk+UfdBqheoXFM+rXxI7dzKl7Q/
qmeonFS+D6xyQelA8ap6i9KJ7mMop/qV7vt0X6N6vOq5ei7DuLP4LvmhP2C1
W+g+nf7pvkr3EXoOpvqFnhupfqFyAVjlBv1XO4vaDXRfrPs+xZv2S+W4yme1
06hdQvfdej6l8lTnTfUsbU/tHLpO9Dwniw4Ur7vm68sFvu/k8w83eGo+/zjL
92G++Kf2JT+w1qP59Ev9We1qPv1+l5+vGZn/P5gv32LfOPx2+46J38CX9rP+
XzOP75kGt8b2DO4b+2v40nYiHeQsfWjsl321HeoHpn7Ft+YD1i/4zPqf+vkf
fAKTTv43Yz8MZnzkB9b51XFou9pOVr/4n+9v/U9/+Z/+Kaz0p+WA9Ut56I/x
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
UY78Pl5nva0PjXumfnTQMetF45Shh7HPBfb3CprNrkl55AHrU9M1TqnaPcif
FddU7zOBJ2B9b4r9PHYLDzcZDH6AmQfFM3ilPerx7ad4BvbxgdJ26Sfj1jgD
5Nd58/dbiucRfurjSi0smgfPz6qtPs4nPf+pMf5Bup7j6HmU8h89t0I/8/cf
a6wcMF99L1Hve+g5e1acavCqcY9Y79A78sj7uS0wOlM7vtd7myy/t9dVGZ7J
7+cxPYfRcxeNU4S+6e1GDUXrlnq1H1n3zijHfoF9veKf/9kn4Tfkz99T+7D3
u2yyfMy3vofh57mhyC8XfRf8+PhtlTZ/6Gv+Pcuyorhv8Dc9J6Me6oUf6D0e
8ObjejXbvGhcOOhE/TyQN/qOp8bNg+49vqpNv9U48/7+Yho/Te/NeTvvLNsf
6z0otY9qfDONt6lxCWkXu0asj/d/6Xet2aG8PbHWysG/NG6txsXScyvoDj6o
epPKZ/Ih/9Fz+PI/+gp49vFxG8wuw302z3fLTD9C3/DxBsuTf+XbmVS036Wc
vnOocfigE+jIv+NaYXY0tRfCj9SPC3qGf+DXxzzCd+kP5zmko0chl7CX0B4w
7cEHsviEj3uV+q3oOmVeyc88qt+nl0ttZgfU+/aks48EZj1Df+T38rBN3nVO
29V37P099Bq796T7X/Tavnm8DU/8ewm5on2Jf4+1rei81+vHxeMApp/kB5/a
b70vgr0CfSUrjpDncyWlWeMEJl39CCif5dcHDB9DL4TvoZ/D14Dh87pPh+9R
D/VqPRoHmHLUA77hM3z5/9ffhaqzfaTKYfCudjHkNngivU/+OyTRdLU7Zt0T
5Ov991qt397PqsZgxkF/4dc+nkwa/0jfBYL/6buP5NP7EIyL9nXcwPBN5hF9
HbsN86f3SDWuCOn8Tz59B4t86B/Aus+Anvw9kibje9iL/H6ppUgPpH76yT6I
fF5utsn5foo3YNYj/Jr9NvRCfdCFfy+5xeYL2McjaSp6l5J5hd48f071ILW7
Z/lx0i8ft7mlyM5Cv8G72h/ITz/V7qP8lH6yDugX5Rk39eu4/b3W1I4IHXh+
VWN6MHwKOoT/QRfQCfl//Z2/1iJ/S+iV+j2f0zhLjaZ/eP05jber5zJ6b1bj
sKhfPf3wfp0NBqt9wa+j9F1CXWceL41F+0TyqT1D7ZzA/ryxwfCgeo3uSynv
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
I/7+4eETzN7Nl/+jnLi9O/8fdPPe6z92yaSi+IiHx/9tnpg35ol5oxz1Uv6E
U/Y984AjbzB4TGw/+TKWT9aN5a2d3yoHvEXHbX9/8KC65LlFD026qffU5L2I
j2RgxEcyL+I/GRTxn0yI+LNzUNYR64p1xLoye8jOtyzZcOq85PI4P1b+sTh/
BveP9JCsG+khKdBXUhPpy9YZ665AL/a+dfm3m+fWHzQlufm5v6/72kaLk9Fx
HpO14rzaOBk342TctEs/0O/3OHznz99dtU7gC/AJ+AJ8Ar4An2Adsa6ge9YB
88Y8gmfwjrxctuMLo6ctqTO+Ap8x//C9vhy6/cHNyfC4nm1fwrplHYNH8Er9
Z99+7P7zuqXjpPxlkX9J3Lf0f+T/rPd2WLzB5LbkimHD9j+3c6PZEy6JsO1H
No71Gz9E/1qrw47Dejc0ha3jOrV6oQvojnpp58zYb9MLqZd2lka8WTr9B08D
Lu46as36JtOfaQ86ha6gM/aDBb5m9R7/04StS16cUkTX8Bn4lPKJ266pXO+E
netNj4VPrphxdr9Np8wyPghfXGuX/Dqy/Mr39otyw/Qk8AHfXzPi2fTFJbdO
mbx1t2bTu1UuHBvHZXRSHudZzuvaAvPMer+3y+nnHdep3vAE3ugvfLj5yx7/
uGa3GUlLWWvnih3HJ/seu8XWfbqPTz7Zb49/vtNpRnLKnl3WfGm3Fvt+ePXQ
fWbtVhpuvHLQo0fsNTP8ckw+f/g55rf/ycf/5Du3Y69Dln33ScL30u33Gn30
4Tn7fvLiBTdeUdIYbn6/60a7PjczTIhwcn2E7cv/Zxx63N4rxs4Lzavv/EOX
XH14oedFp12zan5eOPiOj3Y+cUn460FvX//KzwtDp2U7nHj25fPtf/IV/k8K
+ZJHNjzlbzstq04W3z3w6JJx85JhMX/yTMyf1Md2kj6xXctHOfJRDnqqavzl
zN1Pa7Av/3+27M0ul15aXnT/mv+3G7/f058N+KQonf+h9y9ifvvyf9XkE+Z0
f+hzo7eFsX2zq/Dl/yj3zi1V/lAZ67H1TT7W8wlXdrpn1Jy+pbS7S+xf0u2J
h+7tdXhFUrvBvNvP7fmp/U++E8/cZrvqrd9PRj6yRZe7Hm20eqi3asjNhzz3
6SyJg1IdHl7zl9vOOa/Rvvx/eZd3nztt53rTTwz/hXqgA+hi35dmdhpcOc/K
n3VjtxOH7V8bdv9k+YG3rj7b1s3cWD4ptGf+Bdv9ssOZb86bZzDr/oLYDytH
PeSjHugIunqqbZv6gw6Zb3wNO2XZQyeOmrdTjdE5dE+/GQd0DF1rP7GzbXvX
RRPL+lcmX6119M6jO8xOrjrt4TNv7VqbrIhwuD7C4fQ/rNbzjgMrwr47tx18
/ap10/TEccu7/bki/PGD1d/Z4Otqs4+O2rXm1EturAmP7DTnyhe/qzW64Rxl
+9iejYNx0S792CO2k5wa200K7SSNsd1keGzHznXwo5sU6039rGM/bJwW7+zG
x26a039O0vvk+Ru80tQWBh65/Of2i+cmpx31ye+e/qnN+PqMuUM6v3RqWxi6
c8/KBxs/Mr7c7bgBnx68ssK+p8dyySOxnjDy075bDzu92ewulKOeUT9cdUOH
LjnTD+kH/aIf9Ktuz7+8/vP99fZ99vCaG185piU584Pt7z5tVL21Sz9267Dl
Y1e/Xx/+1nvEB2P/1hIujvnCU7Gc/U8+/idfWRy3yZE347oMJ8V1avJ7cBxP
KD9u7dmDBzYm+/fotu9R+4TAOmfdY2caFfFi5aiHctTDudp1Z7674cpxdUY3
0BF0CF1Ch9Al/oqF8iY3F3573vsdkpROoBvoDLqDzqC7eztPOaDi5gqrB7qD
Du+64Oeabt1mJKuXlP3ppo9zYd2FTcN+t1VpckCPTyetPa0+/GP9y3c9t3Zc
8tOm/Q/bbUR9ePf2h7aZP60+2efLg3u9tH1puOzsB//40yv1Se7ZV78ZUTcu
UA/1fnD9thdesm1b2O30ze7osdksm3fooMtm71x+4eMLk/M2e3zXD99O34nH
nnbqmhOn7FBRnxyw48DJa12fS9Z6+6gL//pyfVK6Q+ftX78tl5RdseDjtyYv
DPcsGH3T9i9VhJ6xvnB6rC9sV7PVZ9//d2xIVtYcGParNX339ON/f+jHa7SF
mn3O2vqkl9vNnvraPrd/ds0TtQYzbydev2a/J9sawhs39Dm3ZsuPJQ5Pnf0P
n3w9wsk/O3bqcd0h7baPPu6j6ePX2uQDgzs9t+WR/U5L3zmhHPWgJ5XEfiWF
fiT+vKEmFOoxPbTQbvJdzdL11vmgNvS4fvO/P7koFzY84rC3yjauDcvHjjth
zy9zYeQXG4+Zev7scN7aJy0Y+IdcOOA/by7/9tbJ4c6NBu73+o+5MOD5mm6l
T3wa+t18wh3fDs+FurFDw9x9WpKbFlWduPKmXFhj65YX31h/cih77dBxM45u
CtMWPD7x/P0+C7fUbXrLxObG8MvJIx+ZP2he0vnZbmeceWxT+H7LtU+a92x9
cu0nJVuv0akpvL7041seHF+f9Nx8o03fXbvJ+km/6Sf9Zp6Z98O3G7j8g1EV
4eR1Jw675NGF4dTj/nJY+UGjwkG7/nXOFjtUh17DVttk+KGjwpk1s54/96PF
4d2unTrvtOHY5Kiag4acM686vPLZuJPfe3xmsv2LfT9+6LhFYcOJ66+4PDc+
+e6+G19fvs9swwN4AQ/ghXGDB8YNHrp+t/nO72+/qh8Ny4bXdx0VtmvZ/Mt7
VvXj0Ju/nd5hVb96Pv7jxud3W5Q89NkZpzzxj7GhZ+xXMib2M9BP+k2/6OdG
sb4kifUlqzaIi6t+aE6O3XpM328Wj7dxMc4Bk5+5b8qK6mTo0I0GPHz6TJsX
5mnFtk/1+vDWluT6F29vOvu9eVYv7VCOephH5pV5ZF6hE+iGftFP2qHdk6f3
+aLDS41hg2573XXlf9rty/8dH7xw6+7f14YpK3vOfLWiJWxy6tur145fpTcP
+OGRddZpCmfE+sPhsX77n3yUo57yir8ftvyHGWHwvqVHfPLgKn58610XPL3t
++GGbvPunji+3P4nH/XSDvkoV8iflMX8ybWRXpLLIr0ke8V8yY2xnOWj3POx
v8nGsb/25f9Cv5PCOJKNIn6SkyJ+rB3a5X/ybfXVDXc8f878sMGNpT1nvpUL
r9++55Evb5RL1m8dedVn01tC/zhfSVOcr9B5l3VefnLp/PDL5R/0GPFmS7gt
zlf4Ps5XuHPQJxud8dYn4d+PrDy1uueqfcEPQyf2njUzTB27yw+/W6s2fF1/
YXWXJ8uTtQdPe/CyfRts38c5wXudxr62/Wf15jcx/pJPb+u1VpvpHXZOeOKw
b69btyUkkb6StyN9hdOH/ZycdvSisM0fRg8eWFUX/vjxHReNPXdmWHRtw8r2
k5aEIZFew52RXsPKbbvtvXPlzHBTGPDXsVVVYc7KdfYf9MjMcNi8D4dfsKqe
+t9tedbhq/AybZc9Prj37HTc4IFxg4eyzydcuNH5M5PRK+5c2emUJWHkobv3
/PEfM5O+yx4a8cjyatODB0U5HA4a+fBb46+vMb2Tc8ad2qb1+HzCzPDzV2UD
t1hQlVzVVFs/acHMsElcv8mrcf2GN2M7SaHdUGgneTO2G166rvPSsWvUJlfe
OWTe9+XpPDAvzBPzBp7AG3gCb+AJvIEn8Hb1cy1nf3BLefL6WRt+9WUIoSXy
p2SLyJ8C8w4d3H7jw68ddMaScMkX8yced1mKJ/BGPdRLPdS7XWmvS8/+4YPw
3QlX/evinvOTXrE/SUXsT9Ivji+5PY4v+SSOP9k1jj+5MfLnJET+nJwb5V7y
UpSDSWFdJFvGdWJ+8aPqjhnRYcA8mxfmiXlhnpgX5ol5YZ5OiPIqOTjKq+Sn
iNfk4ohnGwfjot+Mg3ExzjMi/ScF+k9e6zX+x6GH15l+cOCn173RabU0fsfg
g/qdsPaTTaansI5YV9ANdASewBv10M6EuF5NH4aPwFfgI/AV7Rd4Zx4+j+su
KaxDsxfSzorIB8z/AP3sgFifnSOiv+GnEyKfsXyU4/tKHI99Ld7Yrj0eWTJ4
pq1j9Hr0fDu/nH3TepP7TzI9brVYzvR49Pozvv16/ZHXTzK9Dj4H34PPwff+
dOfhj4y/pjXpsbT5zfUOmph07Pj9DpM6VoWNhk1bvVdSZ1/+3/H81w/+821V
4YFDzhux/oGVfJPC/8l6MX+yfsxvX/5Hz2X8z14y4PBbPmkKN+3YvON+f6mz
ePaTlr3U9ZGPptqX/5lf9NR+O9745ODLx5ndhfV099ZfXPXzKrg0lrf9NF/+
pxz1UI56oI+rY3pyY0w3P+VzDuj1/gN7Nybd2t8aevizNZaPcuSjHPapLb4+
oXbLXVrCXbvv9uG0B+favW/+Jx//kw+8Mw/4TaCX45ey0zlrvHzFpVVh81if
2ZPwe7k61mf/k4//yTdz5OOHvNqjLjmvrHrm9EENfEPhf/qRQAf8Tz7KUc+r
h+bWGHz2pGSLpWuGM0e0hGmfP/DzcavmfVnHnXZ5YhUdjI/7v9A97v+Swv4v
tMT9n5WjHtbHVzMuuKJk9vjkur0vO+7gR+Ymp3cfvP4Ji6cl2+z/70XDF05L
Zr9x/vvnD51r+0r2mewr2Weu99fO9+761gfGv6CDQ9ZsObDt0HSfyL5xt+ur
7+q/ap941TprzVhv1b5x3xFnPXBTac72V2vEfUXyXdxn2P/ku3rXaWd2nF0f
Ov9y8/6/uy4XCvvPMC7uP23/t0/Mb/koRz7KkY9y7REvphep38afIp3YPcp9
572x738fmml8BvxOrWh9tGV8s/Gltl5Djntsz8bw2q5fP3LbyArjU+gd9yWl
/3l3WkPY8u/NV5ec8Yn5nzV226Df87Omhxs23O+Ea3s1hPP7dXr01bNHGf/D
vnRbtM+HIwfsMXfNr8rMv23oxV+c22nBR2bX69KYe3ru96OM/qF7jT+1d+7y
B6d8PC8M+N0e/VZ2KjM+wLkf+eAz9zx2/IGXbVcWzv3pnTFD7m4Jc54+7dIj
159h/WYc9OOugf1uu2v+R+aH+85WXx5y8bCJhpf7Oxw06IvW0dYfzokZ9/6d
jt/hqCPH2v76mLiPT+O7xHGm52ERb2a/LLRv/ikVt5Z+N27dycmMyl/eP2q7
VvO7xe42cMTq5/Tcd3JyxLh1Nph87Mfmh3h0x3MOuvWBsfL+RFnStdf0yX/f
fXLSN44/WRjHb37Uex968fB5S8uMXjgn2/ea3VoHTm0wv0HGU7Giy/m1N802
uoMOGQfjQm9Hj78v4tHkG/2gX89P/ect73WcYenMx7QdHh0zqlsqp5HbH8d5
Tc6K82x+QCdd8MeLulzVlEyZVle/8NX0HgDpEzrmqjZYkUumP7+8/2btadzn
ZEqH9iXLc+bnhR7xecxn9HLrvXNH3dGlNYTnnjj0gNqxSTj94i/Wfq4We1Jy
ZLQnhQtGX7jX9fu1J3++sub8tzavC7W3lXV96KT2ZP2pF/xjfkON1UO9m/23
602Nq7eFY4b+0qnTE4vCyscuuuXbr3JhUrJh6e3fVoXjTpo6qf/p7UnPjece
/9kHi8KEqQd/c/3x7cndj1/f1PpsVdgtzrPR6dpzNj/l2L0nm/8cfpeHRLqx
ezhj77+5Y+UfJtg4GBfjYFy94jo0umK93RrXZfLumtf959ULG5IjLvh6zDYb
Vya9vjzj7JmN7cmf7tv1h2kbrMoXx2v0ceTzzR8/u91Sgz/659H/engV3P3Z
d5+6srY6mRb5ltHD8V+cP+Gxr9qND49ebaMbNytvTy67qunPt75Zn5y0x8l1
tTPak+nb/bXHvybWW71Z7VIP9eJ///SV559x4Ddt5he763VrvdKxU0t4Ztha
xw5/vs3kOnJ+UfJu/212nB9eOufkqh/mzjH+xHnsBXMPOO2Ad2aEER91ffSd
vaYGfbep89tXXLPzAw+X/mXgnFOvO6wp6XzL2O02/9vY5KnYD1sH5KPcMbP+
9UZSU2vf/rlH/3z0V01G7/SbcdBvxvH9zT+9scWhbeGi097d5svvW4wOj4j4
CV8OG7PVFxcsCWf1v/KuV7ddGnrGeQmFeQpDB26+3qXHLAyvPL7HJS9vujSE
k67sv6zLonD2H8d0u2HzpeG4+V+cu/kzS0KXh7p3n7p+W3jlwNqRL/acH+on
HHzJ8ub2sG+ki3BopJPw6oWVLVXzy0P/m3958oD/tId/R7pOPop0Hh7sddVN
U55Zklw1/qG7up7XHtaO6yipi+vK5NeP7zdMO/vO5vD0GpWjygbODqcf+d/P
z/mi2eznp/T6+90H79Fsftnz+1711I4dmu3+4OWDrn3uf+fmfPl/9atHP/Xc
rvVh0W6d+50ytDrUXLPesPtXwQ9cMrLsuIerzc6A3WG3uV9+1brFQpPn3LPp
/N+Hdvn95XXhxVvfP2XYR/NC/0HtM7b8OsW7yccC3sAjeAbv4Bm8gzfwCB7A
y9URb8nDEY9G59Ajcp/88IfdJ2xw1wn95hqdQ/fQOXQf7fIvdid9x7gfT1bE
/bjdp1ka98smV076dMKizW+abXz94if22G/BbXNN7u11zecddnp6Stghfs0f
n30++37apR+0Sz+oD7nJ+r/1qfrLN5n8WHfzS67pU/HZiTOTS8+efsAvT0w0
vYB26Qf0tOhPq3310vQpdr993LYdHsr9Y0pyzT63dP7jc9XJLfvOPGrL06aY
nEJufRfnx85d+sX5S16I82fy89aID9Nr4LvM0zERf7but43zZft+7AAF+kkG
RvpJCvSTjIv0Y+uKdfb8UWsu7fji7OSp0S/32G55bbLh7s3L5781O9mz8sJx
t66R4g08doz0bnjl3vgukd5tnIx7aFyfyclxfdq9tMJ6tPOyLa8paRu6R7PR
LXTMeJHzyHHkur1jH/lg8lzke7Y/As/gfUyUs8mPUe4mx8Z1lxTWoeENPII3
8Eg7tEs7tItcR84j15Hz6KnorRYH4aMNL168il+xDqEL1u2sqB+FFz+76Id7
Fk6z+y/gGz0OOqJ8pxUXvPfwmvVheL9+q1XNWRLu2WmX+4/YtD68eel7JQ8O
X2LzwLzAt+Hj8G34OP3UeQOGTqFb+km/saOxb4NPwDfgA6xjyrPPgI8wbvRG
1i/67pOxPZMDrOPayN9sX806eyXyN/uffPxPvtFx/MYXkCvIGfgadEs/6Bf9
fqPPrQd9Oa3B1jH5qZd2Lj75rB26vD3d6I1xojegd6GHob9fevo5I89YfWny
zOQpLZN2nJ6cXbnrDxXlHxb8Yx4v3FtoDVctuejCa6d+GHad1rLjo9tNL/DV
R7vDB/ny//yCvhPh+7tPdun3d2fepn3/2M81Nw/pzno97Oa/tky88tnuCwr6
+ScNK3oP7P1o998X0oEpRz3P7/HULXudOrD75wV/A+AxhfSeF81+dOoNreGv
8Wvt6H3Nl+O+w9YR6+r4qMeGMVGvDT++fMm327TMTfiyjvpGvcu+/I98ZN96
YaeejS+cMyWcNvsvnbbpNcv0QvRE2kVPvDmmmz8t8/t+TLf/ycf/5Dv0ptWG
DR40N/n9Plf1O2xFmenp0OuhJ3Y9Z+1VfPjtPdqmLTm40egMPfKkdx78aKub
Z4WnD3t3/deerwwnX9rt0+ovZyffXDhs9t/XnZSc3lD23tVPj0kmfvbAgMdO
Tu1o2NX2i/tKW+fYHeAH+0U5EjaOciW0x3Sjc/alrA/+Jx/y9oqopyX3RD0s
qY56WfJE5GvJNpHPJW9FvpYMinzO7guXfHPejM0/rg7Ll/5zh965eXbPcei7
3y7ZdcIiwxfxM4b13nnmO9vOT+Cb8FH4JnwU+8Drb4854/naOquXdlbEr92D
ZByMi34zDvrNOEbGes2u0Pfyh8+d/UGF+U3CTy4c3HHRqLfbjG+uLP3TZm/t
wD2m57ujn34V5zWcFOfZvvyPnwR+E8j5KceefN6XIz6w/QV2I/bP3bvucPIZ
7dOtX/STftHPqz4Y+GZl3+n23WTZLS+8sv7S5Nb9pi67+ZDa5ODVTv6869pL
k7P+1tj+nydqk78NuvOHIx5vSapGTr//suo6y0c58lGOcRb2e6Ei7hNDn7hv
DHfH8mHjWD6cG8uHQvmwKLYTjontWj3USznqoRz1UI56WFesM/h4/4ifcEHE
j8nLAf/ZcPamq9bZw13qm595foytQ9ble3Efb/Ll4M1H7rfBqAlhyzUvOvXu
fzUl7FvYx7BvYR/DvuPQt//U+aYt68PsOK+J+rPwP/vy4dGOmAyM+weJd7w4
ubj67qmbb1mfrP/1Uae8MbDa4k9iJ8BuAJ+F77IuWCf/vqBPl03/NCvZ89XB
p/99p7bwz72qnrlmZVOof2T3+hdGfJQUxhkOiuNOPuuy0aPfL0vjWNy59t3r
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
qWtil+fUa3v/1vZlUtmlxe7b6x5HU+tiPWqYLgwkz2JZbvvLRys6TvY/mkpG
7LSdvyWQnKQ8G0p5vibllX2IrG80l5DyPGT/3pPx4Wm8PKwON1uQzs+im7n2
yOXr/tSTp/O0B3GLx/RPZ8fxLp9W3knT8E86n8/M3yLwYBCZjo9K6GYeqPH1
QfS1XLVeRkGBtKXSgFlmlYK18x1AsIOGXTTkHJB7QM4BuQfmae3b/cKaatF0
MGPlszpzA1Xczm47QrYlf3BScWP3fC40bV41Z/6yOHSLkXcunXpv56my35w4
re26pwl20fwspGFImfU6de7B54HvA5+GuMj7tyY2M92bwn0/cLzr3GRFjzws
UH/pvP3Jyu4BdhCwe4AdRJfmYf2eDI9Q9NLCtzuChwW48uvX2beX1UxReX5x
L18VOoh/CV2k4kwh7hTwCvII64lfDS8SPxt2Ej8TBc+wK4CdAewKYGfwUsZB
s2RcSi8JPSXul6syTsUnLhT9geIPa8g8VZ4Y4KkXv+o9Hl05W+HzI0IXUpDQ
iUoPC70s9LDQy/aRdad9sg/0RNZdyftApxksvxs+fp5OrY+mJ1Xy8tEWnocr
1k5RT3zX8o6wloeEO9661/prhxTu0LKgSbxFPJtJ/mq6LPmreY6TX/WBt32p
f6H/zvU/F8/NvhivrznKWdFPr/dndYsY7cxlDvHrBbsieZ7k96aC73/n9+ab
N2odnvrJl/ZN271Qf0YkX5b85LRE8pPz9fZWFa6EM+3tOXjKlBkBKm5fMdsd
3omv8vyIsA8dg0tVbXXGT90DiPOJuJ+I84m4n6Nyqv/KXJmsyiPuJuJwrp/U
c75FgwwVx9VwssnxjXUyKOV1lSFZ3+OoX3WbGY61M+j7inWJAQXj1bpjH25L
nm4uLHm7qfrwZTvm6+nYh4d0DYtKV3Bh/Gnusa3ReXADOIKfEvyW4KcEvyXI
VXC/5EheHfU0LrtkSaHdr9V/U8kLzFqeYA7c8ui/8BFevEt//MiskiFsInJP
JZfbKfQ3HxT6m9PFz4i/id+R0lsrPbamt4YeG/1iHOgX40C/GMeRmeGRZv95
KX4T48C4MA6MC3g84OfqBmZzHqlxYZwnf5g9ORuUquQbWp5l0vIuk3mH+yNK
2aRS8LhFHzevS1TlUA/lUA/lUA96QugNIe+G3hDyj5sHPZe8HpFLD0s+AtLy
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
TvLkr/Jd6SHryzhon/SryY/ClH9fn3rr6zjtDCO/o1c23JsQpf6jHbSLvArI
s4C8CsizAL6zp7THTtKemjf6Qb/oB/1iHpjXO/GLoSniJ8OXxC+GzoifTJ7c
XTsX8WLfx/PEvk+dC5wTnAucE5w35JHBunYTe0cyE/tGeiP2jTT7vy775iSF
0t4VnYYU13nSi/UGTdbMCaXp9+61uNHltaqHdlAO9VAO9SQ+RKIWVyIvLyj2
HfIa5AnFumKdsa5YZ+TVQJ4N5NVAng3c08gbAnqqnLwr/67anQ81CX+bqfSO
OHfAa8BzwGvAc5AzwE4M9w7uIdw7wJfA27deLql6amyeXBr9wU4AdgPgX3s9
cC1nWimZ4za6v6pqnKbiG+zQf1Lw1pBU3vo+cLvHtTy9NPTU0EsD70GvCT0c
8B7wIPAe8KBmf8aa/RlvFfqWhY9/qtodLvQtL3Hv7Vwn0JmOlg9LnjvLTdF5
0KvDjg12baCTQTeDTgZ9Cj0q9B64R3GvAv/iXp0hfnVKHwt4gt7ueGa1pI5d
wpQ9O+jjtXPa2xVMSlV4G3gceBt4HHY8sOtJPnzj2e5rGdSqkW/h2t55dgKw
GzCU75wk5ZS9cXGx11F5h8CvRgpeZnvB0zxA8LL2TFHfUQ7fUQ5xIRAn4j+x
F1PyuE+/IvP7jcqiEQf79HHyjld+v/AD1uzdlDzt63fzkCeDs8j0ZO+TNbZF
srav2GdlP/xe7A1V3iPwX/CDhl80/KDhFx0V/bLmvr4+bF+v15VHiZl8ybRx
5FIbL+38ZSq76qNPW+asf5zJO0peejXZJpNvj2qfadMpnanes8g6sZnqvLLJ
vloWe5LUc2XLz4XnhwVzsRFdT+wzCGMLwU+8QfATzxb8xK6Cn7iMxLNgF4ln
wVESz4LHSzwLVQ/toB7aeXftdc6Xfp5c5f2kut0jfVQ7aBftoF3wMffDvpLX
kt0OBzS4XVV50H3z1lsdamr/8X5Hw1dtE8r2c367x6Ge9h/v4Hsalw6xCy98
3MRPo2M3DqzS8jodN+mv/cf7A629GkW2+5/zP+DQRfsf+yZ7nOO40yaga0dO
adzqff4n5DwpbPPEXLrgZrWK9mVz6QT31iufOj1IpUOLe9d/N+wJPZR9JD/Z
V03PkEnavtJB2Udlx4Nx9vxrXP8aN8aJcWOcGHeO3HtUT+5BWi33HrWWe1B9
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
rq95/qs2urqprlV51UodYUUhGX/p+fP9B8ufy7M=
     "], {{{
        EdgeForm[], 
        RGBColor[0.148, 0.33, 0.54], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
R4OD/Q/ZJM3E
           "]], 
          PolygonBox[CompressedData["
1:eJwllmtM1nUUxw9PoKjAo/Jo/J+HB+h5/lxSc8M1LeyyCVgW1GaLNEEBFbUa
WOEtlyk114XswsUEzMItdJZvaDOHa66LubUu60W5sjKtZb3I9SKrWdHnu/Pi
bOf8f+d37r/v+V/T2rG0PWJmPVAmVFpu1hkzG0cIE2azkmaTJps9Pd1sA/Jr
KbOMqFlkGsqh2c7AbDkGxvlWlDZrR56L/DPyJORHuf9bBroTsQv/TKHZUmwf
wEclvi6m/OxTfPwCf4U7BVlmo9g/iP3hMrMv8s1Ocv5H0kl8FXcex9dw6LqK
MR85O+2+LxPvWMJjVuxNfHsZ+x3o/AofTjFrLDIbxP7NxPsxPobgc7DXQnwx
bObBryTGeTPwy50b42Zb+dZNyDs53xa6D/magv85xPYW305wdjXyvfjq59vX
5NPAnT74v4nvylSzxfj4Ez6Jzols//YXckngthqwUYet+dzJR76efE/h6xty
qMhyH0c5T6a99hHi/0y5Eu8Z4l2H/RZqnVnktV1IjLNKze7A/gzkfzkfIJ+e
0Pk26FbkJ6EnsL0D6uTsBWgQ/iw9vJO766ES6nWK/lXhawLnOZxPJIY6YhtP
+2xEkG9H7oJq4Su5H+XuOwnP/TT3F3J/C99qsPc7OtO4W0+8M+nNuQnocfYi
8Qxgbx/0PL628a024jFuQp5LfXLJp4L6nMR2GzYbyX829T7E3U7k3cjv4T/O
eYj8CL6PcX6uwHNSbnux1429zaH3Vj1X7/uR1+DvDb7tVT3irtsHPYu8CnoQ
/j7sncZeITn0R/1NJOAPo38002NSbF8S7wjxHie/OfiuSvqsnKU/w8RXn/Ja
LsbeGPZ6Uj67NcRYjP4PeiPwo3w7D5/gzplMz1G5qmfq3XPc78J3b+ixj0BD
yPPRGY35jPdwty/0sxj+L3OeF3iveomvgtga9AY4b4Y2cj4OpdFNQfnM07LQ
z9Zyp4K7WznvQG6HWkKviWqjb63ID6NzE7V5SDaRt8SdfwBaifxRgb+VdciN
yGXor8B2O/kOp3yGNcuHOX+F82XM+PJsr6lqqxnRrGhmX1L/426rDVrBWV7a
334Z85IL35P0WstGL/xx/C9AXqWeot8Rd141UC36ieHtTO9pH3wz81qOvUvc
f4xYW5JuWzE3w8fSjh2aWc1uC/aOZHoNY+QyG3lT1N+Q3lIz+ayN+BvWW26N
+yxfnAlGIX+FzUOTHVOy6N+CpGPh+/irDrwH6oVsjhDfj9BY1GemMXDMFfbu
QL4O+QDn92Q4pgvbVSPVar3eF76r0T8f8zfwFPoDZY6Vn0D3E2tR4LMSoQa3
FPkMa5bl8wL2GpI+i9uxcS226krM3iX/JTnMOvyFAn+L2jnaPUtSjh3qgXrx
pmqu2UU+ovceeOyvoz8P/alpx45/8Pmh5jnh2CHMFHY2oVNJLfPQyU87Zgm7
1INj6BYnHPuECcIG6UhXmDQdfnvg2Kseq9fKUbkKs4Xd6ol6cxs2VlOvjYFj
kXqkXuWGvku0w7TLFgWORXqDeovdxV4L7STtplTcbWkHahceLHQsVw/Ui4py
r6VyaoSvgX6K+czsDhxTha3C6A3I+8u8V9q5UeJZE/rb1M5bHfrO0O7QTrhB
uyrlu187RrvmUqnXVhizK+4YIawQJu8JHQOFherRnrhjgrBBM/Uf8r7Q3+pV
2PsOe9+mHLv0T9BAfHeH/rb1z3AX/P6k9/p7evgqfG3gvHaCdsPnCbelnJV7
TeCzL8z9ANuLQsdK7Zxq+KGkv03t7EH4+tB3q96w3rJmSLOkmezCdlPosy+M
ElbtSjhWa8do1wijhFXC/M3k9z/5lT/j
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.28786706422419606`, 0.4048734091522734, 0.6498481155998337], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFnHec1OW1xmdl2UVgmW3s7pQd2JnZ2RWJMVJsuRYUjKhgjBqjRrFFQWMD
KREDUtQgVjoqKrbotYACgmhsNPXaEgXBAqKiSTTe3ORGjQj3+e5z/Nw/fp/f
u++8vZzznOec37acfckJF++RSCQmVSQSnfR+uSyRWFWfSKzQ+6hkItGkHzPK
X16bSEypUZ7+/mmT3zco/3qV3aJyQ/Ucm08khpUnEhXFRGKR3g1R91s1fG11
IjFD7yPbVLcykXhDP3RTmUeV99/q65bOLnOd/m7KJhIX1iUSh5RUvyGR2Kyn
n9parfJblD5X5buqvz31nJhw3ubI7668bnoGqfxalf98z0RiH73f1jjf0rNe
8zymwXXHqvwflfemnheUv1BjelnzXNOaSByk+l1U5lcqsymlsWlcXZX/vsq+
p+ddtVnqlkj8SHPZV88YzXmz8qam3XaXGFvHnGLu7c2JRGXXRKKH2qvT019t
L1a9WY2JxFnq7y/6u6i1vSDSg9Tup3o/oHb2Vt2uqluveg8nnb9C+Y+UO/9e
vQ9R/lLNrah0H43tiEq38UjSdUao3b5a51H6fZTSz2vOSdWdoLb2q/R8mMu0
arejqXSM/Xcx/kbNu4vK36n6l2icFzd57F309wP6/csy7xt12M85BdedXfC8
vtHv69TmiFwiMUT9X6m51HT2mtyhNvbRHJ/R+2rtwx7Kbyx3mzs1zpEq/7nS
OY3xuwrn9euZSGzVmGp1LvdX+59pr/dWndeV91q92/qr5r1LYztA9c8o+kyM
08TOr/cesc8Pqv9Tu2hP1ecE5WfqfYZ+rnbXKW+56izRvBZqLnd08vu2SO9U
vb01psGVXkfaO0lzvK/RbdytvLF676/8gxNunzP624TvFndsP5VZ0tX78Qlj
0Nr/Rs/B6vfFpP9er/Jz1eZPVLav0n/mTCs9X+kZmtfn+vsmzevLpNvn/F9V
53HOVpuLVXd4ucfxuv5+utx3akGj7xjpndUek65f4gCt59vKH6pyo5Vub/K+
/7zodV6lv5/U7/erzo+V/4rG8lPVvUN1f5J3vd0F3+/7VGaD8jvpvYeenXGP
322wvCjTGHZqzF9rLUsa23vlbuugJpejTEG/7VC/Eh+J0Y3ul3bHaI9G6zlM
5c8u+r5vUL2L1N5G1V1c4XlsjLnQB3eDe3GH6i/Sc6fG+JHKb0/6Hs1X+/P0
nKm/U6wd/av9IWr7Cz3nawzf9FBbelLKv6LBbbEXBbWdVdsZPZPqnE/7G5Ve
p3IXqq3ndAbeVtvPJJ23PvI36vyP1zqeog2o1Rxqmrw3m5R/sPq5NOU61OUe
Dav1fv5adc7Vb92Ufjbn3zciHzX2vSp9vjnb3TS21VqPp/TcpPF8q99ma2zf
Vul+qp/zEq5Hfdraqn4fU90P9H6uwumP1U6VxtXA/iETGpweqLp3q95iPW+V
OY/f+qleg56HQ85/pLOxS38v1h3fVW6ZgKwb1+D6yDrk89AG389lVW6H9is7
++x8Veazf3f0Vac536r2a3OW34xhf8qpbk51l1c4754o/2be6Tfy3qe3Vffw
MtennXe1ljdrn2/Sc6XOy16SM5Wc9U4+E6eq7NF6qrkD3bUXWtdFXX3WXtQY
p+lcFFWvu57OOkerVKcs1q27np5q61b1PQe5lvH5GqL2Bur5SdIyoVV5zSqX
1TM44fNAmr4OTVrWI+fRe5nQfWvU5jzlH6nx/73c6b+UW0dwrpEdQ2s9/qFl
Xp/maJ+2Sa9X+wvqvW7kPxi6Zoeetxo89hOQw+VeD+Rzd63PcuV30zun8s16
1ib8zkZ6apRZ1Mm65fHQU5/oHK5osAyZXu189M/16JzQO/312xqt48SEzz+6
YGeZZSN6bFeZZVyHXO7kvXpTTwtyW3lrlJ6l/NfqnD653O+1kX622vfwPsZW
7XzqPVftu8nv6IevdB5OSXjtwTboxz493RdnBJzDmLX8HTLnrVir72UQ6Z6R
j56a+f08Ve8ytb9b7T+VsGxDtiLfxup9p/oboPLbdQ/XqOydwkV3JZ3Pec7G
GWC/uBeLkpZF/L4oynCP0g0+rw2xj9ypVIPzSc+t81z3LLfsaYpzlVS6R/xd
LVl7ZWAv2krFmdyuuh/WWWeBX9h37jV7+2Ts75xGnwnuL3PjN/RC155eh39r
bm1NvgvooIW6U0drXZ7p7DGkYpyfNvscfaCF3lHnM0T7N+rc3lBvLPG08lbr
2Uf1e4UOR1ZytufXG/vdpvfCesvcdWr/XLU9UW2/qLKfqs7MMsvInXp+od/W
JH3mOG/JZp+HO0ohQ6NMbcoYaS/9frUOyOVKf9lq+YnsBCNcUG/8wd8zykLn
6z2vzntQoTH/ocn4cUKzZTjye5LK9FP+XD376RmgZ56et9T/+XVOv6myG1ss
ew7WIq5U/hzkTrnfcyO9WnKnt8p2kY7unLF+Qc+wTmAesMq8Tu6XM/+55v1N
rTHEms6Wc+2JkOOa20GqW9Tvd3Z1fZ610c79jcZDf9KcW3VWfqh+99EzRH+3
q/zr6udNtVGt316v8IN9cY/mu0VlNtcbLx4n+bxBeYO1xifkLJN+pvTHqr9d
z6P6e5r2Y7nmPF3voTm3ebTeXNYKjf1dpZ/XXJ5LGgcvTxqjcA6Ri4wZ2b6l
k+fInT2vq+fMfIc0e8xH6f2O+m5V+kilT1W6SemDlf51yXt5od5HKL9e+fsr
f23G9kJ1wbISmYi8OrDJmAwM9nrGuL1ZZbamjB2+Knm/2T/GOkvv2U3GHo26
jz0rbD8c11tt654f29tngTPB2diju/PL9B6lvAvqfE52qt3Dtba79P5ryvjm
La3P5dqryxpdH1sN/Y3uRoeTRkYdq36vUF1Nq6M8bWIjvS0d9BD4Q+9v8sYT
/9Z7wJ7um37XFyxbNxR8V7mzyNJpKePpIwTy/kNjGqnyDTrDr/bSPdHYX2hx
PyOjrzUZn6VDVf7LXpZHnYUBD1Pdi1TmUL136+49qrEuUv4ujeNdjWd33niW
NUTezNPf5yh/osq2qq2s5vhRk7Ewsgcbtl59V2tsP85ab5OP/XZ8L9uUw/Xe
r9H3Dlx0o/pbojL/Snsv5sfdnKMFu0jnYW6z8eOs2EfGQRoMMDDKc79rVf8g
lb+qaJtoSdhFyKKttZa34CjGDJZifc6Pdf5S6zlM635Sm9cY+ThIZU4vWr6t
V/u/0DgOw/7Re4SewUqfpfcnWpM/qI8dek9p8ph6a27DwYO1vjvTqrwm3L1N
rR7PvRmfOXQ4e/pone8IdTlT6PhpYQdgD2CTjml2u6P17l3vfHAee3I2OCfs
VsrQLzIG2cVdXa7yY6QXltVb14HF0X1v625t7GnZDgYnHx36ZJRHjrzXyfec
O54o2ma4K2/9wF3E9ucMwG2gj2hjbLRD38gL5NsxwX9gx52jgps159+XbL9w
t8FoTaHz0aenq8ybKnO3ylyu9MdKP6F0XavlzO60sS2YGByLHqffRbEep4YN
OEZ1PwM/lazH3o75olewQ9Epv1W9ycp/Vb+PS9oW7VvutsdH+2/U2366ssx3
l3xw326tzRw9FwcX9JOY45Rap8Go6PwJYas+GGMGw4/Qe1CUGVlvHYeuYxy8
sZEZ80GxzrsD/4NfalLuZ6Bk0SE5n9mc8s5s8Di4j2Vqd0En60TuAvYyuvn6
knX/zJJtWHgB8NaPdAde0hn8ndbs0hrr1HVqo12/vSC5cVWZbWLWkPHAa7Gv
jXt4/VhHdOQ/kuZKzlDZZJvvJnd0a7nT2L/gWzAi5x9O6ICuxrBwErTDGmzR
32fqWVpm2x17Fxv6ikbfb9LoS36/Su28Ij22pMwYeK82t3kyukhz2l/pfsG3
0e++rG+z809s9ryx/bD7XmozR5As2I44LMpflXd6Yt77dnjkH5H036Rp+9BI
H6h2G2hf+zK51vng+aa0sdipJY/n8Ngv7hx3j3s6RmPoorFk9MNT9eYb4R3B
/sgH2qEcGAAeEv3/RJn5xklq9zHt72Tar7fOxc7dX/u6QPkXK39KynLlxZzP
NjgO2/ZnTeZ2wB7IvzXl/u30nPmhS1TvpJR5pkeKxjvIQzAPY/xpjKe50nY+
tiN25d1hb2KfsibIrv00nluQxRpPc+Ae+s1lzcucWLLuqu1qnNNb+Vcr/xTl
f6pz/Yme58uMreC84LuOqres/g+130Pjq9M57q73wGbzkXO0nivA5Unra+yg
LnoWdPb94J5wT7FrsW9vADfpHGzTmn+k98Quzsfmhe8d2mjOF75ljJ5HVH5+
letTF2x+dI253hty1jXonKk1rntjwm1RHl53JvX0vNnJOh5df4/mfUab78LY
oud3Qw/j9tmNthmwF7hbo/b0/SIf3hH74qMWl9/e4vWAE4QPxM6gLnbIaTqT
xynv6KJtYHg09OwtVR7zariUovm+4XpPVvmxSo9S+pyi5cW5Rbc1O/qFT7sn
OLWXtXZrtIavFIyRrlebL6nNazSHuzS2KxPmf8jHxqQe9YcmvB6sy+thO3bY
kHqOLRqH9k4ZZ8E3gbX+Ve00mAG8AIZgLutjTeCEr482GcOqOu8ddgAPe4nt
tTLnfViVM569IcYAp8TYsJWOKHp/BxVdjvI/yvmOosuvDbuDNDod7HF54MZV
WovHlfdUwfbs6Dg/lL086h6qdV6s9mep/RUq80S1bSi45dmx7/BZcFHnaB0a
wLp6NpV5r9ln7siOTk6j91nbe2Nf8BFgr+4ZHAZ1WR/OCPWPU7sz1f6rqv+3
4Hye6eGzvaHR/YGrn691efqCT74n9u5WzfPobrb9zslYDl7aavzzdbU5JWxZ
eNVs8L2k+4d9wZ3Apng5a67iTznX+ybqwqNfG1w6ef+OfPQC9hTcMhwzafhe
1p196Oi/YL3ZnLIcRB5OVfqvku9rVefzvG061oo5HdLFuge9g428sNE4CF4B
jhhugffCSI9ImieFD0NfUfdh5f8gY87vCt3pw9TmOOUf2sVtUR9cxd9jG/+/
z7FRF86Vuwm2gWc9LbhWOH72jP3CtwQfvLfOzrM9vF/ILe43Ngl3hDtBmrsO
7v06sCjtM2a4XMY9L/qi/3ExBuoNi7o98m6/u97T1MA0uI+ixzgv2kFOY8PN
SNi/dH/YufDuC4N7TwQPBQcFzkk0GiPBE35cba4QDpx8+Lr6cnMKnDF48bLI
56E+GAneae+ePjfljeYZ4RjxjfA3/gL0PfgN+x1s1KnRfBm4jva5a3B3bT1t
G/Nuj/Q29fNhgzEHthq8EPfk1by5p9f0PlnnaZnS7yv9gX7fWm2c/4zO3nKl
n9Z7bNo+F3wv2HDMrU7PRynLgz45z5s5ws0z9k4xfjhGeDV4xn4xvt8lvJ5z
YvznZYxHL9e9e6TGMhr+6RP1/RF2hPqp7Wy5icy8ROfyN2rnYr0fCy5xXXDX
uwO7IrMpM73K2O/qnuaEePM3OPAw7fFgnc8j9bQ2GYPQ77Sw6+GnTu7mMeC7
eL3O/CN8Y1mzMc4/tCZHNHnO7N2T1ZaD8E1/L1jf/XfB/DH7y97CdbGH8BXI
Hsoif8CUjA0MT5uDmryOy0KuPhdYflacB2QNZ2fPtH+n3LOdfG+5v/tkzIUu
ify+2C8NxtzI9aWRDw6HJ+Ke0va8aP/nGltJ827Vs6DN9v+GrLHG1uD6xquP
edq76a1eM9aO+8LvH0QZuFj6Yt22aZ5bKz0GbFLaxM49vsn+ucMrbI8OqrBN
ik5+sdp6i/cLkYav7RN354q0ceBp2ouqnr4PnP8Xoi5Ya0aMJxVn74mY+/h6
3xPuyJlxZ8Dr6HhwADwJepi20MXb405RFn/pfVEG3+EDkWZcnHlk0dzgfOB+
LtU4n1K9k4vG/NyHynL7r7BvsUnhqrmrF8YYV8S+gx+Qa8jFL1K+x+g95HOf
6OvqnP2Z76XM/zIecBE+eubC+Bk7c8jHWV0Z7T9XcPrZgte2Mvjwa6rsG+b+
HlrvOpzXTXXGQ4yTc7c81hN8AjaB46LcisADewZHz3qR92T0iw46scZy+HSN
+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
v1tijnemzQEu1LxqM7aP+V8a/weU/r1s
           "]], 
          PolygonBox[CompressedData["
1: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
KS08
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.45471355512790557`, 0.46350955611523836`, 0.5517658334072376], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNm3eYVdXVxs8UpjG0Ge4wM/dOn3tvEmtsgCUmxt57AQsRBDWJJSpqgooC
KmJHigpIR8BYUbFEEz97QaxgoaOixsQuhPa9v3kXT/LHefa+++yz66rvWrfl
zPOPPa8wSZLlnZKkSOWA8iT5nZ6p+jGkNEl+VpIkM9VhoOpTVQ5Xn811evR+
XGOSvK6+33RPkilq/11tkmxIJcnZ6ru1IElmq/+raq8sdL1BbesLPF5a5dsq
Z+l5R31mFXj8SpWLa5LkW425R7FLxm9S/Ym2JPmN5luockf1u0D9P9W3k1W/
VPVClRP0DFV9i9p3ij5aVnJq5yQ5sCxJDtDzXXePy5jT9XKanjP1fK9xv1f7
dyrLY22sc2KM+SeNc6fq2/XQ/lT/SufwD/V/Wf37aF0Xa7xbdC6rtP8Lu2oO
nWkmkySXVCfJYbkkuUZr2Kj5/6NnjM7pkKokeaSL9qlvPyz1t6s13io9P9NY
65qT5GmNsbFe+9a376rPO3rea02S9zXGrRq7n+rnqO9v1Ke0V5KU6Jmn9e2v
+c7XvAeo/KYt9qxyjdY8R/WHVU/H3XInC/R9meaapnJ6udue1x6XqP+16n+7
+q/WnKtYv97VtSdJu+apV3mQ5rhQcx2sspPurlhPldY0Je7lzxpnpuqXqd6p
wHd9Z9Rv1jNW9bMT75m9cw6cCXXobDx3EP2nx7dXxZi0X6h6P93fKXpu1+/T
VZ6m54eU+0+Ib8dH/QL1f1NzjVe9WG136Q4qtJcj1HakzvMYlRXa17+01xGq
/1b9blW/cUFjxdB8J/+epN93qCxQ2UNn0L3a494d+6L9Ca1jYcr9oKXbgj6n
V5reoMO/ZJNktOhhmMpXddZHa45XuK+0+Ep3vkrlRr0boPpK1cdpnFtinNXq
18LdqByptsf19Clw/UE93RLT8oLgtUbd8W81536tvovLgq+7VHvMMxPz0a3w
veorNe4yrXOFyik618l63uzleUbG+DtCOxpzlH73jrnXJb7D1XGPY/TdDfCZ
vh0d47P+cXEm3GNTmed6T/usL/R4jHOs6HC+Jnpfa95PvLBG71fr2Vlz1uiZ
VOT9sU94F7kFPZepvlpzNmtvieizf/ALfANv8/5dvTpY5R6igVsSt1cUmv5p
6x3tVzJvmfkA+rxGPH6z5l3a4v0hF6dqnhHRvodo6Gl994bubW+NsY+eZrU/
VGSZ+IHeDdLaBupZn/J7+vFNXcr1GuitzPIUWdqiMX+h9laV49t8TvtqX7vq
9+Pqs0+dZW1lyN6btc4btZ7FmnN23Dv3/5BobajW+kKRy0v1FBZbZvTWNx9o
3Dt1D5fp98Qil5dG/Ym8ZJ9oNy/5tFJl/06WffDEP/X76qCD3Qt8d1t01p9p
D3dIXn2lcU/R3SxRe4HqJ6v+vuqTdAYj9M32+qaw1nIOGX+c9jZM8x6rcpcy
15GvjRnTwBydwUHqf6CeI0VXq1q83xvVf4SeBeo/SuUB6p/X91fnLOs5I870
qZTvGL3TQ3ur0nN5YrnUvcj8O0hnukS09x/to1nn9geN/5z2epbaP1b7VrX3
15nO0L4P1j38u0K0Xea9dZYs3KUHm3W5q56hic99l6hfq2+vVf0KfXtqjHNW
vXnqsB7mq4PaXT9Q5Wbtex+N/UyR7/G1Et/LCu1luZ5x+u7scp8XvPEvrecW
1U8qsYxAVuyv83igk+V0Dz3P69y+1u/NTZKd2tez2tenrW6bIDq4ROu8Wudb
oP1019h9202vu6t8NOO2R1R+q3NtL7KuR09ur+euAstc5ON/xAurCn2256ht
qb45RN++m/HZcCbVevdSke/j3MR6hHtB9rZrvovU9latx2YOfmfUnlU9rXJ2
m2l3Vpt178Tu3gfnxF44q4f1dNE6Pgz7hDXDjzu2e/75OoMPdW5j1X8Ztk+b
6x/VxRgxzqt6aoJmCnK2fdal/f7O6DNP396j+kp9+6L2v0h39lLWc34bcmBy
u+XVVN37OdhQKf9+uIfpoFrPFzUukYsnap4TSs0zW3VnL4rvZoov79H363RO
x2uuvg22N6ZnTEPwPjyJDTO4yue2XG1tnSz/Ho71cHdd0rZfCpotz7BTkGlN
YbNA/+9pvyU9xb8qn9Q6+1V4rJc15z3qs0j1c0o8100a81itY4bWuarJbUNi
Ddhk++vZFTrRHudpzHe0rk0hD/Qq2aSxr9NY1+rZoLMaq7FXaK/baY/r1GFc
xjoc/mRtrJG1IseQRdNi7wd09dlNgi/U741in8ca0eBmfX+r2tbW+D32I7ze
FGOODb2OrYI+P7jcvzdqbSO1rhF6nurk77A5txZahpVDr+Kdxb08LjbFW3qm
6t1eooO++m53nXe+3TTdprK/BvgxZX2P/VVdZX69IMZk/C+LfX8L9buPxtld
4+yctgxChiBLTuhsndpYZrtsg+5Qy01O0p19rrFbdG7nqf9lmvePKgfiB+jb
Io25pdD9P1P/08qta3l3tr4dK746R+WROeuFw1WeUuFx2Nuf2722UVrDZzU+
d/bO+SJvOicukT+sZ2S9+/Pdcbr/O9VhiOacXm0ZdleR30On7LdEB9BJz7KU
ZQMyAh68QXJrdDf7Dku0v01691ViXY3ORk/fqrF/r/pe5b6Da4ptB46UvDtE
33YX7/TO2j7fUed5WmfT2GF6nk+bNncX3f1V/LaX9vZA3rZ9cXfzW3Ob6yM0
zp7NGFbq12yaPCRoCV7+dcr39H27ae87lT0lh59Rvz01zz61tuMaMV2arVun
aa5eoXdrm22bjoj1o2uhcW21w+4bGbbYmG6mFc7tWY39ty7mbfQodc52WLv7
HFTntmeifbzW+feu1vfYoXeEzQuvLxa9XVfsd/SBdkar/ozq/XS2XVtd79Jq
exq7envd84qM31eqfazOeYbO5I6sbTd8QmyvHvpdp/aqrO3tR7vavlim8RuQ
+cXWI6vDxmZN1C9LLF/rtL5vtb499e2D+va7EvtI2H53ay0r1XdFoXUQJb/X
h95fGe2TNPdcjTVZ5T165qs+Net5VsVcC7WezuE7XKS7WY+sxlbX+83hn2Lb
bIr6UtH2kpBvrxdbZw1T2bfcOuKzUvsBh4uOxpdYnl4XdD+13fpgmsq5ev+N
2pZqzCeq/B4bdW67ZfE8lc16fq56U7tt5kndbTPtq/X8Ss++KfM3fA4Psl7W
jbyiZM3IXt5vjXZsM+rIhHvbPObHoplV9bY7zstbRyFz0VOnl3kN8Bhya3OM
80i15c86PY+qYYGeM/TM0dnM1vOc+g/SmH31Tc86y2FkO77aF80uv1R5eIv1
TJl0SlmldQ+/0RfwMjrjba35Ys05X2tbondXaOxL4Su1N+gZJBqfoDk3aMxL
kMlp80mqxTSHPQvGcIx+b1H7dXrftdL17/R+l3b7CDurfKfWttIs0ckO7bZp
tlN5hdYyrJv1ILzbt7vtZvxjxsZHfkntm2PMhVr3YyVe58i0z+OXkjmtPU0z
0E61zvCMUvuy2FPQLnQ7I84P321WT/ty1JkffcwaVmisU3VW/cWLP0ov/dDL
/t+nmnu4vh0T/tno+HZLqcdH92FzoTMvCr8J+qwMHw7/Fj/utFL7x7eGvYGe
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
           "]], 
          PolygonBox[CompressedData["
1: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
1L0G5VTKrVrHrLt6jk9FzgmVG6qHtRH8/0wx1mQ=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.6215600460316147, 0.5221457030782033, 0.4536835512146419], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNnHecVdW1x89QpjID08u9M3fuzJx7BQUDguWZYsESe0eKDY2JiIJdY2yJ
hSRqjEGlJHYFlaKgmFiSoIkvokaFCEZFRYmKGLGigOj7ffktPr4/DnvPvvvs
svbaq/zWOuTHTzrs9F5Jkvy5b5L0VjlHf7zYP0nKVC7oSJLJVUkypjtJPtLf
o9RnncrjqpPk2Gr/PbE9SfavTJLTVB6vtnVlSXK02q/skyQnqawoSZIT1H5D
eZKM1t8vVWg8lUz2QX2SvFabJNP12w49SbKL6sNV7pVqjtIkOSCTJBvVd4Oe
y/TKRs39pR51T+o03+dqH6A+ieqrNO6SvH/foEfLSKa3uP4f1X9U5rEY5xut
59lSv79M9SX9kuQz1WeVeK5qlU83ex+f6f3T+3jtn6t+ovqPr/YeRjZo7xXe
Z4/WPVjrT1Wu0AKfEk0GMIf2+JmeWWobot9GqM/2Kg9rS5Jx6nOp1n6y6Lyd
6PxjlTvo2aj2nXJJsqfq5WrfW/W7tc/qAaJf0TSu1fOgaLi8wjR9pMJrpe1N
7fFT1Req/qrql2k/i1Ufq/oLGusH6vtcVvTVGn6qs27Ueo4v9Z4Wqd9fRbeH
NO8Xmr9fb7+7Qe/u3+IxOzTeID0P9TadH9N4j+qZpz0eXef21WrPq5yoMZvV
93XR+Cb9XqK2U5qS5Cd6LtXcpZq3VW03qv/Laluhp49oVKW1DRYdajq1b+0l
VZ9XEvdt03OV6u/Xeg7Gf7vK7QNU/4vGfFvzfqU+6ytN+7PVNllrnFTh376A
PipLg1Zp7GuOGspVPyAx78Ob0/S8orl6wbNqH9oq+mvcxztMp3EiwkqNNUZr
H62noH3tJpruq3d2V7lU7xXiLJrFC42qV2quX2neNXrvN6r/UeMcVem/Tyo3
XaDJGaLn5Dr/vaPG+r7G3EnlSzq//bSXmUXz2oHBb9yzC1Su7+Vz+CLuAvdi
Y9yFk8VzazXPRq1/uNb7geqnq71K7Z9qzOGieV+Ne6D4u0zldiV+l3v3ctY8
/3u1X19mGYBsWNLsOzOi0bSEppxXpfodqnFqVC7WGidrbZWlvlPcJ2ROifbT
F/qqXKTx6zT+Teo/qd19N3e4L3tCViGbmHOp6gM19g9qzWfbqt/HmuM88Xir
6m+qPkLj5LSuTj0TNedS0TIrWn9e6nl4Dx76jn4fquc+jbu21v3hr881Rok2
PlH9D5d8qRMfH57zb4zLgm7RM6fEZ7qbxp+rv2v17F7nMWnjYY68+lRrjB9p
7t3V50PVB+h5Q2uq7u37xl17XeM/2du8MVLv7qkHQd1Z6nnZS77etK4Omf2d
reuvMs/VqH6u3rur3HRHvq7Ue1P6+L4iMyRSkibt66+SaW0qV+n83mw0rbnP
l6rsKfG5cr7ImKX9PR9zISNpv0lj7thoPqDvIwXL90dVjlHf0XoWq29f6ZJR
ql/bpTPSWb8sHvqh+vxTc/1Za3y81PceGSUyJ5dojq4Sn/uR6jupl/mRuzVf
dJvRxzIeeQSfL2j0PR2sv3+h8TdpDc8wvtb1nJ6Z6n+R+tf38lnMU3kx9x95
pjXsWW65cDvyWM9MrWNok+/LKL07TGsf2t93ZjvRtqh1XK93b5VsvEXPUXpK
K/1et9rPq3Cds5uuckac+23lrt8aMnNhyKRTVP9M708QHfrq9xc05x96WQYj
x+GN89U+v9w68oJe1lulep5tNn3YO/w1PeY6QPq0qDWfLJrndMZP6azbVd6o
fufo9zMSyzjkcw5aqu9APWfr91rt71HR+RE9BzR4zInqP7zRMvFMre8GtU/V
MyV075chZz7Sel7r5/NA750UdsFtsWb07O9VvzPWf3Gc9VuJ9S08yL3/QuP8
Q3u9W79dq79/p3Jz3JH2Zt+TmibXN6r9DbV3NH/7e0e07yDaDtNzocZYrWdu
3NlF2stDes5W21l6rgs6T1ffH+rdaSpnqH1arLOl3nL85l6m342xHvrtq/4V
Wk//Jq+J86WNcT5NTMd9oz5cNP6b9rVJ9as1zlUxzpMF2w1/U1nfaRrWdlov
VYQeR94wP+ufFXRkbXdG/VL1eUXn3k+XYrZsh2vEl1e3mJYb1D5W7a9lrLvQ
OeiiXUSDnfV8o/nW6Dzfa/CdfEf7Wtbf974hbLKcxthe5fI+ln/36L3Zeg4q
8z7YzwmJz4o6+7pOfddrvE/Utkxjvljnv1/sZ3n8cYnP5JbYV0Y0aKs3v7wp
3t1W/U7JmQ8uiP3Oijp23Wz0lQTaL7TOfWqsU9nfsl6+86vU50GtcWGjZcko
0eNoPWf2snxF1sF7g/tarvxcf8/U7zNafLfqYhzkxllt5vdftVp28C6ydKPo
cqzGnpyYX2bGOmmDv2j/XdF3+17Jp2s19pEtPo93tf539CwttT3B2n8VPHlM
mfnyhriz0HOY1ji+zHxwadH1tzKmOXNh/3za6HcZ4+FG8zprmdLis3pNfX6u
tvcbLM+eE8/dJ9ptyls+TQ8ZBR+h79G7u9bbB+Dv80K2QbeDctZtR4tXO6TL
t9H961J5tGR+jfot0H5/H/fnq9Q8yhlvTn0myG7k1xk66xE6wzNVtuj9bo3T
pnJNs+14zrozdf1a0X+q9l6q8edkrd9OKjPPfK3+p6h+j+pDtbb/ih921Np2
6TSPN/TY7oYOB5ZZr0wK2YUdjQ7Hlp4b+oL6Q8ED8AK8Aw+ta/S9mxFnvTK1
fT4vY9lwbZxXQ7354UzVl2vNe4jON+Z9XtcGb1wWdiHyZ67GnqPnmpAN18Q4
W9ZW5vWt0DgLNE7vLvPbjJDnlxVNh/9oDXN1VjPLfO/GSyadoOco0ffQnG2P
bUSHZ1LbRs+qTEWftWovYgfqeVb1CpUviL57is6Ha+x8annarbKh0/Z9S6ft
lbNi/ZNE297SZdeLfxaFntXPW+7LxcEznAk2BPbDOVrrJ1rrvnn7c9iI2If8
M6mP7QFkO3L94j72t47T2Jf3sZ6kLNPYhVg/++gMPoQf/11lvcK42HPoIvxT
dAI2EfoIexA5hU+BrY184u+Xqmx7YXft1GhbZ6dy+77YqCepvTNonWj901Xv
p3M5UfW+ehaovTRv/3mq+j6pbh902Oa/UHbuOPVfoT6D1KepaHsYu7hcZZme
5/r6/leHfYidSH2C6kN0np80Wg8uDhsSHTG1yXSg/W2d3TjRdFXW+gc9hC4p
tNteKap8u5d9k/MT6030F++O13pWa/9FHcAJqtdrnYd22nf4ez/bRd2SH0Nq
fQ49muNs7f1/tZcHuiwTkA1v6/e39ByjPt8VX+/aYjti32rLXGyzb3Ie8+uc
5S9yeIttF3wIP87J+O5wh9BpL8S54w8hE/+hNf8PPpr6H6Zxnqy1rlqh3z7p
5xI9w5mvjHNH56DL0KttWk9rtf9ur/c9ot+fNN8N2vOjKncOGYIsGdxmmkCb
WXpGqM89KrfptH0/UOVFonGt1lepdZyvv3dQ/3NV/rLFsvi/zbZ9Lol7gQ1+
Sfg7t+Uso7olR1/S3nPYLdrfQz3e2yKVvTuNY9yrec8R/e8QfT7PW16vC19p
di/Pz6DYdOgY5A30GhZ7X6p3LtG7E6QH/qD6D1VfoDFrtYYXxQN1Kq9Az9bb
x1is+fep9fkdo7UtV/9/qf/FWs887IicbW9+5zwP17g/1bsHq5yCThWtTq6w
r7I0fOTttf6LNM4LeduMrI972qCxlmkNjSof6DQOM0hzPZaxDEQWrquwHmQ/
hZz5Fv6d22nMalvVq1otd9AJ8AK8wfkPU3s/rflAtX/VYnnRpvroTvPDQr37
SY1pckr4ItgF6At4Gf8C23u+7vUVkg2nax8Hqv2AFuug3Urdjl2EnfXd4P/F
3fYxn+i2PYAtgI2G3QGGxfhfNtuGw35DfmOri4RJn5ARvXs89uUxPvp0vxbr
VOwF7Ab0Avrq1vBTkIXgBdjZrJ/1cAdviT7YRdjwjIOrC/YDBsRZ7R/7on5P
/A1+ckSL9Ra6ChodGHvHxmFv4xPrQHQVevCmwFc+CB9ketR7tdpGviq17TAt
fBP8JuyRjWH/YPvAt9gq/Ia/w9zoTfa8IuxT7vsk0e30JtP62rDb0blvin63
x5jLdEbPq/5IiWULNMf/wh9dX2YdVNZqnOn41BjendGfd6nXllgmXR3vMh6y
hj6cH+3IK2gyr8U0w57Grm7MeC23xXompj6jTS3Gzm4K+hwR/iZn9EbRemmP
NusB9C96GHsZLBJcqFx3dudarwUewd9+PPxteAH7Yrrefarc2Neo4JH1ieXg
MSEfjvh/9shpouXx5daj4GpXh29WEN9fqTs+ruA1HhHjHxR2J7bWRdK595cb
W5gbdIA3WA994eHawAgbNX6H6DAY7Ca1v4L+Z4+D9N7AoCe0pY6vOC/sasac
HjY88oc7umvwOZjIXXFe3OMZcde24AQt37bNjHd3VN+pesaBUVTZrhlT6jvM
mNx9cEbwRuwHfGHmRn992GxZj5zPqezUc5/a1+SNO/wsa99lUOyFfVBfovHG
1rkPGAH8y7vQHv2PTYANwN+My3lMiDrjD5asekJtd2uccWof22S/E19+XNj2
4KbcDzDVOXF/odu8Ssss8NJs2OHY4+CTnwZG+VGj5RV8uFF729RsPcPZVWqc
35a47atorxbdni71GWEX0Aesoqlgv6K5YJvr8/ATB4bMgybcReQgd+q1Uq8D
jBS7DztwdoltbPrgI1JuiP6sgfV1RPsX0WdztKMTG+vdnzHuF81rqhwnYI1V
sU4wt00xDv7FN+Fj4AOMivtyF/yv33do9bmvazbPX62/f6152lP7jfiPEzpM
w6PDj0BeI3PBTFaGX46Oxrf+QO2zGs1HH8aY2zRYPiIbaYO/wJrBDBiHre1X
43Viv3bV+yzYB21fRzvP5qDD5mi/J850c9TL670XdP9RIX+4q/sV7V9szvi3
D2MNX4ctl3Ta7sD+AWsF2wV7fVh0eq/Zfh0+3WTx1uXizQe7fA5fxlng59EH
vrkmaPg36Kb2j8vsIzTV26fmrGdr3FPV9myL+QIsbXbgBO/GXN319hnhyaac
7fs3i7Z/8VGxgbFNOHd4uV+ncYpKlQ0NxtyRrS/o90nqm+sxT78bfEX5XswF
hgEmA1bBHt4LPGtDxJzoUxH4Hnb72SFH0U1rm33u1WWmIfTjjLbPG6s8Unt9
Pmc6LOy2jkYnY0fdWDTNH8Rv0706TevYveB4D3GfuV1uA5sFh91Pv03W33ur
7Ko1/nd44r1AO/YF/7Em5B4+zVfYt6pP6jI2emhqfB3agOcghyaEngCbXxt7
wedbFzGsr4PH4EH81zvDVkHesUdiNMQly8KOBQNCt/1ENLiyyrwEXZDbz4YN
hm2C7cHa0Dm/DL2Dr4XP9dN2y1JsAuQkMvX0qJ/a5DVTxxaeFDbDGe2Os0xu
t06ljt+HPmJMdNJRQcvdShzjOiWwY2JCxIZGJi6JFeHTIYuRyfAQWDJ18GRs
PHx17jXY7ZiIKxGHAadAT8G/+BXwxdCIqTEX/uLoGB85UhJxK/bAHvF9D2rz
etd2fKsznit1yf7xteB/eB/9W9/kv6m/o/2PVVnbbv1MH+T8hnbT43tt9j3x
H/sHFjog6uic/oGLbvl9a5+MY7CnxJjs5bTE8V3itIflfRdZA3J4eJ1tr0fi
jCbGeU2M9VO/rL/pz3jsGR2JrcJZ50KHMl59+CBz+zlmhr6+r8q+PfvBLnu4
0veV2CJ6EZ1IHGN8YCmc27g4O/w2cDH8OOJIuYgloYcvbLYupvwZ8lz1dQXL
8Y8KjsOC74Ptnx3YA3oQvJ924rPEE86L+MK0Ro+1ZZxmy15kcL/A6rgzxGeW
RIyGO4I/thXbfC7q+Gf/jPgINiy2LLS9osO274s5yxbieui+jaHPkUXgQeBC
a1ptt+4ZcYfdIuYKrbANsRGx6yoitkiM8b2seapPm3+fHH0OabB/yLkgK5AT
xJ6IST0acavlEXdeFHbxCXFfwA7HhZ3D749FH86aMeEfzoz++FBvFSzT3y54
rawD+YvvSawT//OQiH3w7oDgW3j5+irjDvQhFkt9edbxUd5doXq/iIFujYUy
FvuCnytDv7xWNH9ckTXfLQ5caYTofpnK8boH30/Neyt1R6q6HCcjTg7ejQ2E
jjtMv92rslR6aoPG3l1jP1A0fkZ//Bfiydh8xNIfKfr+3dvqO3tDYEbETrGx
9iu1v4bsB9sc1W65PqrV8uhB7DSNeWaVz53zP7Dd8i+rPtNS38MFXaYtdAWX
viZ8UvDMeVrDdzXv/KJtIHQP9tPB7ZYrO7baDsLeB/tijVNDbhC3PLXUsuOZ
fpYVyKYJIcOQadjs2O5v6N3Xc8bt/itd+U7e7QdlXe4Ufbhr88I3uTR4Dn57
I2PsfGXGmCLyeio+iN6fAiZesC18ZPhlF2Qdiz86Y/8cP/3egse/P+J3NbEX
cDZsDzA4Yh/gZPAUPheyZ2nYC02BtYK5ggGBBZ3XaR5nXPh8Xtjw+F3XdTn+
+tPUc86PfU0PnwZZ91yLY3pVRe8XfBbZhQweGnL4tXbjfEPbjDdu32Qba6c2
0xudMKzNfehLDsciYoZ97CeBA69U/5bQEeiKrna359vNc0OCDuCj5CGAkeLP
Dom5SjLWafunxh5HBP5Iyd/kMLTmjO+ObHOMlnbWNEd72wW9UHTOD3XwMt4f
Gn0oh8V+Zxc93vOizeY2x64bi7avsSeIm2A3ka/Cb90dXjM5FOTjLA+Zg4xH
Pj8RtH+s4lsZtjxi8OTdcD8xZLHjwL635mIRZyDeVNlhzH8+eUCd7kPeEzFH
bEdig9Cc9YzQTx/nTP8Pc56DNTHo8HbnrpDDgo20f+Az5HFAd7BCsAH6EPtj
vJdjj8PajR2s7jA+/XLk6iDz1gX2+krGPgdxtjGR7wUdKsN+ru3x/Tgi7ghY
B7IDuUGMmJwq5C76AR8VvryjaH67TeUhBZ/PP/V+adG/w7/IZvpvjaePjph6
c9E8OLDNcvfQGJP+h0S9udM20mzR5Nyc7dNz8p5zSMhDxj4wfGZwQPDAT1uM
HbYFVoytiT2M/U2uBdgxuDH2B5gneg5fgJjXpYGrMA7YCryELc7ZjWrzWWyv
tWSjP/EscOhs1FvrHUcD/xpZsM1JPgX6jX2hp57XHn4m22hI1rF6cAps4wtr
oj2x3ge/BWf/QY/r3+8xPkn/MwOr529sg19lzR87tLttl2gHC985+hMbIQcE
WYqexadgfcsCWwZjxi/BdsduR/dDm8MKzuMCoweP2Kdg/bxe/wzqMZYOpo49
zjjYeNVF69J3sz5zzn613tmlx3lBO/c4pkMdW4q8B/If5udt69GfvIvmoCe+
H/hxa9AWWnNm+Gn0x0Zk/LKQb9jzYP/EU8AryUmhD3J1eNY2N/guuWRr641v
vhg5eOTi0XdejDm34NyE+zuce/JKvWOrfyr43T+qnAN+ji3FGbWZd6py9oHI
hWKv+MHEY8AgwSDQpRn1/5i4htq/p7l+WLTNie2JjkRXYjfs1WZZlNGYx+q3
qzTvMQXjMdxfbNFH64wngiWS80kffLn1cV6NOqN7CpbVyGxwcLDpH6SOB7Df
bJt9RPw47In+BedB9Gk1PgFOgX3ZUTA+V97qtu5oH9Fpe3a0xvmfTsucGXn7
2W1xv8iNAufAXuVd6uRKlRT8N/V+BdsvJa22IdGt7KFXYCjIhSUF428XaR9/
Uf0jvfvngu/M/DhrbKG+DbaHXiqYLz7uNM65vt66F5yZd5F55CV+GnmhxL92
ibwL/iZfFPzwqYLf/bvKJwruv7hgXiN+A15AnIT7DDYNJgI2As5U7HE8rtBj
PqCOjbhIfc4Sbz3UYf8VPwd9fHDYQNhE2DXYN/ikrT3GAG5IneODbQbGBV4J
TZYEVtAdNht+UDHeJaeGOvYevhrz4lvA3/D5lFbfIe4SMpqyPOroFnQMegdf
lt+gab7HNtfOevdLrXW29n555HnN2irTqhx7xu44JmuccHTeOBn3kFgCfXn3
Dp3XNm2eE11RjJjRQJXtmqugeQ9uc07uSp3TJeSp1DgO9aDmur9o7AgMaYjm
eE19jhfPv6zy33ouLHVOBzFm4oxdqffOXd827z7HZhwfoA8+16vVHodQHbkZ
4N6c670hF36Udaz4pRifOPzweJe4LPJoQpf9oELkp+Ez8i7yhPEYl3wPxliu
B/NjncY/QuPtnbHfAG7I3rCvsZmwsQfm3X9sxjHGFfp9bKnjfi/HmuEFeAK+
YR8ratyOzY2N/a7GqKx3DHdl3FvuL7YDsejbI+9u//CvsINXRfy6XPSeo/7l
2lOzynM0xrk1xuSxwc+v8V6ezru9GLEI+r2Or5G3PEGuDMza3gI/w6bBtjkt
a/3zs1rHjljvjqHLkHfEUKaEjiMPABk0rMftQ3ucD0zuEbk7rOWCGuOUZ/V4
zDN7jBcTQ8ReILZKfU2LdRi6bE3WdIf+YGLP5j3Otmo/U+VZNeY9cijBIH7T
ZZz/vsD6mzVHTnM19RgDxXa+veicHvpszBv/ow+5fvALeX6PhL3InVzb6XNb
HmfHXewTd5PfqWOr4Dfih72VdY4aMnNXeLDHtsC+uju9tL4HNE5Jl/MC2MPh
2tdf8h5jD53FU3nvqztr2w4b766isanhtcZttvppg3VWg3vcvl2P8UbGR5+A
c+wY53Jz1nGKdXnrPWLE6L4BPeHDtvtOvxr3Gjv6kZCrdxftC9ypcq+M7wX3
A1sezAUMBzwTWQMWSm7csvhuYmTk7e8Z2D4+LbKRXD9yR9FzPd3OPSL3n/gq
WD3Yf0W928Eqwf3QK+gn/MhVkZd7VattgKYOx4zKBzhOhI2JrQntwBHghWcL
7kd/bAfGeKvR2BH6ivGRq6d02X4h7kpce0HYisQEZ0RckJgydj13lfy5hZGv
xfoXRvvHjd4z+13fZZp83mUbEFsQ3Uqsgz5b4suNfge/mb2R9wCs9GLkG0JP
bA/OmDMDzwNPAOcE92D/xIae7Hau9pAO03hY0Bna0If979RqPAFcgXlWBR34
rmJp5DMTjyEu82v13S7yyckrhwbQApwNnB258fMO3z/2Bd6Bft2yphLj3LwL
b9xbZywKnUh8gz5gNcjn4bFOcETGAr8i1kM+JX4IPiz7wRdl35wve0C+wlfo
4isz5q3bUvvP+MxgJcjmzv6We5cEbdkvOYH0QS70bfX82F+cMXzLNxDgHIsi
J5a4LWvC54XPiOERvzi+y+Mf1+XcS/YGnUdHvh95f7w3K959osu4Ern5jIt9
sDVH8bPIU/ws1kUM5+KM7akVWtsV/T0+dHu4y2vYp8M4H3REx/Hup/H+J1En
Fo4c/SRyNpJW3yfsPuIb5Dmjp5hnYNw1/EDsvjrJseHxPQ7f5YDDUUdWkGsP
j+KbY+OwF+wS/LgxwQ/EDokhYldPyTj2c0dqLJ+7jX1MbGd2nDW+Nu8jE5GF
H4ecz7R6PHC1KvSJnrvU/o9q03MLRldmmxLM+KHI82Q9p5X6XoB/0/ZwtE8L
fibWTw7gFUFbYmXkn6Nf8f/JAYbH8N9Gx77QHYP6f0u/QUG3YYEXgamQT4qN
gd2yJHWu79Op/WO+T8BHPiQ1f2/q8Lde4GGnpcYNyO3BD/lcZ3CH6lUZY5Zg
l+ReYI9ybr9V+fvU/M894K7MqvN9+V3qc4WPeO+MeJc7x53c8k6D85lY02rs
1jrTDBpMrAtsUWu4HX9f5bGp+xxDDnXqPmNU7h/r59s1bHP6E7/dMfBbcNw9
U/t5myX/ni44rr9fxn7r2MArwFDZL/j5+53mBfQkfAP/LOpyjODE+AaNdbN+
cqcuTy2fNmAvpLadwa5uDv8WXJE89H0jpx28sTl8Xmw78DCwvLlFY6l9NP8t
oUPfLxij5ds5fuNv2tGx8MBtdT6Pvers84AxYjtcUme7kHnJp0fHIGNm1lnO
3JJaLhJHpW16tPOwRnAtsPBz6pyvcVacY2ngqujFU1P/zRmDabOus6LPSanf
PTG1HkBOIaO2yJIGy2L8NHTgRzn7OHzPAG+z1/l1vsfYqu+rnlM5F75inanz
ycgrq2j1XacdfxqcDryOXOAjNW6DaPb9VmPHyFbyxMm75e4N7HE+Gr40sQ7y
8tGHd2edY31cfGt5d+r13JU6bkD+xFZdMDXWTM7qssirJ++fONAY3a9zM+YN
eGSXyLkEt0H3kd+P/tsrZx0wUuWD6vcYPJk6R4Y6MaFZMSbfFuCDIUtezzhG
QKyeOAF5FNTJ76qqdx7mkohPkUOAbfNefDOCbAEDxh/AF+D3iuiD7uZ93iUX
j+9IyVk7QnP/BH5LHd+njtwiFxC58U2L10BOAPkAfFsFnZFv5FySe3lOp+8+
9Vxg7JwRODvxM+4U7ZtSj8VeyElojDF578qGb+/fldF/11bLe+Iw2JtfaG3b
1cR3DnW2ZbirzEGOBLxVF3EL9k474+AL7hA+Hbl4o7bm49U4DxP5z3ct5EOT
J0Y+JfbfoQX7S8QPyJm8PuM4ztE5930z+sNP8C04I3FgcqqxGcCn+Cb3gxif
PODXI2/37RjzVb4ji29/yBXAttu34HznSj0HlTo+ic2BvQHuhl4C09ga92UN
5J/sF3p5Suq7f2VqWTIwYkvXx9/XqXy5YJv1X+AxWWOI5DjwPR40PCIX3/qV
JluMyOmpdcEfVN6cWubfmjoWhS21sMt6k7WBa/GtIPq0TfdlaY/3+ITk531Z
x9r5zgC8DVoQlzkhtSw6LrWcw5dH1vFNAjkr23Yb3yT2y3rmt3o+8mWIK6Cj
ZqSWp8gaeIBvD+kPraBlVeh6Ygv4IMREiOGfFnF87Ie1kRc0Pu/+0zLWX+gu
9DjntjrODlmJzByVMc60Nubid/QeffbJGys8G94RHT7Qb8+0GTdFBuM/o9/X
NjgeTk4J2PVeBfsW2NVb4l6a61Sw+NTzMA55ih9Ve3x8sSNTf/N2VOpY+dro
Qw4x+qOgM/pP8B60vydrfJNvaA6I/A5sCc55aHxPRX7Nu5FjsybycNCdAyOf
jnZkEjYkfxNX496Dz3zdYv26dxq5eOFb8c0H336sSmxvcafIPeM7Br4hLEl8
x2hf3GWZuSxoNTP4EH4knjMn8ljgWe4/8mJhnX1ddEdp5ImDc+6R2j4YmRoX
3RS5W+S2cG/YP9+EI8e36/Y3IXyv8mbib1bmRvzourhHU1PbrXOinW8CsUV/
rPKwjHlgXGpd9lysjW9YsXf5hvXwjHXrmoJx4Odjnz9K/a3pyallHngEcg+6
8f0VayG3E5sSmb9NxmutQDdljYk+rjG/lzpvYKeMact3I+TF870esVFyFClX
R5z0H23mj+U9zt0mPg5PPqX2VWr/V49jCavj3feDZ/E7yDVgrhMSnz84HTyA
HJoWdgh5bo/Hmt/JOAbDtzXkJWHXIWpeLTrOt1LlbyPeStz19pA5yB76XhL9
/xVybLnKtzOON/D9Vkve8Wy+x0UPMz/2OXb6tPA9027rxYLKbfXu3nzTmBq7
ejz2AvbEt2/kJUGDN+J7GfbHN2bgj5wp3yfj83LmE+Pud2vuZ7SGPTK2U7FX
L+r0PCPjG2TyULgjxPXQu+hXdOvSKr+L/N89vnne+h30HjEXvhK4I/Qn1rxn
2IqnR5248wtV9m24Z6WtlmFgfsgeZBB5EdunHnNgxu+NjHHQjS+EftwmZ3uf
fG1kIbRlLPBd4kz8dm/qu3df6njL3rFH7g3r5448kJrXF6TGfZcG9guOyl7w
PWelzhmdrXJoajt4UPgszAUPssa9Yp07Z8x78Dv0mxCyenKXsQvy6boCjwV/
Qo4ui1wHYorEpeDV1rxt9/7x7RSyFUx7Y+RsEvs4X306sVvjO4ntAgdj7MND
p2Db0gf7Fv3/atgAxEHxTe/J2E/DX/uxbJsf550D902HacC9+iriJsQawY74
bp+z6sh7vFdizFdi/C34YLW/ISEOuUfMjx3IGpEh4GzoGcbHl8Queid4mL6s
eWz4qWviG2TWxNra2m1jvhft/H8H4EY3ieb/B+seajM=
           "]], 
          PolygonBox[CompressedData["
1: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
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.7884065369353239, 0.5807818500411681, 0.355601269022046], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFnHeYldW1xg8wDAMzzDDD1HNmTj8zgsJIRCwIREU0wQYmAQ1gwxIEbFcF
LEksFBuJJmpUYgxejURU7JiolGvH3mJDNBoFFASsiZr7/uZdPP7xPXt/++xv
17VXedfaJ3fMyeNndk8kEsvLE4keSpfkEokjlba2JxL/qEgkXq1LJL7Ub7/v
nUi8pGfPMqcvRv7gZCIxoU8i8XIxkbixUmlv172oLZE4SuU9M65P+XU9E4nn
S27zOaUXqM6RqnOh0t3Uzo+U/4XyH/Vx+7dqQDdXJxL3aRwDuiUS01Vnmn67
QnVSTYnE/SrvUJ2j1e7rqr+H8tdXJRJPqP2s0nqNZ4Xyb2j862L8jGFFb9ev
Vv0HS66zXOn55e5rstKP9J7rlUg8lEokqloSiXb1/7jWZJ3a/LnGdJV+W6k2
3ujt9n6kMQ3W2J5WnWE1icQu/bUGqtOo96S+vT2rudYnEotVZ3lvry/rvKVZ
66C6e+ipVr06lc/XdwcXEolOjWt3lc/T+wHqM6388b1ctmeU893u8S379I7G
P1bzmqz6+6r8WtX5RnP4g9Kl2tsH1P8wlX+jddhZ6RA9n2sc1e3Ob0n596FR
Z1yd61Gnt8b9A+UvUFtrWhOJkXr/qt1lO0d5rd53VX5bym3sGmObW+N38jso
36n8r1R/gMb0ntpZpnVYVfL+rVA6WrT1gcrbla5U3VX9vQcrY70naTyPai9W
q3yU6jyteT+j51fdXLYyyhdqPI8of6jGWw49qM4k1bmh2vtwnt4393OdHbV+
V7S7r8NU/yA9u+r3DdqL2covVf6SDtPTC8oP1zo/VeExMR5oYWXQIemqyHM+
VgS9za7z2JjL6EaNUc/aCj/sXXcdxhkNPnvs4y3qt4e+PUjnaF1e+6e1myB6
/H2Zv6H+A/r9eT3367msxfX31zg/VF/r9fTROm/t5XUu6Lttauc5tfNZ3mdi
XZznd7Xum1V/ndJ3opzzslbvH6v8du3p6jbvy13ar036/km1s0PBZ/191bmq
zOeSdhrU54sq/0T5nbRm5fp2g759RN8+rvVfpPzdqruxzu1nu3kc78TZf0v9
9oNuUz6vb8R6flTnuXGuDlWbQ9XHOKWvq36l6n+ucY2IOsz96Rr3QfuMZWOM
5+f6Zm99OwkaFm85QPkTVHaueMup+uZWjfEUjW+E+m3WvEbrvUp79xO1uVbn
+dK+GmPW6/ROrGGN9q5az6Wi4yv0frqe8aKNO0R7C/u43gw906F5re3b6ust
PSfrm7zSnJ4ZKq9S3dOUTtaYL+7r9kZCz0ov1/Og1uEsjecy5fNlHgv5+1U+
TOkReqaLNs7tcP5WreE2tT1G30yEr2mtxqv8YaUrVb5CzyCNYarW5kW19YKe
ecovgt9qrS7v635v0pj2KZlH/lhtjqn0mBjPRK3V4Wr7VdU5VrzutkrT5Tit
7SUa42mSEYPLPX/mvrvWTuSfWKh0m+p+p3a2Kr1X9eeq/AiVrxB/eEttJnUO
JiZN9zvrLLyott5U/QNU9pLqPKt8her303j/qPYv1Lq9UeU6PTS21zS/V/WM
0xz7NJmfwkt7aV4VejSlxPAGv5PPqq03tX436jxdrkFepme92rpO6bV6Nkfb
k3u6/Va1OaLGtM/c2N89NYZbRet/0XNGs2kdml9W4d9Zh1r1dX3QA/n9tT6f
qd0blH9TtHZTH/OoQzXv59Xuyd28B+wFvJHv+H5ud6eLIv9Im2Xud63u7/po
H3qELvdUPxMqnIc+V2p8G5Xv1Waed7HyQ4P2Lw76R3axnw8Ev4afHKmz84ny
X8Df9O2VZZb/6AZfqvxb5c/uMO2PjHPd3ObypNJ/iIbGaR+u0h7OUv0leo7S
eF5V+SEqPyGts9nmfd2l7fsxbdRvv9cajBW9HKj3pxuc/kbfHqB6O6r+KqXN
efOaRqV79TH//Kzc/HBJnJdqred5emq0bkdp32ezf+Jpg0Vbh8EvVbZBNHe3
6pdUtiLjs3mc6iwUvdwV9E9KnQH6Jl3rtZ4Nveqbnyj9TN+1Kb+P8h8p/2Uv
f0P91zXf8XofT9uirzP6ehzLNNZz1c6dSh/NeJwnFzz2v8b4b6vyO7z9SK31
H5U/XP1k9eynshr4d6XLk3pfU+E24aW/q/I6snb/yrjNlqRpYFGV9530+sij
f63Ub51aqyXVzsOj7qm0LOySy/r+GI3zYdFGN5V3Bg85Uc+DldZ7oCP4AzIL
+XhrpWVklehguebeV2kl/FvPHRrnb6qdT5VZP1xaaX57utZts+rvp/oXa48/
U/kemsdjMYaXxCda9Nsq1Ukq7dQ53Vnt/Lm7U3Ss5d2sQ5FHP4HXVdd5T5kT
c4MOWJu+dV7zJ9T+cWr/FbX/eOQna50P1Nj+Xunz+1az06nq95K+ng9z6a5x
D1b+E33zZLPXbI5o9e2ief8x2t/HVf+ndeYHbyNzlD9VYx6pPg5TfjfNe4rS
OeXmNweq/Bi9jy2ZZ5A/Tr9dKD58gZ4NGtOQkusfrm8n1fl7vm3PmD+XlO6u
uTyneb6qsRyqM/WBvvtAv21Seo6+7ejm39fovb6H6XRrrWn1/aLz/1R6kGh4
Tr3rrYg5Xqd1+EOZ9exfd/ecxse8eNA10TPRI8lf1M2/Hxb5cVGfPHs3JPax
mPQ5fEy0ny25vEFz/LrVNsl74iEnq/xc9TtF5Vc3Wn9v0vhv0Fq/rvWqVZ2L
Vf8c1X8obd5IOXxyUKvl3PMa/3y1c63an1eyHbCyr9vqk7au01vpoHLn0TE6
tR5X6/fzNa8eWrer9O1/1dbeGsf7qnOs2hyt/IfKP658vb5/S/nFGlc+7XJ+
30Fj2Fffna+yG3uavyH3T9P7UM6U6n9U7jZf0vpc02idn76X6/eb1e9qZK/q
D9H7TKXXlFx+dcm8Z62+3Vd1bmnyGEYpvzFp/eN18cDyjHXujdrPaaq/WvmB
qvNlznr1hRrjY/BP1X9c6Q3ajydVp7e+S5dM823YVY3WQ/htDvxQ9Z9T3fn6
Zl/lF2RtF8EnVis9qMb0Cq0u0+8r9V1B/a5QvVP0fqC+va7C+7JU5QvVx5+U
vxwbM9Zrk/qZnfLvc1W+X6P171Vq66K095d9fjtjfnd5u9eY+WJH7Fxj3Qi9
CBmE/EGWYXfQF/z5oSbzWXhsMmm+/KHam1zn8a/XfH4sHtVDbY3NmxbQMaGH
G+rM62lnS5PHiayHR94SfBKeTR34dkpjXcse5KwboSMtKli/vlb1J/SyPcT4
aBP5ubjSutGssGU6xHM+TfuMcFY2hz6PXr+1j3Xvfjpfmwq2kTYr/ZnG9kSN
9ep0lWkOepvQ5N/Qv7E/LlCb3ZT+U+3PUl/Hqf2h6u8I/f5myjb6ohrb6XVa
g629LZe/6Wt6hVYfqbOdhb2FLU/6cDfbVciwLtuql+eI3Xe8+pit/A+0vzuk
fA4Hl6zPHqY+zu/l756JNSFPW/D47vptXYVtaMqfijapuyby72QtG97LWpc5
vNK08CfNa4j2vB9yQPn9tXZzRJNjxT9fjzFXpczvWzWeo3Net2tU9lPRx7dq
4yaN/Yu0Zc2XSvtrXXZVO8+q3vngCX28Jo/mTHsF1a9R3bujzlKt1XzVm6dn
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
s6fwnP8Hr4sW5g==
           "]], 
          PolygonBox[CompressedData["
1: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
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.908826362274606, 0.642065905686515, 0.3173617230512785], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNnHmc1VX5xy/LDLPvw8zcO3eduXcyUVBLcytxKdQ0V6RUxDJbUHyVlYqm
+NNcShFMzRYRFcvUXBERmBlWMxE30CzRAgFlVXDBDfp93nweX/XHfZ0z53u+
Z3nOc57l8zzfyX/7vBMmDEwkEn1licQglZN7EonXKhKJGzsTiavTiUSr2ja1
JxKltkTi9Co9H5xI9KjcXX3u1QsHNCYSp+rva9W+vDmR2NCQSOymZ/fkE4kx
dYnEn1TO7Eok3h+SSAzTmCP0979qE4m9VL6dSyRuU32LyhWaaHmrx52XTSTO
0HoWJROJx/X89epEYqrmymmukzTXxZrrtC7XL9QaF+v5l/Te81rr8V1ez2Vq
P0fvz1LfeZlEolljN+n3kdYxVWucot+oMrfdpP4fqv2QSpdaTqJLa1itcbtV
PlPmdS5VeYL6Tqt1W52ePac+9Spr9FumekH027dJ+1aftSLsWO3z6+UaO5VI
rBQde9Vnp9azqtp92rWvbxQTie+pz3Hqc5j6b1H74SrP1UJ20zyPaB/HqM84
1Rerfpvaj1ef36tMq/yl6LJa+/xQ9J2ucVdr/Nu1jtxQ/a1yRK3HOXugafgt
nctN2ufajkTiftHhsS7PeYvaTxAd12rcm/T3GpUj1Ke6RnvQ/t4b4vaZGitd
0N7Vf0+Nv0d9InFUmc9lcNbnUabyHY29ucpn0yA676/yIe13hNoO0+9I9b+6
O5F4S+UizdWlcU7Rmi/Q31O1zhsa/Qya0w5PdKvPmKHu++cGr4d1TVWfd1WK
9InGVvPbu/F7L9qfrfaYMxIeb0yM+RXtY7TqL+v52LTXdrrKn+vvSeKJlVp3
k8aYqHK4zqlHv/NVX6hx6tR+gerPqr5T/L9Dv/Phk+iTVJmDf9VviH6Ha82H
avzPiQ6X5PzuWTq3S1q8BsbhTr2lNZ2pZyXR/kDVR+nds1UfoffX6Rw7tP99
9PxR7qz2e/kQ8xDneUS1979e9U2aa7j6zdbYk+tcZ+/QFDpf3m3+OV1rWdvp
+/em+OEK7ftE9XlNcz2q/jOH+oyP1xybhvjuT857bdervFZtG/S7Y5DlxN6a
+3r9PUblZfr7WLVfl/R5cubf6PJejlV5sJ5fpN/7evantOt/THtMxmO/8zT/
xDrva+dQ88dI1RtLnregtb+n+3OV6g1q+1TjjtJ4Rc05Xry4h2g3Xrz6efGt
jigxU3dxRKflwSz17deYffq9UuOyV7+/q76cs1B5pPY+Ru+mRPdvqnxCbRfo
91S151mt+nCNu2e97wN3tSdlXrlSe+nPuu1UzdWQ8zxf1dre4XwbLT+vFS+v
0B5fqPT5HxDtyIqtNZYn3yvzO7Sfpf7bRcOHaizz6A/PfJyzbPkw5zPbUOO7
2dvjd3dX+0Ltb02N1/14j/t0qb1bfLha71SL7sVOn/WDWvNiXaDyOt+dVM7v
dSAoJZcq9GynznSY2h7QvI8ONL/ANzc1mDeh30q1D1bfQfodo7/Pq/O8rLGk
tufrLGP3VDlGe6mtdVlX6/pErecC0aJD9P9L1mMcp7W16Cyb9ctqvse1pl6N
+b6e79Tzd2vMP/AHfNJasuxA9m/V8m/W+n7S7DWw9gdj/QPzrnfpDO8Xbeeq
/mWd5R81/imqz0A2au56vT9c5duaf7DGPVprW6R1XFpn+h4r+VlU+R2tZ4Lm
KKv13Wc/7Gu46m+q70it4Watb1Peuq5RMnwksqLZZ857g+JdysH66ah2yfJD
mi3Pzws6MeZo7fdE9Lh47486m7zGeDBp2tLny3r3/ZTvWItoMqXK/LdUvPdB
tE/QGp7u9h1Y2m05hbz6mda4TX2uVJ9avbsg571M0Pg9bbYVhug8G9Vvntqb
VB7Z6jV8WbQ9qmg5/h3R6tBG74e9HJLzvk7XOMfpWaP6HF+wnD4lZH5Kz+/V
b6DOYnfR/M0ayzH4i3sKj6Gb10X7Yz3uk0e+9bg9o3qT1tio39Hqu1RrrRNd
NmnM7qTvM/KjZah13B3l1nPUu3Wez6J7Vf8x8jnvv3vy1u21Mc5GjTNNYz+b
Nb9zhtzZr+v9gtYwTu03iubX6907yyynJ2u80dgKDb7z2Aav59znNZXXVXhO
9A7zr6vy34x/21DPkdG51GuMjrTXsaTKfz+ifiP1e6TMtJun9gEqPxBNe1U/
SnS7Nu96e8p3CvsB+XZEue8Ssrgqb5usVuVA8ccz6p9X/3fU/xita167dRXt
2Btv9Hiud7SejRW+oyM0TqXeWaUxv6/2tfrNVJ81ac9JH8Y6Rnu8r8o8c3Xe
9Qq9N67FZ8O5vKF3rlTfbZp3bZvvKuPO07yn6f2/oJva3H9qpWXrZPW5ReVM
ncFx6tuPXuqybjy60/bNzVWm1cgu1xdrnmdL1vHPqxyNLqqxjtuv2boM/VzU
fDeo7SOtc6vGmqh5fqa1bOu0LXGJ6neX2eacKzr0p72et5LWFcuqbDNgh/66
yrbo/Kx1zRDdwSWqX676X/VgA7agxvqoZJsHfpqtMZdpzC/ovYN1PgP1rFvr
K1eZ1Ji/V5+M6Lk07fqnSQS67rnGSWlti9Ke9x21n9hmu6VjQCLxnzKf0Qdl
1jFPVLltntYyTP0e1pj7qu1G8dMqfIQmt/9I784vuP0r4v0TRLeKSt/TnPrf
XWkb42XVZ2jf+5ZbX9AHewY7hD63DPJ4e8RcnCd8wJl+rsntzDk/ZznYF3e8
uc38iw33T/0GDPSd5+6jT/9QbTuHeZA3zW3/fc778Pwj3Aet6da8nzdFH2yN
xujTpz3+XfP0qmzSmHOCPsgedA2yaKvm3waPad6D9c47qt+csP7sCZn5Srnb
6cOZH9VgeY6emhn6FPvi0bDH0GlXhZ3EsyuCVo0pn9UP0x5va4y5A/tH/S/G
L6nz+UHPKT1e2x86fU836be/2odUu86dvUF9Nqv+G/VZWeZ+9OG+UufO0ndz
tKMH2Bd3DJuwFHX2SR1fsrXaa4Me0JYz4LyQhVOG2KfDlhwfd21qyXLsxM64
nxW27YfV2o7cPti6DD3G3RhWsE5Bt0zR+Oe02x+jPFe/H6nf1DbXec5vtd5f
rz5Ha842/R7RXr4t3n1ea3tP4w0T7YapT1XSeu3zWtffNO8hg92OfTkq7XVt
bLefOi78o/dbrJfRv9eU7Esfob6lFt8H7sILKcvQ6zTPmdW27bhz6+t876hj
l/Eudjh+22M19t0+UPn9MtN2jeTFRP29UDJjpdY5qcL21T967PPcqPH3SNtH
7sf2095eVHtB5cmiQ7XoXql5RuQ8bn+P9cy00DXYJ9TRVz11toUe1PpvytuP
OV3jHBfyeVTG/Anfvqe/L9Kz3SUbajssZ0a12z9iLOaoH2Ddtbnc+itf7T6s
h/LIqJ/U5jpjYH+tqvM+3xDxqzRWufp8vst72a3LPhZ7Z32ftlpWI2/RJdAP
uYkcX6f5loq242vts2F3oR/Q0+hofAzu3bsp2/zD672vcZrjVtHzS6L5XinL
s4NEj+VV9iHxH3e0eu6flbvcEeuo12+j+p1c7meftFr2flpwezFjX3pzrAHZ
wxqQY9hw2GzYbnOzltujtZYL23z2l+m9WZWuwwNXa8zZaru00z7EwzX2I7Ap
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
JxcD14/7ix3CfcC2+X8qQ+Mg
           "]], 
          PolygonBox[CompressedData["
1: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
N3T9lv5/kFDTBg==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.935479156348681, 0.7086978908717023, 0.3999853846809108], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNm3ecl9WVxl/AoQzTGBiYX+9DgpqgblYlrIDsLmLFrlGREqwUAVti1Fhi
owiisaGgiDUK1sRELLHAqmA0alQ0URERFRQ1QEDjPl+fk8/uH7/PvfO+9733
3HPPeU67Uxo35ZDJnZMkOXeHJOmi9pJCkqTrkuTudJK80j1JljQlyROdkuTl
UpLcrufZYpKs0diq+iP1Yb+c+0s1/uBUkgxoSJKTNMfi+iS5r6u+07vP+iTJ
Rv0+0vjzNM/Ebknyw4r+7pkkWzV+Y2e/Z1zPHknyjZ4/oDUG6PkGzfWQxnyi
drVoSfdKktP0bov6+/ROkps019f5JPmDvvlatJ2mv6fq97j2MkxrVFqSZKja
2/XuqEbRpfYB0XC8vr8fWkTzcM1/qeY/Tb+B6s/V83v03d36PSqmvKI93NiW
JAdqzsX67mj9Knp+lMbup7VOFZ179/O+qhozWnPuqnfTNN+sjiRZJjr3yybJ
BynP94FouFv8uV3j/6q5329Nks76u05/j9Ve1mu+21LmQa7OfHhIf/9Mcz6l
OXuJvnrNc5eeLVB/kr5bnxF9GrtBPLxC3z2scZM0/hG1S/Q7Wf2lao/QmC3q
b9Ccj7Jn9X9fMP83xBmd0d18hIc36d2+6pfEwxd01in1u6h/gdb9nvhwvtqF
4ut/a9439e1FGt+uMZ00ZplkYqPmuK5o3qSCP2v0/FqN/6f+uEPjx4mGO9Ue
quezOHf1l+vdyzrrF9Tup+dn63lRz0elvb8FRdML3fU9vPenG03/qHrLyQjt
Y4P4cqnmv7B/khzWnCS/Eq+vlFzel7WsLVG7TPNO15jH1V6eM8/v1TrHdDdv
OffVPS0PnyR+NjmeL9A3R+vbhWo/E03zRcMGtfdKXqZozNUa87H66/Xrr7/3
Vpto/G+1h701rqvG76s9jhMtH2r+ej3f2tPPt/S0jqzT83bpYHstSb4v+vup
3V9n/1c925bzGU4JPZov2m/V+LZO/pbnjZqzQ3ueGmPuFc+m9pUc6lldk/vo
+O3awxiN+XPwY5p+XbtY3vkWmd9dPFzb4nXgAfSgHx+1mE7W2kNjRvf12JlZ
48j+eev1nD6W60R76KFvv9Xe1/U0zfd0Md/h/xzt6z8kWx+JD4PV3q21zqo3
9izW34eJpi062+El68cnao/r63W3a8xO3f03/bNy3sfn4vcz7cIpLZ+TXh5T
NIZ9o7aisR9qzp9r/BV1pvNg8aQNOQ3MOSDt92nRPkFtpcFn8Kzmz2qeE3Um
r4mnl2r8Ov09S/tbJ/qv7WosBEPAw8t6ecy7mqOnnk/UPItE3ySNXavfbD2b
p/XHi6YlXa3HjPlYcy5qMa/g/wU6pyHIttr59ca0BeLTOq2zWvsv6duflvVT
O17tz0T/Cq05QTw/T+cxRv2+OWPDSQ3GnXPzPp+T05Zj5LlQtmyuDfkcKtpH
a72r1B9dZznpJvpX9bUcLNCzQSXvZU+1B9V5fvZ4ieThadG2t9bZpvEnNphX
J6W9LuujD8j/MK1/Qc77Xize7lMwP0aonaN5R2qvr0gGDm/0PLdq/i8bzbfR
OpdbNWej1p6u8c+L5oH6dkid9Rh9BouP0Ls2fXssGCWen9rHtmS85OMRtX+U
vDwlmlbr2/mi/XiNL2n8GLWPswc9Xyga9i5Yr/eDZ/odIjomlI1JYBO0NWnM
eO2xEczTr6rx49UOED+e17gDNFe55H5J7X7C0J1F675qE3Bf77M52w3O8ULt
cWjBevWfGv+WeDRH69yo8U+WvS/2N0Bz7NhifIaeZwInr6iZXyP17Qfab5v2
vlbtbppvi853djfPx/fozF1a82Y9G6J1n9Te7xQ912YtX+A/MgBOD4i1vqe5
DlN/kuiZCRbUWebBIuw2eHJGg2WXeU8sWF+v17m92GhcABPqNeZ5Pb9I6zb2
MF3YL2zZ7JiHM/lqB+vjyUX352me4xvsA7za2fzerOd/62Q5xS4jqy+JzkR7
/5PayzRmlt7N0Jw79va3zHG1dGqm9PmKVsva/nGmn4R/8s+KsWpGq/X9r6Lz
Hf2e0+/+gvvfZu0fgU3sM4Mvpb/TRc+5S4t14RmNvx8bozlXtbmPLT5PY14Q
r5bq7zV6PlQ+xyzkT+f+lr77L53JhAbLDH836Vx/L5pa1W7WnE/o3Ta12ZJl
YLDk9jV984JoOU+8Ol3v39W+lmlfB1dMzyi1nUv2qa7SOmuFMT9osVycVDPW
T5es/UNtIn7tgV3sbhzC1tMujD66OKjZuHFbm/2Kv3cyHvymyTr7ZoN1lPPC
Vje12F4jj4vD7/qf8A3wEVb29ZzYR2hg/d31K6jfVfQMbfL7H8eYrZrzY+29
rDFni+7Ben6W2qWiZ0nYbL5nniatO7BiGnZW+1Le8nupeFXWuiPqzOc5bfZ5
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
BrtDfZ06O/+jQL5235B/5Am5Iv79X3RqssI=
           "]], 
          PolygonBox[CompressedData["
1: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
ynOO0Rd7zIw791bOpNypG/Z6FX32Mb+f+eGRda3nGwHcKebauxL8T9ju8YRz
bb1pqzm/Wcj7Ot935nn03ZP2Xa3k/p1g7hVkDIX3MDrcm3JMVGxsyXxDZA1m
7BH21x8Z50HfijV2lLunUwHt0YR9UzWSaqU32H+8wDX3m8BJ5O8ocY8opf5D
2r2TX0LzNPBz8JSBD0fG88C7WeNx5vqgwyn4X46sm2r05cCz0eeFAvvM3XG/
yXqblZNWY8vuMb91ykmV2/6+2r6pO/AM8LrIZ6EYOBZZD4F3LbXOD8qXsq4V
ctirM3CZcn5ssZL5s7OOoYqlS7mvDZOuOVV7/hT8L8r/s449yumU2w2K/Nar
Jh4IPD/tvelN1duqmlS1qXoupZFzLuVeLdRzSDoHVC6oGDNdsbnOZ6c3Rm/N
yynnsspxlOsoxirWqkY9Dv2+nHN/5ZTKLc+uc21QwPwPaedUyq3UQ1AvYULk
3kYS+W+knLMpd1MMH898Yc69APU81Pu4MONcXzWzauef833PXlrC3xV4Fd+d
pa65VHv1zrq2V03eS/khZzwRX/kU+2zlfK5N25eVk14D/Bj6VJU6x5kJ/Hzk
WlxvsN7inTnHgn/nLMBtkbm/3DFrA3F7e7Xvqu7Ah8CHahx75HN5+M9ryBtR
6juouxirs+8r53iX/V/MfHGpY349vvUS+K3gh5i/Afq/5pwbK4faAvxRzrWb
atAp+EMy69pAb+oS7Pcu/P1L/cZsUzxM++1VzO8BvDbtWKcY3Q/9/jvj3oxy
LuVe99U6V5VNZJvva50L6M6cBG6Xce4retWij2ZcS1WBZxLuIaiXoDNKqVca
uRejntHTkXuy6s0q5jzMXqZGjt2ywaORY9C/Y1Fj9xY+Srn2VQ9BvYRW2K8D
+nwD/RXoP1/1InsZyxoLgC/ABk0auSewA91a5HyXLkfe2Yr3McPqKam3NDXh
t3et7iCy+yXdK1GN8Sz0C1KWrRitWK07q7srHVpD/1DcvqUYNhfaWNq52B7o
E2n3UNRLUc6k3Olk3G+rcvwDyo/Ad5U6BpQiL54273HwvaqX8bGd5e5RtK92
TajaMA88nfIbq7dWNK2z7jmp96QY2hL8rJR7yzPZT6Xib8qxRDm8cnn1sNTL
Uk2p2vJmeC4rc0/iJuCP0b9pI9u0I2ufrPLau9HvQ/R7NGHbqYegXsLumHvN
C7DxSzXuwagXo5rgAuCxWfee1FMdk3WNpFpJd3S8fI+xB5q6ZzEF+NmY74J6
uMsi5+DKxRVTh+gssd+JUveAt9ZaJ+mmN3m0+umRexHKcZTrNGf+R03dU5kW
c09dvXWNVQG30R6L/J/EjZz/HyO/HbrDqyL3LNS7UMxZEXNOp9xOd3Zp5J6r
eq+qqYZmfIY6S/Wk7gNflnQvQTmjckf17NS7U46jXEc+Ld9WjqFcQzWBagPV
+Kr1YznnrupJnQIfn3Ivqg37661aRDSF7qnmsV4X5eNlzgE7SFate9eVjN0C
vJzz/KjcPRL1SiJodpbYJ+Wb+k9F/62oR9I47ZpQtaFqPtV+45jfmO838yl0
Wan1i9xDHpdxj169euVEbeG/LO211QNSL6hj3Lm2eoKj1E+LuRer+lG9IfUY
1GtQDrES+ETSvqwa+0xizbjIb8kJeMZHztGVq6uHq17ufuwVP8v/oXxW5x6/
ev3ScWPKMUuxSzbLq/abqLdRPAdyfpP1NstGPwKeF7nXrJyukejT7v3/SjVR
2j0X9V7kk/LNXjU+m4Hg/yv9I/8XpJz1G+DpGeda6lm/m3BOp9xOOY1ym1jC
b6nu4Gnkx+vca9AblAD+PPJbqP90jgA3SzmXqkXn5sAlOdeSehMWRf7PRv/d
TOV+rck6R1KupDv/jP6byXpOPUL1CmVT2VY+dGHa/xHovwLVWKq1XqlxLaP/
TOqx3eNp20I+JF/SnrV31ZSqLZfWODboP7q6pP/z039/8qHfMX9r3LW9asLp
KffE1BtTz/Sk3pca/zehGKFYMT/lveoNmChfyrkXpjs8APhfkLo0JA==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9621319504227559, 0.7753298760568896, 0.4826090463105432], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFm3m41lW1x38MhzNPHDiH9z3nnc95DyDa4NQ1BkMRyZQ5U8sBlEEKFHAe
IEMtwAEnJC01L5Oggliait4UQQoTsRK11B7TurfBroCamfb98F08/fF79j77
3cPaa6/hu9bepzBlzoTZPZMkOa13kvRSObg6SebXJMnF+mN+U5IMq02S5yqT
5Da1tar8SUWSFBuTpKDv7+p/hH6fpm92VZK0FzVG9UeySbKvIUlGtibJXzT5
52vdvkp9tuWSpKw1nu5IkrVZj12jcp36ntvgtXq2JcnE/knyrmha1kfras3B
omeGaNiq3w/Vup/2c1/+Pq+QJAM0dnaUkzS2t9b9ZXeSvKW/Pyu69tWbbmg+
Q2te1GQ6HhA9SzTHh+1Jcl0+SUar3/Uqv1tyn1+kxBf99mvR8J7at2q+Lfom
auz7Ko9p9V4n6O/zRN+bovPLKn9RaR5S7og6/KD/Mu1rY7Xn6VD9a6J3aF2S
9NMaM6o85mbRWVT7SZprXy/vc1vs/f3OJDlRdN4ieg7VuC7xqKg+azNJcqzK
zaL5Fu3rJP32HfWdqjkW1njsVO39HH0ztc4ttd4Pe7le9WdUP0j1BZr3KM3/
e/HvZP19qcY+qLFzM6ZneDpJRlT6zO9V+33qf5r6r81bHmjvJ5oWq/xI429K
vN7Ztd7fmoznvFXzbNMeX6v0uVyotinIE/NmXf+Ryn9qjm/XmCcD1Tah1WfW
T+c5UfWWRrdNjPbvZ3wWV6b/89tQtbeqPkn1d8Tz9jrXjxedVW2WmboKr3Nh
rHVXxrpwreb5p2RgeEuSpMpJcnWD5fNPvSyb8zV3pqfnmxxztjW6zprXaZ5p
mmepysX6BmncRp3R413Sg77SLc09SvNViKanRNsg9b1N+/ya9j1DfS5Sn+kq
/0/y3a51LtAcnepf0neT+J5X+XOtVVa9t/TifZXbxMOFmm+yZHhUL8+9coDn
X6RzGq4+V6usVNsqfef1SJIGjWmssgzTtjLaof0HomeDxh6teeZqv6tV/0y9
aZun/eYkbxeo7baYu2+T+TJSfw/TmAX6/V+ibb14/bHKV8TD3Q0es67N7TX1
/o2/R4r/R2lf+7TuSvXp0PjzVY7WWVwjeiY32jZwbug8Z/cn8edm1cd3mP9f
7euzqNY+HlH7ZtFzsmipEG3TxccNmvvWetu0ITnr5WTNXyy5T0HlNI27UDx5
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
1aKccSR4EhrWF11fp/KPeY/9KG0ezo/YH/zCvNjnXWXntV8qO9avjlzieOnu
uGbbYc5kY5xLk9Z/KOzVQ2HLDtixTWGn5hdta+YVrasbI3biN8YcGzlP+Aau
Zp9VUcf/gwM+p/F7Gnx/sB+P9bdMvhV5adq5m4Gf90QeanXkK6AfvFEd+BPM
tS3us8A4M+Ouixjo0MDDh+qMRosvh3XZx+HfsIPIM74N7Dor7bzNGPF1ZdE8
XaXySvHufp33FSo7JRO9xNc5Be+VOdjvCQXfk10uW7SmxbmJEYl9Kr71izm3
rYmcxSVl/9672233RfuesusjO+w/8aPkJrAJ0IC+L1V5XYt1mVzLzLD5U/Ar
yLTKs7K21xtyPtPmBtMKzU1Rv6hs+/qheDq17Dk/p3XPLhtPks9DF7kTQc7P
L9jX4/Px5/AN/33A3+Prt6vtubiXmpO1nT1P5eQ65wy4O8D/7ot4ASwJzUMj
PwKmAc/Qh3nw0/iKx8NfsHd0D/qI7Yr1HoO8o2PI/JTIcWKvPoy7gd+WnJP5
JHKVYLrbRdPFYN8G6x30/1n+7EONfzVt3UBHwG/oJH2gbUTg9ifFn13dxihn
FW3DiY3BWuRY2A/9P5U8rVdbqt04jntHsBwYBZkg10H8saHZusCa6Cf3RNCH
vcFefRoxPrH+3KCNPuSnyE0diNkoh7Y7DwufvqwNrKrzvsCuy3Lm+ZS4OyY/
Qu6FM3sudAE6uBtC1snZrIncTlXadgI8/nxfyxL2oSprfHY3d8Ki4XC1/1w0
3JI2T2blrfOr6xwL4BfA78gtPoQ6PoKYGlqhk74ro39b1vH8gKxj7pXR5w85
96/TOoc1eF386REN/juJvBm+B3vdJ+v8ZqXKxzLORfw0Y7v53RrzekS9MTr4
fKvkYaf49qzKRzPu84jKl9qd115WsAyCz5ARZJz8GHJ+vGir1Lpjco7NsUPk
hcB2hwWdxxWNm0YVrcv/22x9JtdLzMxcxDEdcU9FHoh4D714vMb7ZI9gCWIy
9IjYn3wEuYi/Zdzvg4zj3YGha8Sj5N3QBfLW3JEQWyDTyDaxKWeyNs7okm7n
7F7O+Q6R+0MwOnyDZ9xbvVdwznRPwfmb8wKTgZfB4vvvoiJ2ZO+UXwiany0a
l2wtOvdNTE0cj50hfkA2Z3Y5j3Ouyu4Wyz96sETldc2+s9/X6TzC79KWk5si
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
5H8VHRcQH/wb4Mjaaw==
           "]], 
          PolygonBox[CompressedData["
1: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
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9887847444968308, 0.8419618612420771, 0.5652327079401755], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFm3mYlMW1xhsGZnEY0sMMM9Mz3T093TM9kpiIOwHFJbhF3I1LEkFRFCUq
akSQZZhhdQFjcrO5IfciiiJESRSJAmpkR0FQEG5c7r2SRQ0aRU1uYvL+5j0+
/tFP1VdfVX1Vp06d8563qltGXXfOtT0TicSSXolEidLOukTitKpE4nwVXtw/
kRih3z6VDzsgkbikMpG4rEciMT+bSIxT5U2pRGJk1Gnq7R9trtC7jxsTiUf0
fH17IlGvdhfqd0h5IjFQZZdGn6Sj9Eur7IGs+78g7f7ol7rHR5/dY1D+EuXP
KXHbS6J8T72f6Wezxt+h/M5kInGMvvdd9TlY6Q9Up07p+2q7uEbzq9C49Dy5
TyIxSHVSel6pb6/VvH+ueV2l9kNUnlP5bZWuR52nJaes0lGSQ1W9329W/tBa
zU+/jJ4Xai6T9J2HlH6ib7So7GI9P6Xx5ZX/mvIlGudA1V/RN5F4t87lV6v8
9HbXX5tyWSHKXyhLJFqVX93bZa1R3tTPz/TNuDIxtodiDA8qzWkufymVXDW3
l9XPcZpPl979hPEp/VTfmqq59NR4blTbHpLDw6p3VSGRuEFtb5Y8z1L5ZNW/
TvU3pFy3JOq/Ukwklqv/KU0eVyHG+bLqzZTcNjR7nS+NNW2rd5+3Kt+stidq
PfJK5+m7OySvN5Tvrzp3632t+t+sfgrSvxMymp++UaVvFSSnjqzn0k/tpuv9
zap/lH5PNiQSj6v8Y70fX+Ky32nuv1H72ar3pNKDNPY5qlOrsWZVNkP5MuX3
lVpWb+u7i/Q8W+U1Sj/VuDorvZ7o6aTYCzPU9m+q/7HyyzTmpfpNkMyaVL5U
3z2SOWqsO5T21NgPrrU+NVS43WfRdmy986drvGfr3UTVWaVvlWluK7QWX5NM
5mg9xqvv2UqrtUfbVe8S1rrCY2WcK1T/CPXxpGQ2QH2+pd9y9TU86feXRX3m
zZrO1Tp8E1mXu6x/lC9W+jB7RL9U0um5kmGX5rG73nuN9WTvsQ8z/fyt08v9
TB326Rilu/R7r8Tp68xTe6im3HnmO7zK8sXm/Fplv9FvkvpfXu9n8hv1/VmM
QfWHSh4X13s8lM2O8g9L/DxQNmGG3s+st5wpmxnl36h1+ddrPcY9MRfmOyPq
f03vpiv/1VrLqqvesuGZPHKkPfWRS0Zr/Zj6GKJfV533EvuCutOjLfuF8h5K
e7clEmdIpmMKtonzw4Z0VDiflHwOrPD6HtLTun9g5Lep3Ur1s1Xp0/XO890z
pWMDVGeL1n2z6g2ssA4vqXDb1T2dDoh8Z4Pb05a6h1RYDylbod95qnNrhfOf
lVgu2L8tPb78NnUOi7Z8k/TQ6Gd4ifslP1HzvFxt/twqmSS9vp1Jr/+u0AHs
4COqf6Hy/6N98EDYzDkVLv9rieW9OHTy+5LjrZXWUX6LY2zY/ocjT1lD5FmL
h2KPlFR7X7NnlpZ5308os01aFPpP+lDk2fMLlN9f7h9je6mHbUbzAW5P2YIY
880l1s8XJZNBmnuD5rpPcz9ee7O/2r8pu9SS11pqzmVttj9lMZa1GfuHJ1KW
N2WM//0q265xWq9vVtomnKl6U/R7DJuOnVP5BxV+fjbj9T8LX8aeKrOcsSO0
LddYmpU+Xea984hs9AnsA6UbNLbb9K3fqo9Btc6zB69VP1frN0bjvrndbcfK
plWozwNlw8uV7mizTfxto+3omjL7nQlF+9sT9N1OyeQayeR9yeR8tfuOfqtU
b5HSxAH20wfWey2X6Ls3qf5I1f8h7VQ+p6/r3Je3TLDry/UbqvmmUu6LPt8u
tT4yHvQQX8079tp7Gvd45Re0SB8kt+eUv1JyuK/UvnZsicue12+M8m1qe7Tq
/S78MHXwv4uzlnmFvn9y0u8HaL7/1BhPqrMNpOzFKF+msqX6zZJf3NjsdJXG
ME1y68I3SW4tktW5mveaRvvPBn13o9pX5L9st7rc9c/QXAYV7ddrJNsZktE4
jWO60hklLsfX36n+tpa5bJ7edajOXKXfLLq8P+vS22M+IdKTI/95X+eZ04Oa
5wR998eN3ofkscOvag6VGtNg9XNcg/O7Qp4V5ZbV5oLzH2iNtiq/SWO4sWjZ
IiPWbx6+WXWXp+wnasvtO/CN+Ax0eHvB+Y9T9qv4fnz8tuiTvsF57DXs0FtZ
61VWfc9sd5/Hapz3N9kHb5fsX1TZI6X2j4NKnAcz/LbF+v5VjfNU7cHN2g+n
aA2y8nfpfvatm2pdjn1+qsF+5g5960HJbGGdffVxaX+X749Uu82yQaNK7TMz
0c+RbZb1iXn3DbYDx4An3lP/N5V43PSzQ3Ue1xoMU9/PtBkb0x94mD3J3vyD
ymujbU3StqtF9TdonH/rZZ2YXmJ7iS1lPd9pC7ugPrZIbrerfHPWPrY5bMUr
jcZaP9Bc7tK7j1W2P2XcfnHEAuNywo4az3eajMXZy9ixe1K2d0Mztu2bQm7T
Vf9oja1TaVeVdZLxobsFPT+RsNypjy9YoX4Wq853ZUNKNJ579G6P9kVpb38X
3DgqaTvwfdWfKZ24Uc+zlN4j2d2rOvcq/XaLsevkJu9p9BVdxV/jq3k3VWs6
Rb9f1dsX31FpX7o/bVxxZ8b2H7+FX7i/1P10703VXVhpO/7/qr9M9b6VMc56
oNT+BZvOeL6u716nMc4vta1gf98f/Qws2h71Tbvd/Gh7p+T/ttp9lLKNfqfU
vuAV6d1BYDut8/VNbtPZ5hiBNSVOOKrW9gXbgk//rNZr2a78nIi9bpW8Jur5
NqUfZR1nfCZ57612/+jPdU0eZ4f6315uG4vtXZf3eNYrvSL6H610W9Hy3a50
YLnrnqP57lb/n6q/v2su+5QO09qtSRhj3FlpfPGuvnUjPrtoHzsi/Cz4mRiP
fU/cREyF/dlQYeyI3mJ73qvz+pK+r9/jks/xDX4mT/pu1JkVbVnj96rcV3c/
Gdv8N9Tu2XLjdNboGyV+xo7tkbx2aa7/XTCepw7v6Yt+sHFz223HO9N+vzr6
ebbBdo24YVLRMvmbZLJO+j1d67U+ZYwKHgXrT2sw/gSn9ZPN+F61Yw+wJ/XA
n3doX52oOdyWcyxAW7DQpAbX7au5z4z5MAawGTYWG7y/zZh7i2S/ssl2ADux
pM6YiRiRtTox1gu9QX/gAa7Ief9enrNPB/Ngb+5v9F69vtn+dXbUB7sg2yVK
XysY7+4s+DvEjeAycCn7iPh2r8bxJ43zGslkf7U5h49KHKdQTkywQH2kIp5s
qHf+vN7GIPRJHMq4GB94A1tFnnE+WmEMDWYGn/epN354qMzvKG+PesRig3u7
DmuBrcXmYhOIF/Ex+Bd8S3e+1PEXsRe+Bt1DF9E/5vEP9TlK8q9Xf8NUflaJ
fSt10FX8GX7ts/C3x0U57cmj/+xRbMG83sZM1Mcv4itYJ/zFaS0ewyjt03WS
yXrVv6GH7Sv5Nb2cbog8eg3Pgl1fn3T5urDxlCNDeJf50tUh6jctnXle3/1U
4/2/ZuvG7kZjfjgQcOFHReef1V6oS5pLeb6n7RR5OJy1atulPtdprS9SnSMk
31NLjEGG9zEOuavZ+R81m3tCjvv1rVk5x3lLGi1TOARw+sJmcxKHScd6qH5G
716THZqh+ivV30/0rQ9T3sPnt5t3oO3rDfZ3A0OGxJTElsQbpAdHHlt7ePBC
z6WNdX4tOezXfA9T+SqVXVhjHPwFbj0/fBZrNy989FfSxqKHFI1DsQNgStIj
a50ntgKv4weQ2aEhw8MjzxgmJ233sfmUHRZ1wBGn97HvgAOcVufnnL53ksbz
eZN5s2/Xmjt7qeC1f7ngOIEY4Rmlv0w5Hj5G+Q/lm5vg0Qr2o/hT9Bz/DP7A
R/fWXEboOzdpPAerTV+1HZixXcA+rM9Z/0uDC0I2F4R8flk0Jnqq1XbuoLB1
YGfsEfvlZylzMUerzxerbVfhhK5Uv8cqXZkyXzEs1rFc+rFA43mr2T5+ScTh
xO7E9swBXvDCWK8O9aNtk/hW3vM4r8ZzAb9i47eCc5qte+ggOHFTYMjGSusz
MdLxVS4DAzzY7L7+I2V7DC7Cp2BfTwob+2ijcdZCzf3gomVSKR2pShsngBd+
VjRPC1+LTsJZwG/C55AH712fM7YarXRk+FNsPbh0QPA5X9hN5H9Wu2OqHSlz
F5cHX5FP2k/DA6Ajl/f9kmM9P+L3xdjUevv6N6QTe9Tm90r/obp3qvzvwQHM
CR6A53n19g+k1EHWpya9H/GnvJtb79htWfiGW5Qfq/15dYPfYYOuqvDeJkYn
nidOh3P6JHinTyK2J886T6+znpwqXR1b7jibte+K8sZ+ls3YGNvY+BYyIxbm
XX3S/WDPeD8vxs+4eCYPlj+zxjHO1pTHfgC4tMpYE2xMv7TpUWVeD5/fq82c
AfzDxDLjA3ACGOrYjMvvTRl7grfBn0PKLH/wEth4cawFa87aEw+Doa4Jrhwu
qiO4qSfKzOVhb4m/rw0eYEDR73qlzQ1cG1wDda6JPHiB+OHDiOPGBk67JjAb
dYiJH6vz93geG7wQfcJf8I2rgn/gPd++OsrhkuAJ2c/toT/IDe4KfTgveMXl
UYd5P1JvnADOoBy7h218Ar4x6d/jwXGRUo7NJBZ4PPLIcnH0Q9mvoj54eVnw
wJMbzAnDA/NMHt8KDqY+MQNlj0X5ZUmPbVTUXRZt8a/UAac9WmMbC3fHWQV7
+oNWxzdgshuib2IW+sd3sgc4F2CcUxu+fE+eueCr2SPUQ25gSjAMuJI834KH
mBL1GRtzY0xgSPKME/vNuQv8JzbjxAbbb/ZPR51jT+wr+IB6+Bn8DfuuI/wO
efAObcFp03r7mXy33whbhE+gb+z8GM25b73xF2lV5LHRxCSb47yGd/BAjK0+
+sGObY845Iv5IOc+0Q9tkeOOwHJ8v3+0rYv82b19bkGducRoSb+jnB9t8ONw
b6+XO76hXV3gUjD4pJAh8u4MmcOzkmdNOG9BvsgWbmFRne3kJTX2cbT9Y4vr
4EvhHh6MOuyJhZGHjyDPXoE/5hvEf8y1T8gNm4Wt41vsIfYmtgkcjo6BmV9o
9xjOzHnfUgedYS8vi/qPBd9FHu5qaexx1rYhcDjnjZ2BN/B3xCErA/sNDr0F
PxIrdseJ8hmvwh8XfK6ID2IN4QA4a6QeujU49JC1PSR0gG+gY1OCsyDe3VGw
vZ7dYHvOjzEQB43M+OyzHQzZ4DrEn8ROlIPnqTsrxjw78vSBP+kIfcbGYGuw
P9iSx8POzIr+VgZ/PjB86LzQG3Tml3nj+tO0xx/MO85o19jn5sxvrU75mfKn
Mt4r7Bn2xV0581Y/ihS/gm38Sc5y/3FgklOjnPVivVnHe5p8HjZaOrUu6/Oy
9VlzynDLt6vt9rxjxB+3OoZrijjuqKLtEbwL3BPxErES3BrxJ3I7JWlfjh8f
kTR/Cu9xetLnI/g5eMGTow4x6/AoJz098uBh8C91OVOh7ZVK92Xs8zY1GQ+j
0+gEawFGxuZvTJozhEO5O2X7NErz+qDa/Q8KG5hNel+ckrINeBo8mXeesl6V
5hfgfeDcmDPzZd7kse3EEqzz2Kzj/WeDEwAnMDZweP+k29OWsVKODnNu0z/K
4fOoA/adnjTuhyfjLHR65OGUwJJgUM5bqMOcwTDgF3D4m83eJ2enjUG+mzQO
IRYirvmvZvsdbCHy4RyjPsYJhmxM2vegs3ALb4dfw1aCr8CYqagDLw+G7crZ
9nWEfhKDUYfYbUvOertTe21q0XEmPAq8NPgcLh08xRiYA7ESfhK7vbba47k5
+i6N/ok9iEEGF/y+KcaTqQx+gzPXJsfip7RZ104JfXsgbYx4l+zcfSnzYieq
n00a5yTNd2PO+x3bcWNwh+x77AaYdnytMd6T2j+j9PwbpWfkbH8X6cX1jY6n
e6r/h9T/UfCVwXlgj7FNoyMPrri2yTwh/OUN0fYi7bv7OetVnb3KLwIfKv9X
5e+TfO6pMQ9wd+TByVeBq/uZ09rcZLwPx9M77bOlm7P29fgy1pJ290bbhOr8
p+r/usW4Hpy/kLg1b6w8VP0dVbCucPZ1Q/CZ3BsAv94d/eCDiaNWxVku63Zu
6PaE2D/EakdFvMa5901J7/MpBcfRxNP0R7+cmcHrNIQ/xceyRuhCt68OX8y5
H3a7JvzhnIjviAOxzZ9rXx9T8H7/RcrncPR9jNZtZ9YY6c9px63EecxtVcq4
+JacbcbwsBvY9pnhC9hXcBbUe63aa43vw3Zjw5uzfs8e5FwPPoozTjgoeI6L
ovzdVush+gj/Dg+/TbrwTKPPao5oM56/OOK4y5uNmX7R+KUeMJ9zC9YT9OWd
Vo8HHXyq2fHz5px9EHWQGzpwd+gScSjxNfW4W9KStM+Cy+o+Qyl1WT7KTy5Y
P9HTqUm34UyQ88Fc1Bkd42S87Hfqs+fhPPArxHnYsM6wb5xPdYZNYK8RK7b3
sg9g72JrwKSTAqPii9BF9JA1Iw9/jr6itw1Zc9p/qDZn/sfIExvvbnV+Z6tx
FhwreI29xx5kH3NWwdka/nplnBlxdgTOHRJYhDOedJzpbAhOGTt9pcbySbU5
ctb/orDD6D7riy6BuZhDN1eZdAwwJLDT8LivhZ0nzkFG4A7wB/5sY8rz5v4O
e4i9BC9wXewp8uyrm8L/Epuhk5yZUnZdlMNXwFWwbpSNC3n+vMk8P3z/yozt
Bnd55kc96lyU8p48SHb9j62e7x+U/m+z160PfHCbucM3sJNhk//RYplx3rY6
5IFvRiaZKEeucKXwcnB78wMPwksMUJ8d6EjG8n4/ZM5asd6sF2dUcFI/lM7/
qdXc0u9SXvO9oQNwnOuD5yTe4zvE0fAAmeACsKt8gzOCbJQzZs6VqIcdOKzN
861qtF7ASYBv/9Jqv/pTfXdXo3X70WafAaajH2K+6n7GI/BtyByfDg8AB8Ad
BuJHeHDGCLcNxw1nzlgaox/uacHHcfa1p9H7fEfOesn3OONZ2mhOaqrG+16r
9e6ZFt/taop+4IvhjS/N+/wQHhZOibsejAM5Ds2br9rbYL5wXWAt9uS6wEXo
/PfCvmHDF4Rt7JZ50nusJewGa/lqylzT2bJ/hwfHBddFTLAjaR7k9oLj+TuU
Li24z8eU/jXl73NuBq7ZGOPhTA+MdWDwRJSzLnBO84KbmlLlMwXOFpD31LBj
z8UdAfzaKYFjL2Cc1Y4DsZ/jYh8xVng++DDwGX3Bi2DHOCdh7+KHLq3xGf0X
3+mIuRM7MC9icNJurkLlr6ScLoz7flOjPlh+UuCHl1LGjK9mzCvAUxAzoo/M
D9z+r74+gx6Y8Lg482dsE4vmf29Ruq7a8TZ4mLuK2C/wHmXcm8S3Tw0fja9G
1/kGex3ZjAj54D9HhG1Zk3LZhKz5j8tin4HtwHjEfduyjvX2ps2zcieEPm4o
uC191DXafr/e6r5HxrfgyMcHfmDfwHeD/8dpPvPV1/VF8zl8k329Met7epuy
vvfXErwh+oC/AdcRSxJH0g/3I5DbF/cl/hkyZB6jYi+AP1OBUZE9OIf1gIsZ
HWuEDxgd8tzd7Fh2eNpnp1cEJqyJtuwd+ATwNHuHdbgi2qKzc4M7BTN3BQ9J
GXgJXSV2fr6vZfpqnLu/pvRfGceqPdPm8+Dy4NyG5tz26Jx5Wrhd9BibwJkr
duOswLfgXOJV4tYrtSa1ad9F4a7KbXHflvOR71f7TJp7tXCI8HllkvncjM9K
OWMfGTrTvdZF70/OavAT+IspRZ+vLe3rc7UjKn1/ldgLm4XtOrLovcUeAz9w
PwJ7ja3mzJH5so7PtthvlGuB/9XiPj9vMcYF97JneUedrVnLgXMsZAFvC8+x
TXq4LeP64OUtcdcDPHNp0vXhYTbGWTDzBDfh04iLOZfmLJB4Et501hfcacr3
dbm3i53D3vGMHcQerkv7HIp7csRe+GmwFXEZ+gZPxH7Hf7B3ifGvbvL9p2Oz
jrd2Rp8/yDqm4bz9k+BJuOsxPnjkbg65l3WZPL5nR7QlTz/c9yDOwOfiF4cU
rWPoGjzcmLAVR4deTcv5Pib3MjmTge8dExwv8SVxJrhkUs6YeKLSXNbnmdyt
uyznM9dLc+aVxwZXTF32B36I+PLciA375a3/1XnjWfYR5XBTw4K3ZF+fFHef
uKsI1wE242ydO4VwEpwLch7x+7Q5Eu52cA7FvVowMTgGu4Ydei5lX0ecxZhu
a7E8N0rOXy+6nDgMPME5AmvAHSXiVWLVW7KOmyZmvYcGxd0SzmrRe3R+bMH5
G7PWK8ZAvM85BncE0ffxWbe9KWu7xxiwsex59sLDWXM/YD70iPsdcBzEuNgk
eDZs89LAHaw1d0yIi+bH/RT2K7b99hbrDXfu3iw6tjwzay6ZPDHmiDh/QJe6
0r4Lwf2IQ4vWT/SU7+AP8bnEo5Rjx4blbZMPbzMnyL6YXLQ+Toj66FRXxAv1
WeNi+B4wHbLDll4edxXG5HxPAp2bp/QV+E3lD1Ofa9M+/+IcjDt2+PUjVP5O
izlKzrrXpO0vuMsP7sQPb9e3SrOO/4gXz2u17ftOq/Xlp/0sv+ltzne1Wfev
inMQbAj3xrAj3LHjvP9uzbsibVvGfUxsCdgWzufsrNfuxTafMZ5Wa+xOvD4q
YvYX0sY83B3GrmGvaNsZd7FmKn0pZ9zzcs62fmHYQOwY/2HAli0OW4sMhxaM
1Va2+k4E5fCS8MzELcQs3NmEx2CsvH846vB/A/JXF4xR8I2c8YIxl8d9PGI1
fC7rR0xPzAiGJ04Fb4G1cnG39oJ2c84dcUZZFTwRNgsOifNguAXOIXcnLR/u
GbG+h8Rdj47gQsGPxO3nRUyKPhCXntFujM2dVjBj38Dzn6DbX5FtyJu/nxYc
/s7QSezkluBeLsv6HACsCHdBzEF8QtzB3UT2/3y4n+BjV2WsG9gh9Am78H7E
a5zbYQ95nhh28ti8+Vls188bbR+xk2vzxpVTA2dy5w4fzbe5e7A3YuHtof/s
A7jzjuDPsSfYEvK06Yoxw7diT7Bt2Lh9YXv7BzbbXzCe2RpY55m09Wl8wWvG
2nE/mntmYIp1GesdeouOwtNhU4kRJxQcb3DHfFLWXHBHwXdkjou7NGBbcBD4
lrid+1HgDe4qHh989bmtLj+n1XESMRsxDv8tgVcdLD18tOA1WlLw2jJ/9HFS
wb5sstJpBesDegGHBFbG1z7X6jufa1odB8NL7Qt8jW8HKz7daltBzEqcwbkp
707KG5efnDdPgw9DD+HfkAv7Eo4e3UBHFmV9Fs59Q+wF32WexAG3xr0p7sXg
v8G7j8Q5JjiVuwlz4rweXhydBm8RdzIfsAN3DuD5t0ofnm+1bXpB6V+qzecT
AyED7tkvijNq4hl0DO4MDq0mb/u8O+I1MH33XYK87xCBRcB2vN8TdcCh3BFH
x7Fne2LP8tsdsRh3pvHv8FgrMrYn/J+pv/p9Ue1r8/5vzeq4t8e5J+WMCZtE
zIt9mxNxEbqxK3AIdhjdRYeJM3ZHvMl32fdPx97f0Gj+aFerYwt4WOz1ilbz
9ocXfK/k0eAe0Una0kd7u3njYrv5HzAhdo97C9wxhdNZHHf14fzq4391+GIw
OPwc/B6cNdz1grTvZeK/x4H12h1Tc38HG88ZBGcSb8b6vdXqsd4XXN+/AdBI
oDk=
           "]], 
          PolygonBox[CompressedData["
1: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
7f8HU23yuA==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.95, 0.75], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmWtwldUVhj9OTLgbMBzCOflyEnOSgz9qHcAbFAQFxFE7LWCYSQARCUE6
AkEutogUtGVqHetdFKytrUVn2unoTEcuAdQiAgqBAGpxhtEpXgodLSLYqf7p
+/guRn+cfPvss76911r7Xe9aa+fCWxdNWZhJkuQG/SnTc0s+Sa4sT5KRxSR5
TXOXa3J2jyR5QXPL9Hlf37fF/I80/8qgJNmhz7B+SbJd8yM0P0vzrdVJMlFz
8/V9ksbX6vPoBZIrswzvLssmyVd69w/a96DencO7eq7o73VZs0vf2zR/QPK9
0yTZUJEkt9doPc1dp0+35jdWJslcjY9rPGZwkizUu89qzf0Zy/yzh9eZFOMv
pMdpfdZX2FbkV5X5uSjefVy6DdfcDyX/D8lu0/y/9f1O+eVevXNUftqjNW/R
XLOeb8YYPf/VqOeAJHlbsofy9tvBvG39X9i7usxjdLxJ8tP1fWfO+t+tvRfo
t5W9k+QufZ4Km7H97qYkWaffn8j6OzJrzk+SG3vYBt5DlxUF+bBnkvRLfT74
80vJPF9pW/DZ8qzPINcrSV6V3C+l5wrpfL+el+mzVOu1lPnMhmesF/rhn5s1
94ty297Qx3vxfYnmt2r8asbPznNj6X9Wfvykyb4HF1uwXc/J+lyk8QvS6dmB
1vH2wBnzE4SDU/q+OeMzQgfs/H7J+/ZNjRXsXCu5mt7ee3hiX4zX3Aey/WSZ
cfNS4rObFOd1dZkxBvYOZIwlxouE2aFa93p9/3GV18eHrHF9rDNIe8/Vb6NK
XuPqWPMe6XBN7LuXM9GnpDVbqvyd8YmQfzGxjcyfirnxsU5XT+8Hzlf19zrI
cj7T41zevtAYWCwdvh5knHGWtw1NkpmS/UvescgYHw4UNmfEePsQ7af9X6zV
eciWwdJ7T8GYXZJ1vJ8QPv+rczmpZ6N8cofmF+v3vdLtsJ47tc5oPasqbMvf
9f5svfeG8Nyp8VGN12jtz/T+V1rnP422Y2/Ygi4TQp9OyeWlw1t679p+1nuo
5nfr+xVaZ5PWrM1aB84XHZdmbcMI6VCm8TiNuyS3Qnb+Wng+pvcymt+hdW6Q
/hXZb/mmPGud26XL3EFeh9/LQ6ZtkPdgnrUzsT7j89CjzLG+POKIeGKM/5Et
CxnOZFnMjxT+d/exv1ojvuDDc+/DD28WjJ/OnOUuCN+CGcZvZRybLQPtf3ii
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
uOVs4La24Lf/AyxPxN4=
           "]], 
          PolygonBox[CompressedData["
1:eJwlln1M1WUUx4/IjbdUuEjrd7n3Avci1MqZ6KaigPlH/zRXYrSluN58KSsV
B6nUUHS6XmYJWagQ5bLmVmtrK1S0smGC8mIC6mhrtVXay2a6xLbsjz7fnT+e
7Zzfc873nOd8z3OeX9FT66vXpZjZHlYqa0O+WWvYrIW1dZrZM0mzwyGzKegh
9LbALJppFskw646anUJPoP+TY/Z7sVlXxGxmyDG2Yd9aaFaKXsF6C3l3qdnl
PLfZjv92bOZMNNuL/Q7kZr6NTXQb2f4EZm22WR32PyK38O0qe09i8z62XcQv
Iv4d5HMUPcwaSjObgb41bra/xOxMrtlH2FyImd2LXo1+c4LZY/j+Bea/5P46
+HM5a+o0P6swhb2ygPxvN7uLtQq5HPxO/Jsng1dkVoX+M1jD5LST3LrB6wNv
AXiV4JUTb1Wu56Tc6rBpwvYgtb5BrfZQkzi2ZawW5E3st7HffptZRtQxhX0E
/4Xoi2Juu5HzD5DfLPBXgF8CicP4303+88KewzFyOQafN9D/Zv3K3sGoc6Ea
qpYPYlOD7Zop1CqBX9xrKU56ke8Dfxn4y1mT8H2bmJFMr9lVfK+AOQ72AfJ9
jlgN+CzC9xAYLyIfweZUjnMgLs6R4wPUspR8h5DH7vRarJ9qliSfl6lZDL4f
B+Ml5NmsWSHHOApWCjFmo6/GvgD7mSWem2owhfy2xN33a+rViDyX/adznYOp
7F8BYyf+54jxG/Jo0uUgnXMEnoNymYtNjFhZUcdSj88A6x7WklzvoTT29uJz
krMcx+ZD+mNT3LnqYoXYryHGMnJfTk6PIF8s9F76hZ65gHwi5r16Hv04cn/c
75ZqeBY5D4zVxFrJmkfs3KjLOpPONhB37AJ8BuPOsbgWJ93k/zznqYfrBs4z
TL99FXVbcTiOf33Sc3+CGjQgt5LjQfI9TD+M0A+7+TbI/jb230AeCVzuxf8/
8n0I/NQ856gn6pyIm/vh9Eu4fRg9jf1K9k+z/03gscqzzDaT7z703hTnvAL8
k+grsv3Ob0S/xBpGjsDPReQ1ST+LZpJm0yHy/Zx8a6npx5zvGvqtHJ9RmlXz
sdkd8m/X2VtCPhm6q9Tsgu4P+zngr8D/EPzVw0nZJPqCVaO7g82f2A5hM4Lt
o/jH83xGXWevPOm9ohiK9UGB5yJMYY/Ax1jYMTrBa4s4lmqsWl8D4xJ73/Jt
IOl3SHdJM0CzIJ2aLc31nlPvtVCz6iyvyU18x8HbEfKZotmyFv/9+NdiX4Z9
RcxrpxrvD7zH1Gsd8Hsm4RyKS80MzQ6dWWefztpALfoSbtvO6k34jNGsaWJ/
BPl8xLlWj6nX1PPqfeU8nfi7sFk4ye/8K9RmAfHOsN8Dxjvksy/isTRjNWv7
sG9En4leh95BzLXEflY5IH+B/+IJ/u1d9B+i/jaIE3HTG/XZK47FtXpMvaae
Um+NJry3NbM1uydHvVaacZp1r8FBY7bn+CryCWrSE/Y37DNyPVvob4dy7C/0
N0Vvi3yGwP+u0GujnlRvdsV8litn5f5Hsb+Vu8DbAn5lzGdlP/VoD/wN0luk
GTcn6TNCs0IzYD75VXGezHTnWFwfSPjs1pukt2lNxHtJM12zXTNNs009o97p
CDyW7nQVsetK/C0T5gbkTyJ+F8SZuDsd+Ft7izu9uNR7QL2gmrQRv7rYudSM
W6p5Gvjd0p3X3dc/hP4l1OPr851Tcas71kmsFwJ/C/RGXcb2PWy+D/ud0d1p
Yr0Z9jfy04j3gHpB39Zh2zzN/x00g+vyvaaqre7EZs22iM8eYY5iOxj426mZ
pdmlM+lsehNOUr//AWaKWBo=
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwl0stLlHEUxvFj5MKgy1LLNE1zW5mmEVhtW0hW/gEijZg62oXc5BUijaCg
grys0pURbhpvlIaLWozjJVxKbbKdKdTez9Diy/Oe83t+zznzvlPSlGzoyImI
EXw4HvGsOOLFqYiXmFFfOxmRLojIFEWs0PqKiOXCiKrTERcwW8aHt2ciNnkz
PMP6QzjGd1nvjV5eeUQD303cwG3cwrKzdDYbi/x/5Xym/+hrZzs8f1Aj7yKq
szPtdeBERLFdPuVHTJuxrtem3qBruMOXQAtyzT6IlLxZ2Xuy5+g3M79iRn/A
+SD60SX7qv4r/Unv4xDvAzkP8UWv29kSvae+j5/2+4Fmz1u8jfbYc77A169+
rh6gKXv1ye+U30uT9ArPbvYduJvmS/Bcz77PUt8El9zbLLGTnTtRq07SGlrn
bquM8+oj6rP0MD1Hj9JKuuE7fsc61jAhe8qMhFnv/LZKcydoi/q9/hOep+oh
rHrOoN1+2/adM+sXnae/6V36yL08s9o8P9Zrpynf4yPG7T+GUXTo95T//4/t
A9HHaG4=
           "]], 
          LineBox[CompressedData["
1:eJwl0jlPVGEUxvFDIZJgg0siCIoCGoNIKyCMCTWJSCxoCVICkyDIklhRqqDF
YCAIH8GSGQpiZO+YGQifgKUCAxSEgt/E4p/nPc89273vfdwz8K6/KCJS+F0R
8f0RqiN+IC1erIyYfhaxQP88jFgrj+gQr4jHaiIOaiMOkXfO4dzzaXkXdE+8
i3a5rVURP3kldREztJX/GhMYxypvVN0Ybsl/+TSilDbSv54dmXGMUbmfMIJ9
+50jaZ+zwvk+DzXiqgcRS7wmec1owan6E6T0S+v9T+8M3TZzCxn+RzqMS36b
nWd5q+I5mhCX8b/o9RVZ3hXvuXda0jeNNn4C6/I67ZGXs6M+R9+K1/gZe+XU
/LJjls7TLjlncrJqU4V70Cv7RB4SaibVvqHFGJSTLHwDNTfEDd6jhNbTm/QF
7dZryx1uYxMbSLrbeb2HnN+bOUhnxL38D+jDLi+PFj3u6dVE79BX9C5tprfp
Z7On7PCtcHfiZd8hg037bmAdKTOW6/7/V9dkv2fP
           "]]}, "4.5`"], 
        Annotation[#, 4.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwl0klszHEYxvF3kLQSTkjUXsvMkURbFxxoO0KM5dJwEb2hIdpELK2qttoD
epAIB8uFBDettoeRtNOktSR0SBAXhIioXowmDrbPxOGb5//u7++dKa8/svtw
IiKG0JSMGF8RkUehLKJnScR3+pz9DNNTEdNwdEHEnpURjXQvHZTTJPeQnIM4
gMQi/sURA0iJ31oecRuZZRE7kdNnBx2hOfFjarJqrrAf0oJdNtHj9CROYIbY
QHnEA/SjDyEnb8Y4evW5SHswxX+Bni/uMD8ibXYtalC1KqISWfvfWRpxF/fw
hv3Ze67rk7ZPLUbYOaTlD9FhVPPX4Jq8CfZbdZ/Uz6If6Wy6Vn4Fqs1L2juF
zb5bvfmD7zN0PTZiA+7rNWrXMfxUX3DPH+i3+xQdpKVuMBMlmFgY0VC8OS6p
7dCjE21ox1mU8ffq14dh92ix82m04pS6R+Jj9s2JdfF14ynfDbHLZlSgEu38
HXgs1iz2hJ5jd2KdeBWyfotvbjGJNv5M8Y006S2jalJ0nz3qzLrJ7qJ/1PzF
b/xCxpu2uNl2+kL9fveqxzaxZr6ttKUYM+8l8ujWZ42+q/FFfBf7nTe9R6mZ
V80qoXP1mYc5+CrnNf8rJMxpTP7/7/8DF+CASg==
           "]], 
          LineBox[CompressedData["
1:eJwl0ktvzGEYxuHHIa1aIQ5FdWZKCR+CiI2FOJSyNlWsiETSUHyATts4LCTY
SLQlDlsxMsOiU5lqoxVJ2xkdLNqVkEiqRVKuicUv9/uc7v/7vDOp9PmWc0si
IofRzRFtjRFp3EhEXEffloibmyKKcmt3RCSbIk7QFK1tjqhBJRVxdXvENZS3
RnzEwsaIW2bmaUk8hSvqnfhVzan9phX5aVQaIoZ8743cEbUC37vu0877Hs27
Rw6H1TPJiG50oRc9eCWfMJfEXl6f6Gc0mlmoj+jw3WleWbzELvFOLNdbq68G
eR6XeXXiEvbYcTdmzSf1LrpHgjYhhdfe5bk7j+gdxYR4ZlvEAJ9WOx3DMzzF
F7nH9AlacBT9cj/0l819MF/wruuc59TW0ym1EiZQFE/SC/racRqncBZnkOW1
aNe/WGqnh/Z5hDpxxf0vOpfoTxy3U2t1N/vUy2/AHfNpPm04iSH1AvbLv+CR
RS/fir17qu9LD5l7p170BoNyGffuxnu5B2oD6EM//qjv4zGmtpLvOB20b53z
sPm83ySHFeIx/eOYNbNKvAarcVvuIJZ5i7KZEg7omTHXYJd5/t/wHW/FXfLD
NEO/0vt00jdHnOea///f/wGD0oab
           "]]}, "4.25`"], 
        Annotation[#, 4.25, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwl08lvzHEYx/GnOFHc6HQ13XDTE7FGE+lMy6X+ASmtpcKJpLqgtnR6IUE7
td4kVKJmJAQVouJAD5ZQiSuJCIkExYHXxOGdz+/Zn+ebmWTb3tY9RRExgXxZ
xJGqiKKaiBl4WhExry7iV2nEh0URv+lHulUsl4z4K/8GvYkxPJM/lojI0EFc
rIy4gC3qBtjX6Um6g/by76Sn2P36pfXtZDfRXTRFbyGPRH3EH7NKaBlKMYv9
TWwmTdjxpT6XzE7rlcIIsnjHd46ex0ZswmW+Dea3+G7GqJu/6rNN33a0oaHc
nfRRScS03Kz+vfZ67buPjrCn1A3TnsJd/N10iN1QHbEMk4sjuvjaayM6sNm+
rYW7zJ+Sl6cP9bjj7W6j3rw61OIt/3O7vaFd+hyw34A7r+k7ilfq02IpNKFb
PCOe1qeR3WJOMz7jhdw5es1GRmxc7jpaY/58e1fTtew1OIaj6OTbr243PcE+
jqtumXDHEzzGffaw/lkM4Syq5KX5i+0yF0vsuhQ57/gF9wp1uIsHGEeT/HJ1
FajEGX1O44fYe7HvdBo/caXw25ETbumw2z47fnLzcqzASrFB8xaIFbttIV3F
l3PzIXoY/ZhQt12sz/dBNBbeS//1dDW7J/n///APGnZ73w==
           "]], 
          LineBox[CompressedData["
1:eJwl00tsjGEUxvHTiMTate0M7bSlTZQ9odEdS1ULJW6bVsVMTd1WJdVE7NBW
Ii6VtqItaWslghULC1opi0ETdlYljLQ21O+LxT/P+573Oe8557tkjuaasiUR
MY2BtRGXyq3XRVyoiTiPLnxPR6yojVigy+k8XcW7Ej8zEUV8wxy2pyJSdBtN
0wV6jw6VReyUOyF3HOmqiF+0nBZpij5WN4cOLIo9qogYlnfEftJ6AuP47c7x
DfZokrcHzSiURmyh7ZURveY4RvvocVqojsjrt8H+mvtS1mmE+0Zov3hB/APG
7EfxXO0S+2f0hPw69WqxRG89ZnkhNyv+ks6vNytm9HbFvDfFbmGp/CqeDG7b
v3N+1XmHdQ6desvjh9gy3rtiA7iD97x5elD9muTZJHnIIo+TOOSsW6+H6ZzZ
O/kHk9n10o4zYmdxDg/UeYjNPJtQj728G/nqsYOnEV89x2pzvvHup/AabzGN
5sQv7757RjCGUZyWdyqpjzZ3teIGbytvG3br74t+PyODKlSiMamLlPl28Rzg
nTJ3Py31zMrwx3xdznrF+nBRHz3oRos7nsq/LmefsxbsT74ROZ+S79G7+kgb
6Cydcd+ifsv4/9I6ubUo8j9RY4gOY0g/g7hshkH7SbqGrk56Ed+afFfWryr+
/zf/AC5FhUA=
           "]]}, "4"], Annotation[#, 4, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwl01tMz2Ecx/HH3Jg20QX176ywkSSHUVHKbDrN3DrMuQvKhaluCKVukDvm
PBcOl6yymdC0OXRwusONSU0nbCYM8/rPxXuf3/f5fp7P93me/f/pO/ZvrJkU
QviGskgIaakhnEsL4Twu4gJ2zw5hF3aidE4I6/GI9x5vJ+6jLjmEL7zj+Iwx
pPKn4BIyE0LInhdCsu8i/rXpIZRgBKPqMYzgb0YIf1AuL2LPEf2jaEBHYgjH
6G+ze/Qn8x1St1s/TBepc7AQ2Thh1knEy6lz5nocSbLuHA30bkoIe+ytVX9V
V/k+yFOLPHkr0Ru9p7v00U66lRbSLbSIZslvj+eVlYcqOQU0H1nylslYjlws
xRK08c+3bwFiZcRlhrBO3vToHP1tc+2V0+YO7fjo/E3yBugAz0d8wIQ9Mc7a
7S3W8BVhqr1j0Xdypx7vedZaL21Uj1u/Kv+6+gZWyCzRL0aMfdesvcYrDJrV
oj9E7+h3RN/WmbbzvZSRZH6p+Qk0EREMOEujXhPysQoFWGzuGlqM1ShCIT7x
D+O47z7nq5a3wVvU0C55z+l7dT99bu4L9KPZOYqdrU7uQ3pG3Wr/WTqkP4gR
uaOYiXjMwml3uWLWsH2Xo/PpG283hbaou2gzHecdwyL+Sv0J7/ED3/ELP3FA
7xRtRRnKkWPtLX+sjOmYhjjMwE29er3N3nETHvB3u1eFOZXY67ewD9W4xXcb
mcjAO3es4I3wJSKXZwm6/Y6S3fWJN3qKx+jBs8z//+V/jlKbdA==
           "]], 
          LineBox[CompressedData["
1:eJwl1EdI1nEcx/FfWp2ah9K2Pi7oVHaTIEHCoKVJmrgapzZS0EWKLmGUmlY0
aJnZOEQ2jNKyQVHXhtIkMG1AhZqXnrR6PXR4P5/fd39/P3j+yWu3rtgyIoQQ
72fNrBCO4gh2TwnhGD2OtViHZXyrZoSwnNYkh1CL/Xg2LYQ6mkzjZoYQoSPY
KTGbNsgflR7CaMRhJOLRg140TNcrI4R62qH+jLoq9gC70bkzLYQubNBrPTqn
hvAoiY8+pjk0wX4NYq/VHaTlkRDKcMj5MDZiMzYhV8+V5hSi0owkd4omhvDK
jG3i25Gpb1aqHL3nOffw1dh1sfwvKSF8RZxYuh6DYhdwEbfscRttKBIrkleI
dnbU3EtydugxJzafXUlb2IftfZX+4kuTk0NTaQbS0Rd7X7nd3rJFvytIk19s
p4X2r6aL2J/4P6PXeY+eubRZrII20XJ6jn5w32LvswpFmCh3An6Iz4zNcZ5B
s+1RbnYFSlCGUrxVn6VuvHuNw1jM9x4PvdVL2u3tXtB3Zr3HW+zXe4me9Xo+
oCfYB8w5SQe9/U9UuV+C/ScjE3NRz3dW/51yn6jtkzeJf8C9E9l77fOUVtMB
sX5kqykQX0Dv27NQfandSjCMPrGP+vXTWrWtauroXbkduIfFdrxD29GGffZ8
4x418r6r+4ZGObtovn3ycNmcDvcecv9hRNHN/k0bzT2LVDkpiCBP7DTfGZxC
vjl5GPS+XYjYcYy8IXOGxH+jQM1svibncziPZnzk/2NOcJe/9B77hrxW3Iz9
p+3Z7D2uOV9HBVZjCV9UbCl9Hvn/HfgHetGrdQ==
           "]]}, "3.75`"], 
        Annotation[#, 3.75, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwl1Ftoz2Ecx/FHDtvMhnLYyY5/pDCnnJXlkEyR04Uch5wWF678JzfKnMUN
LpiZEOYwGWkxVkjJhTsxM+YwG9uwUlZe/1y893me7/N9Pt/v9/n9W07RjsXb
u4UQ8vypj4SwLi+EwuEhrKWTs0KYlB3CirQQpjubht1iXbkhlOSEcCs9hF30
Jo3SxMwQJjgfj3FYIz5SvLf7n+3TaBNNpZ/oD/qGfz3e4rv9Xh6t9PGQEObh
W0oIveQuzQjh+LAQltAT9Bmeok+qGvotEY8iVW9tdBBNwWB06mEMxmIKr4Ni
A92bpNYB6/0oxR73ktVsVbMKddZtetknr52+12Mj3qHDvoE+UTti/dd7DaXN
/Hu4N0etneYvsK/gfQHJfKYO9Tbi8c7H0wS6PDaTO8Xu18gZZf2Q9wLetfQB
NvKv5RXnG8QjAR32P5GAMrnn0KbvGuSr9zD2drF5+G/huxlxah7VwzEcwhEc
xgjvUa3OXfzml6+XX3QMvaTWZVzEDftSOS/VilpvEltqvxzL0FesSM31iMMj
PSwy43O6wT7q3kaaoI/N9I+e6py1I8P3vCL3KnJ5RWL9yM+j9+h5PdY5SzdP
ufc4jwoM4HEd11CJT2jCTP4FqJTfwvs7WtGhdhJtp8m0O9/t3uuVGgvFFnqP
RbRCrQuIc9Yr9rsSS7SfSHvTJPRBC/qrV6aXsziDNDVrxat5lvPPNsMd6xz6
kQ6hWWiyzqT3zf8DherMx2vxbTyu6q+Y5olFkItUZykI+kinGUiL+cR80SX/
i34+44X5Z9D5tBCrsQrJvtMcdediFtbYz6aj+Y9CP2/QF9ninebJolt535YT
db4LSeZqkPMe7/ABjajS1ymzn8ZJ9JTbA9/MUqp2izmTaLO+viKd90r7InXe
Rv7/H/oHH5yvdA==
           "]], 
          LineBox[CompressedData["
1:eJwl1Edsj3Ecx/FfBwdxULu0dlt7JNbVzcUM2kuHahxo/03ErotYLWJcxAEh
VmJzsHVSCUKJEaOHqia0tVdb0ng9cXj383z39/n+n3RofvH8WFwIoa8/SQND
WJYaQhPeoQUv+ocweVgIUzB6SAhjcSsjhDG0nJ5JDuEmPTs0hL/qs4eHkINc
rBjEL94utwNt6CdnRFoIH/Ruxg92j/QQvtMkOiwlhD70J7s3/UVj+hRhjp6z
0ZO/F54PDuEZWs3YIV4rdge3MUWfp3aqsts58Uo60fwKOomOwwSMxwl5BXjj
XTv1idlrkLnJtET+b/56LJXTQPeOCKGb2EmcQO8BavQpRiH2sYvoJXpe7kVc
wEH2Mvsuj9C3kMZQhCw7PnKXOjzEEzxGmj0SzE1EnLx4NNnhELuZnjX/HD7Z
+yOORjPZxdEt5N61Ry1WeV6JY+Ib2AXus1qPU/qv5f/j9/2LND1K2OuxDqfF
18jrrudLdS3qH/K/8vwarew4eyYgHl3ZGXp0oZ/t8Alzzdrt90pU1wVb9NqK
43p/MfMrviFLXb47/PD8Pfre1I5CGV8GHRn14/+MxXwJ8tP1GGduBt2s5yY0
8LeZ+Za20y+0k1aIvbdXmvoPtJJdhW/iX9HM127PDrThgZr9/K3mtqAZs/h2
idV7jzeoNLsaNajCPb3vI0Vdjng28tyvQqwct7CPb4BeS3wDBSj1bZRhp/nb
aI27NtJ3qJZbKDePb4f4Fr6tUT67FAf07tRzIV2EBchCJva4yTWx67iMq7iC
GW53Xe0NXMNVZJqzPbqNeDqmeofpmIa6aEexjeZmy81FDnrwHXa/I5iHuZjp
vRujm/o2e6X+/5/yD+dpvfQ=
           "]]}, "3.5`"], 
        Annotation[#, 3.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwl1MlvllUUgPFTWlZFWAhlaMtsab+mLYPQsmAuZR6NoRRBIBEUpWUQwrxg
0jDqRkj4AwgkRNuSMFbBCAlzGRIXwAoXNJBIIjKj/G5YPH2+c++555z7fe/b
PosbZtdnRUSVP+N7ROT3imjsHZEZEPF/t4gmn//jmo8ipuTL4am8nOtxsSji
AuZaGyTO8EAu5cG8pCDiaM+IL/gBFxVGDMA68W491nOt3K/lzuFv+LV+v+j7
hnuYpzuqzfaBtXD2cp+IEuduWG/uF7FV3WLxVeulfIUz/Lm5GtUoEc9Tu5g/
4wzXcSkv4AY95/Md8xT1NR/K7S20VsaL+GM9hqBSz2EYisXWK+x/qlcbb+LL
em7mSzzZ/li1qzEOb82y2R22oM35And6yIU8un/EGIzAKIxEM/bLrcJwdBZ/
iInyb/HvfJPP82n9zuAETuEkmsxb5/uZi1o0mWuSO/5t7wlyrLXHPvfdj/zu
EdN8vwX8o/gHbDD3+jS7Hl2czUOWnu1QbK2ruIRzxNk4qu4RZLn7lPSspGdA
naUIdTukPf5S3FV+Hqam2nzMWsZehZqrre3yeZk77OYaa3fT72C+QeIW67vc
Z4h4MP4SLxf/zPU8St8q+SO4kkfy/ZSb7ug7Pyxngpp7xX84s4cL5fREATo4
U2imGeZYaa5VaC+nU/reeIW4AbPkzkzPrBpLU33599KMvIRfWT9g/yCa5Dej
0vkZ9oZxo3i6eWr9vnPwL3L1bjXfJ+Zrk3NcjbXiFr1/w6/pnVP/tvku8h2e
zo/kPcZGtTfgkuftkOfyHD+3/gxP1f8H5fJznSvjRfrMsrbMLF+hnZ7fmfd7
7Ey/v3mqnR2HGrOOT+8j1jm31t52OS/1uSu+j3vYkd5Hc17Da3uv0CL3odyz
/KecbL1+Sr+DvW+t1fAansir+AVvt/+ct6X3Wq1J7nVDXC6+zhXcymW8w3w3
zdWKa+Jc9XPdr2Pv9//b3gEXE7M7
           "]], 
          LineBox[CompressedData["
1:eJwl1ElM1GcYx/GnaQSBJoLLCKjgMMwARUUbt6hoamptPbQRaxAFUUzcDmLb
CF5MvOlJEw9GD7YxGtsmLG7Qa8G22vZWA+7LoXFLjAeD0YOxn388fOf3vs/+
vMOQ7uhs2vNBRHzi4+dpERsrIlrwqipiDLeyEefYR2oiZmUijpZFNLDVsc2h
tbRAfCH6ne+x9dH7dHMuog39MyOK5M2rjFjovAAt5RHtat5ne67u43TE19Mj
HtGv6Gz1vlTnL/ca92s0R1vV2zQjYovZ2lEqfx/7GP8X4vfTXnpX/x46qsdx
tpvOVfLSuKD2DfdZtB7danQldcT9wn5Azmn3jLmqsV3MDozyvVZ3hBbap9se
+9GFfZgrZ4O9xqmThw/dT9GL6j0tjWg073/0DS6wnUdKzEP6ACvl3q2O+Ife
oX/TK/b9Hb9hGENoSN5a/zVy3pplJkKfIjN8hEKUyC9Gs32bxT7Ue5deO8Xt
wDs1yvlK8QaNenXSt+wV/JWYgX70oULf8epkxQyKGUCTnIPuKf3T3iWDKvSK
Pc9/WPwqM571/azXe7n7E/GTxVeKm5LMTo+w13vnw+5n3AfN+itWq7GEr0nu
Lb6smBwOsaX4evTptONeXBY/gLVia93r8DFqvUUd0ux58nrsMhWlSKEcZZig
/i6zLbLTI1qCiShmb+Jfl6DGN1iazMSXp24+xqEAl+06nl4X+y92m2++3YfM
PIwrmJO8m5qtye8Dbbiq54hZr9FRupgW6dOi1iU1X/p72eg8wD7AP4hv8T2+
w1r2rPgcOsTX0LrkHZBv1i16bEU71un91Fw/musZ/YG+MGsbbaHH+DfIG/KW
wygz7wI1y+kKvmK+EkxM3oG/Q84J9q30JN1GP6UZupJOEjcZU7BM/J/sGb3+
oNX0Kv0s+W2qv4q+oJ8n+bTIG8+3d7P9GuT3OtebpcBOfc4p80/FHXv9JOd2
9v3/sP8BWcCoNA==
           "]]}, "3.25`"], Annotation[#, 3.25, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0L0vnXEUB/BDJazF5d6SqHAZqjqYylRaLVu9azd/gEYnk3QxWKTekgYj
t9e9ly72/g3VexExeNk0aWqRSA0+hk++z8lzznl+v6d56tPQdFlEzFNFh2K0
MmI/EXHSELHeHNH9NKKHx9RQTTYVUS+T1FJHgpu2iLe8o59BBkg1RryWb3hF
H738tP/K3B/+NkVc8+8h1SXvDylyzBFzzrSSjljlK8sssUaqNeIJSRppoMs5
t317uT0iI0/N3+pdTEZMuW9BrrnzjOdv8rP87/2Zvpz+FXM78qU9bfa100Ka
Vn6ZH9Y/whBjjPLe/Af5kXEmmeBAf97OAjkeuWc5Feyqf7DHb33b+jNskeU7
C/YW5C475MlR1N/hPM95xgs6yTv3kfNv2nksixyyoS7JkrkLO7+oL+U5d/Zt
+hez/sU9/slVAA==
           "]], 
          LineBox[CompressedData["
1:eJwV0MtTzWEYB/DvaSgiOzO5pqbLNuW68DcgtjaRhQn1F6RNWxamxuVUjoOo
RRQG/wAqbDVTRrnU3ljIpY/FZ77ve87zPO/7/uo7L3dcKiS5ygWu2ZypSn5s
T8Z2J7O1SaklucsdmvclTbTwwv4VL3m0I1lSX7Relp/ZZL2ZjVRRyZx5W+RW
qtlGDd/VrzJsvSI37Ew6mpNTHOckJ3in/56a+5T5V5f8Je7zwP4hY7xXd7Mp
ucUNitxmYJd3yBLDjDLCB/V1jcawlwbqOeJdi3r6zPwkF/ilvseRg75VryzL
K/KP37/4/xv96r/KY/rbzTlAK23s56O3PFb/hEmmmeK0ni55nk7OcZafe5Ju
LvLb9+mVPayxZNYyaUgqKFA0Z0bfLK95yxvmOOT8wxzk6P83Mumez8wdcu/n
coqnDNpPywnnjMvr9hNyxfyCM2sqknlHrwPBwV9f
           "]]}, "3"], 
        Annotation[#, 3, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwl1GloD3Acx/EfcrScI4Zt/J25j/3naBvS3EzJAzUPhLHtgVuRsX9tE56x
i4gplqNQPHBfoUnI0RCZOWp44AHPNpvXPw/e+/y+9/f/3X+LrN64bEO7EEJf
PyqTQ+g0NITOKOwfwrFUvhEh7BoeQhGqh4RwGBGxbmITBoYwjX8inU47poRQ
Rnewz8g7i3PoKTfKlyGWTjPpYX2rcS8Swn08HRRCjbnv9U6U3xvrxSfbaR1N
o/v59qFJzmv5z/luq7mDu7gsdlNuPgpwg+8mbuGA2HV6DVfxTG2znJ52PklX
so/TGpzAZ/4f5vz1bkULXslpoy/oa/1+ii8fGcJLdhf5n+gKdit/lXgbXSI/
B4uRIl5r9mmcQjJ7Ef8Dn/+vzxMdYCeaRlvoUv4qtypzs4vueAn3vbPM2KZ3
4bAQYnLzaTEtoE+S/K7s8ohG5CXIb4zvhnQ1Ub5SvknsEprGjvJ/ZDcg106D
+R6q38m+TZeam4ME/ceaUyd+gT1GXUyPHHsutG+x9xLvxejC7oyPcker6aj2
V9wnNtVnGi93u9g4+oK+4c8wu56+w9v4TfSvdMcW+s29viLmXsXoYLfC+HdC
bQE9Ly+f9rBXA+1Ku6Mb3ql/LL+XuYloGuzOdvpOP9AZ+iWpKde/ApXxOfpV
0yrMFJ+FT94NaNavQvyL92c0Ilt9thlvxeq8j9jrMe2HTLV9aRatF0+wwxt6
SN1B/HGb32infpPYGjfZZe8i7Ea6WTFajD1YK75ZXnv5W2geu4S/NP63pu8U
+b3oXnYZtsnZinLzj4rlibXxt6LCXqP0SeQ77RZ59q6lqZgtnm2vOZiHubiC
GpzEAuTKm09XxmuxSv1a2ke/MSn//6f8AyL6r28=
           "]], 
          LineBox[CompressedData["
1:eJwl1ElsTVEYwPGvSxIaSszamtmRINWGWCBs8KihxQIb0SmmhSkxBzUkVp5Z
xLQwk1pZEPMYoaihg5aYpyg2/G4s/u9/z/mGc869Jy93dnmqLCMiuvkZ3Dmi
ZXbEz5yIZrTuEjExN2IDjzc/AZc9D+8bsbhTRGbPiBueh6gr5vm9IkpQhlKs
6Baxs2vE2z4RaZ7VPWImlqgdIf+KXoPlVHKBubFi47DZ+ETviE18klfKOabf
cSzDWust5XW8nMeozdNvi/HFHhFVWO95hVhbzhR7b/0v9vsV35C2zg/+ju32
lxKvc756fPBcpKaF2ofybhqnjW9xk7kKz2+4EdXe02t+wt/5mZxC8c/2tEXt
EOMy/YfyfC5FCT6JV4p/5Ov2cA1P5YTabOc9KmeO8WGezUe4hseIjcYLtS8x
CANxEVW4pc/N5LvgeXIOudNR7zs2oA6Vem3GOPGNPJY38Vb1A9BgT2fUn0ax
+SJ0dLYLvEjuOV7I57m//A/e93u8wyHfrNo36yD/rPgCeaf4DE6jX3IH9G+S
24hfaMYcc5fE5vIf49/YoTbf3ovMndVvnndzjg9gj2+7n/fyX+u97eibWLue
wzoz1BejCCPl7ZK3G2nsM56c3Bm9D1oj2zlzsMbcZXtYzVf1vIZq9U8wyVxK
LMWPjR9he3JnrJWl3xW5aevfM38fDzBB/l2+g9vYJr9Wfhv5hTwFx6x7HLX6
Nhu/4mmcI3cq5/J63oA1WIe1mGzvhXgtPt17ydCzxnrB2eZS5l7q9UZOW/ta
aJzFtcnZ1XdP7pR1jyb3RN4qtS94lPlV4qN5NeepaS9WntwRPSqSM+tR5rkc
pck6xr+911e8WM2S5J6gQG47922YHlmcn/TiVpyR8///5h/vBr/c
           "]]}, 
         "2.75`"], Annotation[#, 2.75, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwl0ktvjWEUxfFloCGhHZTE7fSq1dA22iFioImQnENiQGnRcyqik562UUzb
CRImetqBW6kIPgHSAbMKCTN8E7dE/RqDf9a79rP23k+evK2V6qnxdUkeY3ln
sqE92Yjx7cmXQrK1IzmxOzmJp23JEjqdPedHnJfxTt8mPZtRj+GmpCpzpzm5
i1JLUsSA71nZ/j1Jr/Ojcj20j7+9K2kw61Fncs73ffoQD/BdfUpu1M5LKOPG
jqRCP2xLLtJr/AV6nY7QSfnzdJofolfpMF2RnzdvAXXuMmX3evqNn9BziH/P
9/IzdD/frf6VH3Svm/xZWuPnsGxeyZsUUWf+PntWZF7wXfoG1SbUTtMqPUPf
6jnu/BhWvVfUnvheRIeez+b+lW309qt0Cy3T1+5zwOwrMkPebowe5N+otzr/
YdYv/ETB2WGZJtqz1iPTZW49v2hfA521bwYD/BHUvPVHmWZnc+r3MKZvr1qj
2pLMM/wxv82+37SdjuKTHRV6S/Ylvcy/WlPUzJnHAkr6i2gxr7vw/5/7B8o0
WQ4=
           "]], 
          LineBox[CompressedData["
1:eJwl0rlOVAEUgOFDYiluUADDYJRB1Adg0QIEpJDYGKQRFY20UDCySIgoaIwL
S1hcZrCAErXwFVwSaLQFlT0BKxux5iMWf/45+829c+J255WOnIjI4m4qYqgo
Is0PuSUZcaY84jRacR15pRHH0FsYcbMkooePio/gSyLiT1nEA7MJv9P6i/iv
PXX6KsQT4vPqB904hFzMnorY1TOgp07Pgp5Kcb14TL2BP5+M+IRidxK4L3fH
/UEuESfxzVyVuUtyb9yYMFvDh7mWj6un7F8riJjXt8ll4pR8Rn3J/mX8wAcz
73HVrnN6Z/Vsym+hVa7Z7Wu8Lt7AT/xCi9xHc11m0pgzty2/g984YO6sd/RK
z2usyK3iu74Gz/LYfOhpK454Ir7Fyf09XC8eVm9Xf8TT5l9iElnPP8X/eITH
+AWP8yg36X/Oo+KnPMLP+B3mMePGW0zuv3t3Luq/7E4jV4mn5CvUv/IFcb98
m/o9rhVnPF9WPYNe+/rQg27cUK92b5Hzfae+wv//tT3CnV7K
           "]]}, "2.5`"], 
        Annotation[#, 2.5, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.148, 0.33, 0.54}, {0.28786706422419606`, 
              0.4048734091522734, 0.6498481155998337}, {0.45471355512790557`, 
              0.46350955611523836`, 0.5517658334072376}, {0.6215600460316147, 
              0.5221457030782033, 0.4536835512146419}, {0.7884065369353239, 
              0.5807818500411681, 0.355601269022046}, {0.908826362274606, 
              0.642065905686515, 0.3173617230512785}, {0.935479156348681, 
              0.7086978908717023, 0.3999853846809108}, {0.9621319504227559, 
              0.7753298760568896, 0.48260904631054313`}, {0.9887847444968308, 
              0.8419618612420771, 0.5652327079401755}, {1., 0.95, 0.75}}}, {{
                Rational[-225, 2], 
                Rational[-15, 2]}, {
                Rational[225, 2], 
                Rational[15, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[225, 2], 
                  Rational[-15, 2]}, {
                  Rational[-225, 2], 
                  Rational[-15, 2]}, {
                  Rational[-225, 2], 
                  Rational[15, 2]}, {
                  Rational[225, 2], 
                  Rational[15, 2]}, {
                  Rational[225, 2], 
                  Rational[-15, 2]}}, {{112.5, -7.5}, {-112.5, -7.5}, {-112.5,
                 7.5}, {112.5, 7.5}, {112.5, -7.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{-90.00000000000003, 
                    Rational[-15, 2]}, {-90.00000000000003, 
                    Rational[
                    15, 2]}}, {{-90.00000000000003, -7.5}, \
{-90.00000000000003, 7.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{-67.50000000000006, 
                    Rational[-15, 2]}, {-67.50000000000006, 
                    Rational[
                    15, 2]}}, {{-67.50000000000006, -7.5}, \
{-67.50000000000006, 7.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{-45., 
                    Rational[-15, 2]}, {-45., 
                    Rational[15, 2]}}, {{-45., -7.5}, {-45., 7.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{-22.5, 
                    Rational[-15, 2]}, {-22.5, 
                    Rational[15, 2]}}, {{-22.5, -7.5}, {-22.5, 7.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{0., 
                    Rational[-15, 2]}, {0., 
                    Rational[15, 2]}}, {{0., -7.5}, {0., 7.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{22.499999999999943`, 
                    Rational[-15, 2]}, {22.499999999999943`, 
                    Rational[15, 2]}}, {{22.499999999999943`, -7.5}, {
                  22.499999999999943`, 7.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{44.99999999999994, 
                    Rational[-15, 2]}, {44.99999999999994, 
                    Rational[15, 2]}}, {{44.99999999999994, -7.5}, {
                  44.99999999999994, 7.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{67.5, 
                    Rational[-15, 2]}, {67.5, 
                    Rational[15, 2]}}, {{67.5, -7.5}, {67.5, 7.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{89.99999999999994, 
                    Rational[-15, 2]}, {89.99999999999994, 
                    Rational[15, 2]}}, {{89.99999999999994, -7.5}, {
                  89.99999999999994, 7.5}}]]}}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{-112.50000000000001`, 7.499999999999999}, {
                112.50000000000001`, 7.499999999999999}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{-90.00000000000004, 7.499999999999999}, 
                    
                    Offset[{0, 4.}, {-90.00000000000004, 
                    7.499999999999999}]}, {{-45.00000000000002, 
                    7.499999999999999}, 
                    
                    Offset[{0, 4.}, {-45.00000000000002, 
                    7.499999999999999}]}, {{0., 7.499999999999999}, 
                    Offset[{0, 4.}, {0., 7.499999999999999}]}, {{
                    44.99999999999998, 7.499999999999999}, 
                    
                    Offset[{0, 4.}, {44.99999999999998, 
                    7.499999999999999}]}, {{89.99999999999996, 
                    7.499999999999999}, 
                    
                    Offset[{0, 4.}, {89.99999999999996, 
                    7.499999999999999}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.5\"", 2.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{0., 7.}, {-90.00000000000004, 
                    7.499999999999999}], {0., -1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.0\"", 3., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., 7.}, {-45.00000000000002, 
                    7.499999999999999}], {0., -1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.5\"", 3.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., 7.}, {0., 7.499999999999999}], {0., -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"4.0\"", 4., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{0., 7.}, {44.99999999999998, 
                    7.499999999999999}], {0., -1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"4.5\"", 4.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{0., 7.}, {89.99999999999996, 
                    7.499999999999999}], {0., -1.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{True, False}, {False, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {225, Automatic}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.3697248316380257`", ",", "4.7146947370932075`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2.5`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.75`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"3.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"3.25`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"3.5`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"3.75`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"4.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"4.25`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"4.5`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Left"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.672162632340418*^9, 3.672162640998796*^9}, {
   3.67216273672645*^9, 3.672162775006065*^9}, {3.672163087953619*^9, 
   3.672163139784664*^9}, {3.672163218698037*^9, 3.67216329962366*^9}, {
   3.672163406385365*^9, 3.67216343460032*^9}, {3.672163475264069*^9, 
   3.672163499164261*^9}, 3.672163557941601*^9, 3.672163634594254*^9, 
   3.6721639996191473`*^9, {3.672164738809046*^9, 3.672164747836093*^9}, 
   3.672165127069002*^9, 3.672165206006423*^9, {3.672165241536619*^9, 
   3.672165252382786*^9}, 3.672165293376301*^9, {3.672165341276016*^9, 
   3.672165428139944*^9}, 3.672165498123043*^9, 3.672165528730577*^9, {
   3.672165565704692*^9, 3.672165607786121*^9}, 3.672165701907899*^9, 
   3.672165772723755*^9, {3.672165829274179*^9, 3.6721658335766697`*^9}, 
   3.67216586443533*^9, {3.672165943302829*^9, 3.6721659574269323`*^9}, {
   3.6721660272522573`*^9, 3.672166066380253*^9}, 3.6721662662696257`*^9, 
   3.6721663066617002`*^9, 3.672166366550733*^9, {3.6721664088477097`*^9, 
   3.672166433050687*^9}, {3.672166481164607*^9, 3.67216648860651*^9}, 
   3.6721665858751717`*^9, 3.672166635788926*^9, {3.672166672748995*^9, 
   3.672166708508726*^9}, 3.672167268948811*^9, {3.672167328273814*^9, 
   3.672167354737362*^9}, 3.6721673895262613`*^9, {3.672167446911126*^9, 
   3.672167537247208*^9}, {3.6721724436349697`*^9, 3.67217244752752*^9}, 
   3.6721738772497253`*^9, 3.6721754851326637`*^9, {3.6721756041036882`*^9, 
   3.67217561541298*^9}, 3.672341266989504*^9, 3.672488337410014*^9, 
   3.6724886103100023`*^9, {3.672488681459683*^9, 3.6724887233561583`*^9}, 
   3.672490788638068*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"qs0", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.672165442131481*^9, 3.672165457313264*^9}, {
  3.672165614780704*^9, 3.6721656152834873`*^9}, {3.6721658378396473`*^9, 
  3.672165837918111*^9}, {3.6721659726892*^9, 3.672165972944234*^9}, {
  3.672166033921894*^9, 3.672166034057023*^9}, {3.67216649397578*^9, 
  3.672166494087537*^9}, {3.672166589953568*^9, 3.672166591104896*^9}, {
  3.672167526101934*^9, 3.672167526493435*^9}, {3.672175496357931*^9, 
  3.672175496477868*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnXucjlX3/wdzPjGTQyEpdJCInCrsIRVFEYkkZxIqpRJyCKFSHiEKySFC
aIpyyMUgZXJoKqdxasoUOUZJwu951Xqv/b3W/O7XM//cr/tz79nXvtZee+21
1177s6/u8uQD3QtHRUWVSY6KKvLfz6v3Nf/40qUTAZ+PncrYVf2G+Iwe/ZdO
Xd73V8X3fll3y+Wz4jMWJF02rG9uvuJZQ+OPRBVOyDg+69keFZvmKb7y+Um5
52skZHT/p55cxYvOuTEodAPlc3z9XaKe+09+vOBZimd/cOcnmYPiM6LkD/zf
b1regVetkl6o3atx1K94xd2THlh/cxztUXx98wn3Tfs7lvYrfiZl/LPxv8fy
voo/+OZd+/aWjkM+vp4Xrl21uVdchnxX/JlFV1wxY6fiAXJFnnzns9Hwjuc+
+SRR5Qz+0/3tmtabkqxyBq9b/dZpFd5PUTmDr5486+HcvikqZ/Ctp1ec+T0u
WeUMXqPz6SsvFU5UOYNbOYOnvXYoenC3WJUzeMmprx/Z0jJG5Qy+5ud538dv
iFY5g78Ue/MfnZdGq5zBnxn/eKX9xWNUzuAZ02YN7fhXjMoZ3Mg/QH7oJ+XA
kSff+Vy6+6mpj5UtpnIGL3fyyDs9q6epnMEvz76967t/FFM5gz/V/9srLpUu
qnIGP9oru/PotkkqZ3ArZ/DCA8YOTp0To3IGX352YuU59aJVzuCF7p923an/
FFE5g78w6mL1KwcVUTlr+Smdn7lwqojKGRz5I2dw9B85IyfGO3IGRz/5f3Dk
yXc+Yw/3rlt1XrrKGXzI3M6rqjyUrnIGP3KwWMOjzxRTOYNP75lz+q+0ZJUz
uJUz+OpO6YO6NvdyBi/5dcz6il8VUTmDxwd/RN96uZcz+KXDjR84H+XlDI78
kTM4+o+cwbE/yBl5YD+RMzjjHTmDh/UzT3HkyXc+70nKWrEzycsZ/OcKt469
4w4vZ33u1/M2TP7V6zO4lTP43R+Xrf78o17O4OvKVYp+6oCXM/jF3/aN6FvN
yxkc+SNncPQfOYNjf5AzOPY/rM85Oh+F9TlH7WdYn3PMeM9THP0M63OOkWeO
4pNSq761s3Kq0eecoO32t9ecPJ1o9Dkngj7nBE9sWNZi706rzzlBmx13VH9u
ZLTR5xyVf1ifc1T/w/qco/YnrM85av/D+pyj829Yzlk6v4flnKXzUVjOWWo/
w3LO0vEelnOW6mdYzlkqz7Ccs4LC9x6rk/ZSgpFzVgQ5ZwXT3mm7vPKqWCPn
LJV/WM5ZRv/zFMf+hOWcpfY/LOcsnX/Dcs5S/yfsJ/Hn5Wzx8Dzk8bDd9Hh4
nNvyORHwrAJ41P/3z8s5Qv0FcOQcof0FcORsceRsceQcAUd/HPI3+uzoL6PP
Ljy/qz479MHoszP2U/HweFd9dugnLQ7LtYA+O/Tf6LNjvBh9duHxpfrsGI9G
nx3j1+izY7wbfXbYB2OfHfbE2GeH/TH22WGvjH12Zn5XPGwP1T477Kexzyr/
sJxzIsg5x4Xtj9pnh/039tmF5wu1z475xdhnx3xk7LNj/jL22THfGX/DMT8a
f8Mxnxp/wxn/U3Hma+NvuPD8rv6Gkb/6G6r/yDk87gv4G0Y/1d9QeRp/w4X9
H/U3HP6S8Tcc/pXxNxz+mPE3HP6b8Z8d/p7xn51ZHymOP2n8Z4f/afxnF/ZX
1X9W/Tf+s9qfsD7nRdDnPB3vxn92xv9RPOzPq//s8P+N/+xYLxj/2bG+MP6z
Yz1i1oPOrN8VZ71j1oOO9RFyBkf+Zj1o9F/Xg8b+6HpQ7T9yDs9LBdaDLuz/
6HpQx7tZDzrj/yuOPM160LH+NetBx3rZrAcd62sT33Csx018w7F+N/ENlT9y
Bkf/TXzDheMJGt9Q+4+cwZl/kXN4ni8Q39D5CDmDYz9NfMOF4y0a33Bm/as4
8jTxDUf8x8Q3HPEiE69zxJdMvE7lb+J1qv/IGRz7Y+J1Lhwf03idzr/IGRz/
BzmH/aYC8Tqd35EzOPORide5cPxQ43U63k28zpn4j68/LE/FiX9uuH7otbnL
jwV8Hr4ifWPr+ISM+LU/JE+oeFjxylv6PDfmdvyibMUbNVzX/9Nc2pmp+O/N
e2UNnc77Zjotf+T3cUFf4pPZisfN/nrMmRdjaY/i2bvey8wrEaftpF20h+98
Tv67/pLON6VkNHuo8ekmE35SfHVWh221hhfVdoK/MqrTprP3avsd+N0P3X9l
m7xYrZ/6qIfvfI7vcWZm4xnYmR2Bfm5b/GLZucVUbuBvR/V+/MVXUrQ9Wv7J
J35oMydB35f/Q86UA6cevvP50umkwnOfTdL6wc8sur/rMyX9+4LnVund/2Ci
yllx0y8B9dG/yAccedJOfT95L+oFN+1R/LvCyx5f/ajXH/CWDy/e9cxcrz/g
tF/aozj9yHuBo4fmvRy4eS9HPab9juea9jvaadrveC/TfoccRG6KIzfzXg45
m/dy9IvRH0c/Gn2w7afftT185xO9op3g6KHRH2fsg+P/jD4oTj1ajk8ZRzLe
HJ+MO+QDHmG8az+a8a7y5P/BqYfvfGJneF9w7JKxqw47ZuxngX4BRw+N/dT+
NfZT5Uw7wE17FMfO007m2/hSw2fX7unjJ/ze9vTns9fO8+X5HZz/Vzst9TCO
KF/82P3ffrQ8KaP8P+UPaPkmK5+pdGUr1SvFY9qnf7hpr/onipd5IH9KhV4+
rgVepfOwEpc5b2d4/tELm04fquPj5JQPz9eZ2s4hv5Uaffk5P49T/vkpZ187
8avXH8rP+aT00CNXx/FeWr5B/97n1r4fozjtSV02fPqdZ4qovlG+51/JU1Zv
jLH9GIxo4G6q3DDW6mfwffI3a5eV9/FJyl/78nvph2bGWr0NWg8q+8jDudGq
D/RbzXrnLv98ut/Xox5wo+faHt4f3PYveIXklIdWliqm/Qu+//qJrVYdSNX+
BX9syIEio+eqHdB5tvTKBre3KZ2m/Qv+9cQTK3fFpmo/gp9MqfhOt/Xerqq/
UHX5D6Oa+/gweMdrW3ZeVjRay1PPmAGFup8Y4ePGlP/8k5+a7zpXRPuX8m3f
fuLtcRV9PJny1+ed277x8Whrx4JGz5266dNWPp5P+YtVj6xZ9lyMtW/a7/QL
uNGfgH5A/nynfNSkPlvfrpqu/gy/g+Mn8/vDT+xblf1tmtbD58VpI96c+U26
9hf4oS11h1zztu8v8KVl60dVfS1V7Rj197niwuGU8breUbzZmKaHsk/6fRPw
I7XqxE9pWET7i/pjBy3bVulB31+U75RYr/8TlX1/Uf5Mt67NavxeWPuL8q/O
Kf7putl+nFKe/qW/KH8686kP3bfR2l+UZ7wzrsCxe+DID7tHP4KHx0ue1lP5
/sQq9Vf7fqR8eLzkavmTu944eOHxdO1HytNfYT8zN/jpkfV7vmyq/ajvNTvq
49b1evj+Ai/ZKr798+uL2Pk9WDPu6iK/r/DjjvLHL7smtU16ETvvB7F9Ng55
+2Pfj5RPaTY5r+T5wtqPWl76nX6k/KfPBo/e/6zvR8ozrhlHlMdu049qt8Ru
hP3GHJ2PwnGVHcHFJrmVajxaTPuRccB8FI637Agal415t/dYu/++Q+Uf9jNz
grufappWpXsB/yroearG2vqzY3X+At975+Af/hgXY/zSnOBMxWMP7d/m93co
P65mpbS55aKtHxgMui9vxIpJMSYOsyMotG5gtb/6FbH+ofZ7OD6zI8gac1PK
hYf9eKQ8ehWO2+wIqt3zzOXncnw/Uh67EY7fZgedvv343KDUJNNfWeonMF4o
zzyCHoBjr8Jx2uyg3PzUM93uSDTrgizFw/Hb7AL+BuXXvllzc93PbVw3O5jX
b8vnHevFmv7KCroMzb77ywd8/g/lf631Ve3MEjFmfZGl9YTjwNnB+slD7i05
LNquO1R/wuuLLPV/wvHbTPWXwn6V3z9CzpRnXg7HaTONPmcpjnzCcvT1h+O3
mQXkbMuH47qZRp6ZEffjdN0q4wU52/Lh+G2m+ofIM0J5XT+a8rrPhfzN+tqF
x7vK09FOEzdw4fGocnbIwcQTHOPdyNnEu1SfXVieKmcX1nPVZ4OrnB36YPTZ
Mb6wA5QP+3v5ijdqMXXMqfEJtl+c0VutP4J9cNgZM8865hFjNxx2LLwflO0Y
d2b+dWG/JUfLM65NfMmF50e1Sy483jXupP1u7FKBfqS8nUcoj/zNPKL9Zey5
w34au+2wt8yz4MyP4f2mbIc9N/Oywy+iH8Ej+FGOedzM1475xfjPDv/NzNeO
+cv4zw7/0MzjjvnR+M8O/5N+pzzzr/GrjZ5kaXnmd+Nvqx4af8kZfw//R3Hj
Lzn8SeM/u7D/r/O1w/8x/rNjfWH8ZMc6xfhjzvrJ4Php2E/wpzbXGtt+oe9f
cPxAE9d1rKeMX+3wM02817FeM361w4816yzVB/qX8vjJZp2r9sT42y7CuknH
kfGrHX6+Wc9qPxq/2rGOMOtZZ9aJuv+YueP1lZll0k18Ms+1KLn56S7J2o/6
XqxP6S9w1k0mzu+IM9CPlGddZuL/jvgG/Uh51n1mX0D73axzHetKE8dQO2Di
DzovmPiG2hnsJOXD/g9+e77OU/Qv9WAPzfrXsR438Q1n1olanv4ycRtHnMHE
9xxxJORPeeIYZp9I+wv5U544CfKnPPqg+Y5SnjiMiRPqeDfxOvWXTFzOheN4
OSof4kvImfLMLyZep3bJxH9Uz03cxhEH4zu/g/M+4MRRTdxV5W/itM7E67Q8
OP0F/tYVK1NOnfX7xeD4kyYuWmAfExy/CH0DZ5418U+12yY+6UzcWHHixiY+
qTh6gjzqVq/YofxNSToekZ/tR3AzL2icE/kwTihv4zngZrwoTn8Z/Q/QE6Pn
QdJD9V+6Mquo8evyNW4Q9t/yg8GrOtVyDey+YX6A3QjHT/J1vRye9/MjxEPy
A2NXFWe8h/2rfJVbeL8sT9/X2OEA+xNeD+YprvEgwZmPwuudPBMnyVb82huK
P7p/YKpZz+YViDOAm/ldceYLM69pvDe8v5arehiO8+Rq/4bXEbkF4qjgzNfh
eEtugXU6uPEnFccPCfvbuRovZTzyfMZF2A/P1Xh4uH9zAms/wc06RXH82LD8
czROGJZ/jsZ7w3l32Ub/8xT///d7lsa7wnllmXa86LrV+s/grKfCepvjaGdY
b3MK+HXgJp6mOHIz8T0Xjsvl6Too/L75iiOfsN7m6HwXXufmOOKWRm91/jV6
W8Av0ny3cPzW50mKfobjCbm6/jXxQ0ec0+i5C8c/NX7osANG/9XvNfqv/pLR
c8c4De9f5zo7rnm+9WfAzf6C4tgZY8d0/RgeR3kugh0r8L7g2MnwPkK+s/YZ
3OxDKY79D8cl8nXdpOOT/avQONX5S9fR4fh/vuqnmaecjZNjn5hnaSc48zLt
BMeOmX097V/0nn5G/ykPTr9P2lrqYJMJRwM+n+oa1bbqBvz2WYrv67v0l+rd
8E9WOfCkwlWeeuE3/OcvAj5HzD3y67TOiVoPeJcmr+zPfzpen8vv1E85cMrz
nc+Jw5vHvV7Ktwe8w5PD7jy7Kk7r53faSTlwyvOdz9erVDxzeke8yH+b4gfm
NPu57NEELc/v4HVKN21VsekRx2fv6iXiq+1Oyvjtpfw+fXOPOz6Xr2g2/szQ
ePCAT3DaD/7C8XYHEo778vwOLu1QPGfY/e/n7qLfVyk+/YPsWh1ra/9qP27I
XfnUwJlxtp3Bii5/zf/PaJWnls/65PX3po6L5X0DPnlfytEu2x5w5EZ76P8W
v01cf8ubBfpR28//g5t+UZx+NP0eFHq9y80d71L9Ub0Cpz38HkFPgtZ7z8Y9
Xz9Oy1PP5PzWY5f/wjrlC8XNe2k96Cc45ekXM14cuBkvjvrNe6mem3HkaKeR
m4vwXi7CuHMR5Ka4kYMzdkBx7ICRjzN6iz3R9zX6o/XznU/sEvUzftFPYw8d
em7GqWNcmPFVwM6A019m3LkIdtUZPVfctFNx7DbtA8c+8J3fwVlf837bf+rc
okcTb092dx/4xaVLPwdPv/vK8cVTUrR+/m/+tmqj01fGZVCO/6O84CpncL7z
u6lf4wDUz3eeTztNeW2/Ka/tvPLC3kXL+/4Y8Dkg+85vnr01XfGgSWr5CRV/
CPZWvRjcOIa43+5g0EcLb81dfijo27b0uyeuScvI+mce3af17Et9s++pTumK
U89Pe19+7ZrM9Ay+87my3+nfduX65/J/1APO8/MrPZP36uY0bQ/13DwyKN49
3T+Xz+seTH9ywViP83+Pnn62z9TjadoecOrhO5/nYjrlXd1dn+v4tLg8x5n6
tTz1g1Me+Yh8tbyRs5bnvShHfab9TuTnkBvfqQc58/980i985//QB/4f3PSX
4uiVGV+qz2YcqT6bOGTwfNcOC+u9mGr9W8WNfxtcuWpt5bWbi9l4suKMU/Rr
TvS71c8PtbwHO4LnzjR+7fyYonZ9p7jZlwnyUkfMmDcqya77gvlrWhWqNlnP
E+l6FtysT7We8Hmr7GBazdi9+9p5uTHvXWqdtuy61DhzbigzaPH3wjv7r/fl
sceNb1209qvNBco791jHw10bqD3ReWfg3Gp1Z8/18VX8fdpv4gMG1zwEV3tJ
iSum17XrnRwXlqfmpShu4iSmHs3jcvSviXcpbuJdDv0x+XuKa1xS8Gm/37Pm
ox1ePvi3o5o9X2vOgz4flf+jv+gPcPoFuYMjf56n9chz0X/GEzh+J3Y+QnuC
RVOuWvv1J/G2PQHPZR6nnnC/z1L8tiOvz3yvdrxtfxB+r1k676Bv6BN4xw0D
56zr4fP89b1EbvgrlDd6rvYBOWimheDh+PYs9c8XfH142Zlx/hw35YeU/eS2
rSu9f46dmPTG8U1Lb0vEPus8WKZGicqzfypm4x4B+okfwDxy1et/NtgfXdSc
S83WfuE9Gdc5sTM73pbueYcob+vnc2jDT+s3WJVszmNmBmZcq59PP4bjHlkq
h7AcfR6LsQ/aj+a5ztgf9aspj57b+sNxrSxHe4wdc7TfyNOF9UfjhA67+q99
+E794V/+rrK84o3J1t460y9ann6hXp5j6+dz8YRSN61YXlT9QObH8LyTpXbG
6KH6h+ih0XOzjzNL7RJ6zvOoh+fync+9+X/+fmheqrUD2l9mXKv8zfhVuaHH
jLvqI18/dVm0z//X/cktY6s+s9vPj8zXa8vUeHlfOez5dzruvhg481jLNsVs
/Co40qHTw99n6DlQzYMF5//xB0cOr/vx1XO8P4k/gL8UPle7Q9vJ+9Cu/Hlj
vmnTNUX9SerHr6Ne2pN41eHn24/w/rDmb0cNabdyh903yVE50E7qx8/kO/Vc
aFyp4o0fej8W/NU6m05HpXocu7JyTKkXRy5L0/ei3+gv2s/7Vnvq6tjN+4pp
nIdxQfnwedsdzshNxwVyM/sCjvc1+b3O9KP6sfQj3/FbkT/+MPUgB8qDIzeN
+0u7jB46no8eMr54Ln4y3zXvRfqX8uDog9m/0/elPHHgX9oFI298Ml3nR+SK
/Hlf2mnXEeDIjX7S/W3pL9pP+bI1Yxqv3ujbA9694aYmd77k11PoC3Jg3IFT
Hpz/o36+s//Trer36xqt8/uG1GPkpvUgZ/Scej4sveuNSef9c/kd+fD/jIt7
vvtr6KdP+voZZ+hJOG9kd2D1in5gnCI3cOwM5fFvS358tF6tpukmP2G36i04
/0d7qJ96mtxTZVi/a9JVb/md8cv/o1dvF80f+tAUXz/9jzzBqQf50x/I1eoD
OP1Lf4D3qNJ33QNLVT7aX+g5cqc8eks/gZ8vW7X5iCe8PaQe3gv7xXOQA3aW
/nxrVaUJi4b5eYf3+HjVtLGvlUpTXOtvcbLE7TH+vSiP3qreS3vpF75THn2j
/fyOPoTzDXarPofzDXarPUdv0Adwsz/reF/6FX1BPugBOHJAb8CRA+V5Lu+l
9kJw+ovv6CPvS/t5Du+r+2pSnv7lufyO/Hkuv6OH4DpuwnZJ60E/aSfl6UfK
gYfts+bPBM0ufrOy5U8+bx//+rK99xY5Uc/zm1G+/aFn/lpfyeef44/MH1/q
+u+/itE4Bp/4b+gbeAQ/M9gy9K33z/3hz4ngdyT3WZNw9ev+PAL+1MdV3038
eGms6j+f+Lf4DeD41SZfV+Vg8oFVDsZ/CBZ/U+XAZeejzbogJ2h+ccaGt5ZG
a3t4Ps81++ZBiWv+PF75+2jjb2Tq+4bxrOCvUV2mzOkdY/yxTEd5c97H0X6T
h+CQm1lnOeRvzrM4+tecF3PIzZxLcugJ8WQ+WQ+G/Z9tjnUo3/kdHLkgD94X
OdIPYb3N0vLIzeQ1OeTP+OKTdbQ55+jqRT3eq3XJJHv+zj1xPmvYiDtS1J+k
njktP2gbXbjAOVOHnqBP+hyRp1mPOPTNnNvV9pj8MW0P+sf6iHiFiZ+4CPEQ
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
Gf/T4V8ZP9Plij9m/EkXN+uyk5WLxen7Wt5m3ld5ksWf5H31vLL4n7yv5uOJ
v2r8Q/eT+L3GP3T4z8iBz3a/LZnfr573w1kvjk79sWNeLz9vfjjo3iITKh4L
Bn59Ze0mK/382DOC3ztE6k/dNGblwIV+HqSeDwaMHu6m+flu3Wd3zV7e9+eg
drUZrYsWStb6F4ofaOvPkvKTrr3QeP9v3s/ZI+9xqNfJyV+t9v7DqfTFh5tM
+CW4e3m1j2eW8/5DTIsPxvbNzQv+6jZqW7XCKfrcExH8w1gpP77r5/snTPfP
LSdxmHVPD28ztYp/LvK7fvPFrwv18v7Vm//IeW/w7oE2W2782fuBrNtm9K64
r8po7wfu/L3hHbnLfyjgx/aI4AdOkvqtH7hB6s8s2qfKjmt8O0//sy7eH0RP
DVZ/eq9vZ9l/3uvbYFrK9i6VP/d+IOvHeVs/rt3hQqq256T4abY95aSeRUUn
Lfok0ftLzaWexMwab9d617fnxX/Wtd8Hy9peefCNNb499/xTfkNQe/f7t9x0
LsHGQ4KjH3+1oPaXXm8T/lm/fxUMb3p90/fG+v49FcGvu0/qP+r2Vbp8m2/n
Iqm/f0KzI5uX+/VaktRf/qGZr5f40evV/n/qnxAcr932zOU14m2cJ9jYaOmP
5+d6/63vP/24MOif2L7/qw/4desZWWdvu+XwCxfiE7X94U/f/ujZ/z53cZ21
s87vi9P2/ynP7Tu51m1PjYrT9j8jz02pdW2LJ/6KVXvCc2e3e33K7Uti9b0q
ynMY17T//X/ks9zV7XXZ+6fqx2r7f5H9xzlSD+3+NYLfxeeXq+Inv1QlQds5
S+o//kW9PdfWTtR2Uv9WkQ/tXPtPPOkbt3Nr1PDy02LsuRj3k9gH2r/un3Gx
xZW6y81s9aifp45G8KPWSP3vrDydE/uUf+6/ca09rnPf31LLJPvnEkcd2eCD
katOeH9jl7wf9oHndovg/9SS+p9/dnf2F+283yj2wZ364eLyc8e8n0OctfGV
a3t+9Kl/7rx39vzdZMJB16hqt/gPyvjnHovg5+yQ+q2fs0bqb/hktYZFVno/
581HDzxSsWm+O1n5sqwSDb0ciFf1fuCKt9slePl3jR5QckLFQ67YyjOLx3fw
7fkggp8zQeo/OuHqpQ1Oez9noNQ/Y2TnI7+OT9X23L9p8HN9c4+4bzYk3Jie
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
ZxNfDQ507ls2+YFYk8eSFbD/Ht5XzQweaXr0wRp58TYOHLSfc3/1xIcSjRwy
gxmvN1u5rX6Ced/MYNSS1plT/7tepnxU6M/nJ1Deys2WD+/PZgblakdXeaZn
nNmfzQx+ub5Kj47H7PtmBkkvfZN1oKbPm7L1Gzk4yps4hkuVuLqJezjkbOTj
fpb2mLiNY38BXPTfXZRxZ+TpeF8T53HPyv4FuHy6x8QOGDkXWHeTtzBO8l6M
nB39aOTspku/M047iHzY7wBHPo+I/mAHqCf/yN/z+j+RYPvLoYdGbx15QWY/
yGEfwAdLHKO3zBdmvOu9BsY+KB6el7Md487M43qfgpn3FadfqIdxbeKKjn0x
E4d0zL/GLjnsholDOvbdwBNkn8KJP2DsVQF9kDikY1+P8ifNvomJczo7f1F/
K7GfZl5w2Fszj+g9Bcb+u2Gy32fmC1dU7Dx6xbhg3xD9oT3MF2bed+x7Gj/B
4e9RT2mRz3TZPwW/VeSw3fiN5ClH8CtcWZkHzX6xixd/1fgb7i2Zf9G3BUbf
KP9vfH6/w382/onDHzDrGr1PxKyDFEevqKeS+CFmvePYdzbrIxcr6wv0h3rW
iJ9j1kGOfW2zbnKPiD9s/Ey9f8T4pYqb/XH3nqzLjJ/pKpZYWr7Y38WsX+rw
8816R+8xMesjxY3/454Qf9Ksd9yJby5d+cXd6XZ95Fi3mnWNI6/ArIPc1bJe
Nv6wmyn5CcZ/dkPMOkjyGdx+8Z/ByRv/seYdh2oeiTb7sAcc/rzhQ3PEAdBP
yrOOQN/svTaUl09HXELjTlKedY2JA+j9KSZuoDh6RT17ZT1l4k66n2viVI64
jcnHcA3M+l3ySdz9Eo9CD2tL/ZdOhPXK3p8SCQ/nH+a55pfPu+rJO9PNPJvn
6koetcmTccRbwKl/u6yvTT6POyvxw7B9+8mxrjfnxx3xSfqR8vdIPIF+sffd
UF7yfBzxUhO3cQclvmHik3rfiolnKm7ihI48HxNXdMRbTDzT3SV5Ryb+6Z6T
eKDJL3LVJX5o8ppcP+HnNHEbRzzK5Du56hJHNfEZN7Vw++tmfp5m47qOeF04
jnHYEQ80eWJukMSxkT/liUMiT3uvjckrc8TPkQ/liYua/Qu9n8XsdzgnuNlH
cLXM+QvqryzxZBN31XtYIuEm7upqdfh14hXzitr4pyNOzviiPZxzoTw452LM
/o4jzo/8wVMWDZ4+rmys3X9x7I+YfZYC+QDg7NeYPD33m+z7mP0UvW8lEm72
KdwF2Z8y51Ac+1nh/etjwYTtJXfvO+nXj+wHkf9p8jz1XgnkTD3Ih/6iPPmo
pl8C8ldNvwTkuxo9D+h3o+d6D7LR5+Dx/g0OtLq8qPGv8oNRkn8b9pfyg7OS
rxv2f/KDlyS/Nxyf8fethOMw+cEXkj8c9ivyA/KNTd5vsEryk40dDqaI3TB2
uEBcnfMv3BfA+4K/8M4Tbw3LSjPr37xgiORLh/Pn/f0pZv4KyNM281dAXjft
IV7KfQ3heIi/x4T6watLvjryIQ6JP8NzKU/ee7j9/v6RcPtzggaStx/On88O
Pnlk4sT0VT6/BTxvxWcV9lRINe/l740N5xlmBqyXw/LPcpxDMXEqlyjnVsL9
6O8ZCdeT4ziPE64nx5WX8zsmnunekPM+YTlnux/lvcLyzHbIIdy/Oa6vnD8K
r/dzHOeVTL/rvSEmfu449xRed+c6e04KP/xPidOauKiuF0z8082VeK/RN703
xOiba7k3eka582lWrxznwsLr01zHOTIz7vQeEDPuXCs5p2bGl97rEV4n+vs4
kA/+A/tHxo65rnJez5y71PsyzL6n6yX2MNI8G/aTj7nFkm9APeDMF5HmI+ZT
8s+73XjgxbPLEnR+XG/yEJgf2d9vuOU/Q2qe8PGNLiZ+S/3k8Va9+ac6cxf7
uOUvJm5J/Q9L+U5n537RcbTPfyOftm372WerJ/p5/IyJy1HPEil/XacqHUtu
9vG3zpLXxL0M4L0MTj3ESYa8/+GxtaUSbV5isKB90zZpX/r3lfzA4PDJVxse
usfHvclz+FbyXsAnm3sxsA/U99ioAzcsmebjw/RX95j3K624zfsP8hkMmz9l
/N93+PjtYinf/8rLH3Zvxdp84KDlypFbHnvK68Naif9fsaDQ9oWnE23+VTBN
8nvB2e8YauQjedHaftOPQcrWfvtXlfLy6St5awdF/uAdBKdfeC6f5EXzfbbU
T7+jJ7+a/HajPwXi599JvnrU3dWnVKvg8adFP38Yf++F7OEF8rSDP2+//kCL
v2OtHga5H/4w76omPn5eRcqnSN44+Awpj56Dr5H25PXtULf+do+/KO255csj
z9fo7MeL5Ns7ypvx6GpKefO+bonkyZv3dR1lPCI3+axn5fmLGY+mvxzyMf3l
kI/J23eFRP7GPriDIn8jH8f5AiMfh/0x8ne9RD+N/B36yXudMvn5xu4pTj1Z
kq/4gIwv8NViTxhf5vyRGy7j19hnx/g19kHPHRj74Kx97mnytI2dL2A/5byS
6ynyMfbfdRP7g/2caPL6jF1yD8u5KmOXHPOOyX922FVw8q6tXSWP6xmJA4Bz
7on7O/Af2N95xuBlBac878Xv4CaeFpDPyXfynUq0PHLnxMo+f4Z8iU0v3VX/
REvv/0vefrB8+8C88Wt9fs4xs14wcenguMQ5wSfIfv07DT6b+Ghpj5NHXf6e
67fduM3vs8v5heC2Fnntftni1y9dzbqA8rWlnic/+s+jzz6UZvMc3DeS7813
9jWeMOWlna78/GkVqk9LM+tW7wdS/n2J3yZKXhA4cVfaDy55UK7E1avXnv/A
+58T5bnTRD6R/D3KE3eiH038J4hd2vym+79PsXG8oMHWOmM/vNOuW3cEY/96
aNDqsal2vRBwjtjE84MSP9d/slVKkl1HBO/KeWSzLxaU2L2k0JGYZLuuCdrJ
+WuzP+4ob/bHXcNFJdrELE+x++O6r2TyKNxoeS+Tp+SQg1l3O/gxzLrbwadh
8u5cnMjZ8JC4g7H3vdXiTj9PgdeeWTen49QCvB9uycobWrc7Gm/Ptwbg2ENw
O3/h782ScyLg+Hutiuy6tv1vvp7yph7wjRH8ap5bR9pvzqcEdw344oGUFzxO
/m3vqiumtL3B7+NTD/Lhufb+BfDu5rwqeIIpz/tST1btA9Mv7/h//EPJj133
997i077yOOdME9u0HB4MTLTrymCEnE8HJ7+ovPAQgpOXBT+h2V8O0Fuzjx8M
E75NjVfLJzyc6ElU6C/erK+zHLwZJr/IXSbj1ORturnC7wrO/gW8r9SDnq8T
eZrzvG6tyBOc+HmCyNP0r87jjDvqOXig2uIOc317+Nwn/LR8J64Ob63Rf3e3
6KHRf4ce0i/ECTmHbtbLwXX5H/zY9Jqidn2t9wKYfbEgdtnyXXcv8vFDzh1j
58N8AjuCMSdvvK/Jwz4O0NPMa2YfLYjZU7nC+bbpdh+tQJ6qzCPB1TJ/mX20
4LPCUSvSvkuzeRRBJdkPBecc8dmNN3zRaojlGdjhxkr7TXzMJQmfjMkDdHEi
n0jzmsljdLTT5DHqfqvJj3WVpL9oD+cf8WdMfqNDniYeq/z5tKeL7APeIfnq
4JLn7JaJXxSpHp7L+ceGF9eveOla78+cMH4UuOWrB7d89eCWZz4c3/Y887Sz
W4S4lvhRDn8sHOfxfPLglk8e3PLAg1seePSNvH0rnw/MuDO8HwH7oWafNzjZ
tPGE9V8UNfHY3IB4neFTcuTlmjiw8iUiH85b/SnjwvBKuQESJzfnMYMb0rM6
dqsca8+ZKg+hiZsF1RvPbLi3ZazdJw04J6X5kDKv/SD209jtYNGzd27YXj3W
5rcEXZ9+d/8Tz8XYdUfAOWuTbxMkLTgSDHkqxtqB4PuyJdt0rRVj471BIeG9
MfHhoPilq88lJ8TY/LGAc+gm3yxI+Oa+TVOOxBo7kxUsEL4gcx7fUd7E1d2F
RmffHPlVrM0vdRnfN47a90eMzbN1Q2T+5fs18sm8TP+ukfVyezm/Cc55wHvX
zTh09C6fJxAn46ic+Ang5HHhPzBvnjDnu805Fxe9bMdVb+6PsetNPS9vznO5
Sbcde+7Ru/1+K/ZzyNAVn9zxSYzdz3KHhOfNnO9w5wd1aJlVx++HUs/s1UdX
1vnMz6fM+zf3/b3r+j98/Jl1+nzhFTHn2lxlGS9mvnbw7JnzXG6w8JyY81+u
zP4zdw6Znmj3E90PwkNo/N4CcQbqwX8257iDslK/OUcf/CXyMXkXwSyRD+/F
Odx7RE/M/kgAr5TJcwuc6K2J5wQ7hD/BxHOCmfdsvKriLjtOs4KfhY/L5G0G
jBdw4p/XCa8pOPHP6w0u5d1k4aM25d1Ewc0+qVssfIPGn3cLxY4Zf97BJ2P8
eTewcvSeVmVj7X60g7/RnIt02FsTD1deVhMPV9zkJwToOfOX5YtGr9CHoTLu
zP6d8jODw9MyRXCz/+iwq8bPdNjn/5V3ZHmPzTkUd1zm00j8AOb8bGDlMzEC
XtfMg2YdEQySfjQ8EkFQrcZLpXf48px3W7W83PhDK2LsfoFD/w1Pjpvf6T+b
2z7hcfKKzww+uOF8oxjj//tzPcjthPETwnL2PLeGDyqILn573ZuS4+z+YDAv
5p1bRxby4/c2iWvdWLrvjZ/HeXyH2I8Kb1Rb2qiC3RfOc8seC9a3LB1t7Eme
GzZ6c0afov5cOfGopV03vfDCBW/PyVvb3CS5zw1fJ9s8Dffu7kZnm/13fRfO
K/D8tIxH4mmDO9R878Icn69OPM3Oa/CiTHx30a6qU2LMfnSei2u6oNb+/4OT
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
+P8Ax9uXLA==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnQf4V+P7xz+fMz/nnCipSKhkz7KSkZCyo+ydrJAi2ZQkM7L9yIqEjGwq
ZO9IyhaVUlYZ2fzfr97Pdf2vq9N9f57znOc855xn3Pf7Ht/2Rw3sfXJUq9W+
adRqsegdWa3WoV6rdUxrtQNFe+rYQOX7i+6sY33xg3VuJ/EHix4suquODVX+
gdo4VmWLq1rtzbxW21ZlR6rsBLU5QHWu1bkHVD5fN7pddBvR51T+rI7X9Xtz
1T9U9e9R/S24n+qfVNZqz6iDHUTvU51Pdc0touuLrqejq+ot1DXb6NpZKp8r
vgt9EX+jrj9S54eL/qjyC0THqm9/Ndy3D1VnoNqdovbXFv2s4T68q/LvxQ9T
/Z9U/1TR3mrnFNFLVN5WdV5RnX3Uz81UvqPKL1N5e5VvrXZGq7yp2txVdJjo
WqozR+cuLNS26E6q+4DKm+tor3Mj9XsFlT8teqHKNlTZfP3eS9evK35ztX+3
+PXFb8kziF9P/Bbin9I101V3Z9E2Sa22io6H9V4O0rlOqtNV9GKdW1l1nhfd
X9duo/I9VH6pfrfjWUSb6TnbiH9Zz3WdnqG1+BtEH078TrYVvVz11ha/t8pb
qV6s+7QQXV7XrqLyl/g+an87td9L7R8gflvxe4m/Xtesozo3iT6io7n4FxgL
anNr8TPF/yJ+pOrepvYivaubxd8lfqrauVvtvKHfN+j9jBWf6Bit+jvp2s90
7Tqx+7OBylfU77r4FURXjfy8LVTvf/p9icoPEZ0Ru5/072W1f4/oW2r/CL69
6v6j5y34HuJPE31Pv08Tf5ToFNW/VfWnqn6k36+orZt0TFDZ/TpOV71Y5WNU
doLaayb6lfpR17m3VT6AcS56h37frmOgfue6x7miA0Vv03G8+ET0bd0jp//M
Rx07iD9A9Bf1YZHq/Kl2XtU9NhJ/SMPzhjG5vH6vpHtuKn458SPEbyX+m/CN
+da9VP9Q8QvE/5b4+/Ed91L5h/Rdx1665gjd60eV/6c6v4r/Qfy/4puq/sY6
v7X680Ts8TkvfFe+b0+10yT3eN5KdbrXPSa59y6MZR2rib9IdSbp+hGiPRjv
OlZV+Ve6foiuu11jYD/d91uV/aX7XqnyHcV/qvov6liR9hqeE8wXVa210POu
I16X13bTfwtF/9C1LXWfuTpX6lyTytfSxiGp79tddJoaaKhOd9EtVec11dmG
Z9H17+n6B3XsrHN/MgdFH9K5NXXd96pbqM47Oj9OR0ed+0p1VhHtp/HcWvRX
1TlF/CS1uYmuO1v868wv8SeLf0b8xuIf0/GS+K1oW/1bXe2tIbqm2vhYba4g
+rvKztaxr/o6VL9XVHk79eNwtXO/rm2va48QP0H8GuJHcX++gegj+v2iyjuL
bqffP6t8E9HzVX+qyrdQ+UQdL4jfUvQhzdnHxa8nfkvV+0711xbdnHEovoPo
e7r2efEjVOe5wuv6UNZm8dfXzH+j/l0kfnU9yyLx14k/m/ZS1zlH/Id6h/8T
fzprmdp4UcdljCu185L4bqIr6dxb4h9g/ou/V/Q80d/Vzi3waudQvZc36n7+
H3TuA9FrRBerPNexis6dqLbaq+6r+i47F772Avqp9/qezk/T8bmuuU/l5zNH
VOcVle0kuruOW1nXVX8X8WPEDxf/q/pws/hz1e4hus9rdX+PN3VuXajeZVPx
4xj7ogfr2kp1n1cfXtTvnrwX8dPF9xP/P/FvM9dUf5HKrtCxifjH1c5jpctf
0/nXVL6P6i9R/dfF92HfE3+k2t5DfThev19W+a68a5Ufo7L9dPRgz1P5kSq/
ifuqrS1V9rPKrlLZIapzvmhnvZMtdPRljRHtpOMI8T/q3AuiP4hupLINdezJ
epq7nzPUzr7slyobpDpX6DhI/Dmi7+vcMXwz3fcRvd+dVb+H6GXsH6pzpujb
qtNZ5V+InpZaDjlM9POG+/mO3sET4t8U31V0B73PxTo/VW32DN+0hcpf13WP
6xjFNxB9UseV4l8VfVTHFaxxelfNxbflPaYefzNE26r/K4hfXfz+avNu1W2j
Ng8s/B1XZS0Vv7yuf0n37S++rfgXxX8gurzGwS6iV+loi7zEd1W/t9C1b6jt
91W+nOr0ZP/U+9s29lzaM4yxVmp/tzDGWorvLv5n3rvaP13tvK5rO4n2VfnK
rAVN9K70+1WVbyz6PvO67vH2N/1hHdb1/yCrsN6Kj1XvUvYL1V2o4wbWLtE3
1ZfbxFc6/tXvi1k7eVYd/6k/tzJfxF+n8pVFu6udMaxF4r8tfO0aoot03MS9
RJuyXzP/GLviR4uPdDRPvR8+gxwQuR3W6hsj9yfVcXPkdjId3/H+RdfhPan8
5rr3yycLywinqm/fix8vfj3RI9S3QvwZKv9E/K2691jRbfQe71P5BqrTKvUe
vpq+S6lzV7LeqvxF8S+r/lTRw3XUVH6S2llVZd9EXn+PVb0Wou3VxnIaxxN1
bmXei34PZdyJdlGd5ZgvomMj35fv8YHqX6U6p4iurOtWiv1t7ozcf645Tvf9
Xr97ia6Xeg2/VPXPVVmmozXzrnBfFmXet9i/Ouv5xpX+hp+K9tDxoPiN2R9i
t9lSvzuK30TH4eJfVZ23xb8sehprrsoeVnvf6n5vq80rRRexDosfxRqsut9F
fv7jCrf3AGtj6ec7Se+z0vm/xc/UNbez/7FPqe7nOtedV8q4Ultfqa1TkaV4
pzr21bkzWcNYs8R30flh4k/R0U/XXqPfR4rerndyAvMamVnHyeKvFy10vqHj
Z2RQdBTuJXonOobqXC36u97XTypPkTvVt9aij+q9vaTrrlKdP3VukOpcyHrO
2qr7HaCytqrTUv0+iTWZb6v6TXT8od/HqM614o8S7apnH87apfJVkHeR+9Ap
xP8uvon4pWp/ifiI/qj8CPqj9p/S77/FNxVdW79HiC+RDcSfJ74h/hq1f2Pd
c7KZ+jGYMSx6tcqvZ+7yzOhoyEu67orcY3gFZCx9o3P0805kc2Tn2PNxkvpz
i+hzqvNS6jm1IuMusxz+qvgxkeVz5uMmhffq99TOHehc4tdFxlH9B3T+Pd65
yoerfH2Vj84tN7+r8nHIZTra6PdY1blEdSrRWVyjsldE72CNUvld6BN6hst5
b6qzFvfQ+UdU9rjuda3qP63fc1PPm1VE9yi9tu+mOm/p+eZH/v1A5u/7hOpk
hb8p3/ZF1dlBdU5BJ9Y1h6t8qconqt5Zqn8r4yPzu53EHsYeikyuOmPE90Ve
Ff9k5u8yBVle7R+o8sUqf0S/z1H5HewFyAEq/0nlZxR+B4+r7KeGxyqC7E2F
5fDZai9V32ZF/j1a/CeR68WpdaLumkNXq/yzyOPpY7W7neh3au8LlQ+qWzfu
Xfr8VSqv6ZrnY4/Xm/S7Ulv36rnXQFZgb2ScMp+RzcU/oevvqntdS3XtXPYJ
nktlE+selyfmXnNWUluP1f0dz2cd1DM8JX62yndTH6fULRfuKn5y3eP79dhj
hvWab8y3Pkt0FZW31tFM5c+mYbyzb2SeX/cyJvVcu6t8nu5/W+p143LRP5B/
VD5H5UsZY6wTer5N6tb7VtJxb+a1ZTxyGDKVyhbyXJHn8Mk6X+pb7K3yb1R+
ver0RjYTf4P4QteNV5uf6J3cjnwr+qSOPuL3EL2+sA7VVX28rLBO1lvX3ZVY
H98MXVvPNxPdVXWeFL9m3TrMRYV1rN1Vf33dr4nq9FB/ToqMOXymczeg97KX
qR9rxZYrVtfvkeAcdeuN6BvoHburn0sT60zrif6nOv9G1gmfL/yOh6nuampr
pMqmi06qWxZir/pHdS5CNhD9W9f9FRm7mF/4nU7VtX+o7HcdX6t8b93vMvXp
Rj3X16qzEWuL6vyeWGfdVPT92PISctLV6lgz8buLLhX9Vcdc1Tuw9Hp8s65d
UFh+WBG5LDFGsaXoZNW5QOUN9Crxz6ndp0S/jLyns+ZOCe95mU7b8P5wregk
XX8o/RV9Tkc/8fuJnhpZ/lnKe9a1X0Rex2Pd4zfRG3Xtx+rrCirfQ3Re4W/3
jMrPV9kadWNBYEBgQXvoffzN/qLjZvXtaX27duzLrPe6Xyv2OvH7lp7LO4j+
pTZPU52a6CmR3/+vyExq4+nYevJlda8tR4tfoLKvY8voD6v9pmr3odzXjqh7
nXog9drVEO2mPj2hvn9eeW88v+41q45epnaG6vfXun5P1oSG91be8yH6fXLp
OViob1MSr5m9RS+NLFsepd/bqd0Jav/Tyuvo5XW/3+9y7/OJrt1e/ZAIW+uo
ay8pjGPsja6aGqPYW9dfXRhPOBCZBPm7bv3oHpUfVvdat2/iez6Cnp76WUvR
b3PPR77X97llilTXNSqvJaeL/qDy/VW+OntK4ufdVfTn3GODsfd4aqyGvbt5
YXm2r8oPSsxPzrwHcN+HM+8NvOeulddQ1tLRurZVYbn3GF27kvhB4o8FBxA/
Ss/SVDSvvP8fLtqab686r+g+/+b+ztTZXuce030+A8/T71NVfpzaOTxx/ed1
7u/c7yTStxqpOh3rxoL+yf0dkOfB2ZDnBwUZAlnieJW3FX9GzXLvkYnLwaaO
SHyvlzLLX+fWvY9uo3PqSm0Tnd8g8fraXPdZIzHmCSYzWW21FL+b6JSGxzzr
G/MdLBp8es/UGN4GuvZRjbefVLgae0zhdeJJ1W+h5/mPcY8OhHyuOueK75y6
/V7gHrp2SeT18fjSeBH33Sw1VrSu+jMhsb65fWKcu0/devts1duKucJ6GVuf
XYY/sv/GxohfRSZT2b6indJlW2ptbf3XITEmBl43qjDuSJ2HIq8LYMSPIZ+G
tfrnxGv5/xLjwryrW8Vfp2u71I31sZ5vXfe5E0rjnH2QAwtjWQeJ3yk13tZb
z35pYWxwH3Tk1Lhgp8S4MPjwHg2v/2B6Bd8gNT62TuI1iO9yl9rZJTVut6/4
iZGxxc66pk1pXGUYa3/q73a76pyHbhSw7sf1jL9EXuM2THxfsNYrC2O3+6kP
PVLjf3107QsN34s+v6Rj9bBXXlsYPzy44X0HjBERZqCu3Uy0n66dkft7raQB
+EziudxLdNXS+Ptq6CWl5demojNV7w7wIfGfoA8yX3WfL5C/xRc8X2k5uxEw
B8bRa+DkOh4C5xVNS8vcmejiwjaAJYWxvn9Vf67oL4Wx/l9FP1T77+i+f6v+
s+Jz3Ws/lT8Hnij+APETxX+kOnWepTLOtSvvQNe8o3bOEH2qMvbUg++v32+q
fIhoRx2vif9AdDL2D2Rh1ZmFnUZt/lV6nvDBWpeeP8yjVqVl0d/ZW0tjgPfp
GReIXlJZ1rxa72BE5X33p9Ly83mq/0hhWZe94tHC8i37LfsvcvJf4ncsvTez
d/yN/q7f16v9D0VHVdZvH1XdSyvrxv8iLwW5Kha9sLLMtETlE0vr2otKj788
fF/sI4y1oYXx1R/Efy76RGWckcXpAdUbz15eGhdFh+4VdN6f2ENLY6Ho8XuV
xkhjtX9maSx3scq/EH068T6yl+hjavdj0Uj0ZR3r6zsO5LuwxiLrprZ3HF03
zjab/TkytrYaY1THl9i4SpddLrqbrn1Jdb5RW9ektnntoHrbRd6nDwx7CXtK
f9W5t7CMvxiZPze29qv48YX1+x/Er1Maw7usNN7Wv+7r7y8sM/+mOvcV1sG5
FtzuxLpl6G0jr/Ws8+/nXjO/VJ3PsetFbndqYt3hANFHE2ONPUWf0LEXa77o
ENU7o+79+KnEMsCeiQ949JDJifXmfZBdCuv9yB5DS+syn+R+Z4Prlss3KI0f
XCG6dcASeqm8BzikfvcUPU/0DfXzrppxUdZV1tfrUj/fiXqHG5ZucxR7S+zx
Caawa5AHxqvOl2qrp/g22BMS2zrRPWbnfl7e4cTC8hgyxlZq6z3ddwbrRmEZ
CJkHmxfvoh7kl4E69mAPSK1fgEvsEfQIdIznE+/7+yee02CD56Ovo5vo2o8b
Hmvw2Es+TK1DnaY6LxfGPMG6OxXGPs9uGC//rG7MHFsJ+NuZzFXwffbH1LaB
qcgq6v9Ome2P66fGoNLIv58urAPS5gXiX65Zn/0gtZ3ruMR6HBjUxTXjYM/U
jRecqnOja8Zapwe947XM8+k28Wdh8yqM5YK3f5K6/0NUZ9PC+O45Kp+n9ufo
eEj1ukfGcsEmWEfB588QfTwy7lDo6KJrXlH5mWF+J5FldPbSlSPvScibrSLv
qStUtv3uV3kvah15r8IW2TLyfnmF2upQ877M+Fol8h7G3kndcaJXqH4blV+u
uhcXvg+yLjbZbsj+lXFt8O2dxG8t/lXeQ1jP/qlbl8NuhP1os8pyDrrhx8zT
zNeupba+TI15n6GyxXr+WeKvE91M1z4n/nS12V3Xz8B2Jdo+9r4Axrc7mFBk
7G9UwP2mZ7b/bqt2+4huXrj9c9EvC2Ps2Ef2yr0ffa/6b6v8HdZS0aPV5jTW
Ch2blba59C6874GxX5R5P2SOjhB9V+ems1aIDte18+r+/bWO95GhVG9aYbvN
pqwBpbGF89WHI2Lvg/vp+FT9H08/RZvp3E0125WaN2x7wr7Tj3p1v9M5qveU
6IXYkdizkcEK224+QNYSnVnYNneY6FzkNvqc2P7zSd02oJX1e0bdtrT5qXGO
Acg/pXGP8xrGsbFHI09PKoyx8D6fKGwvPqVh7Bwb9DL8PDWmMljvZ83CeAy4
98upMZhT0eVSz4vTxW9UeE6BgT9TGJNhvnQo3A7tvwB2Kv4w1pjEOC0YzrzU
NvGTVHa8jmHi38iM5YHpDW4Y72MeT9P5/ol58DdwbDAfrmmI3lu3/rBhYezn
9Ibxcfr/AnpE4jaxU7yjYwhyXWL8H7wRfWat0jbqD3Xtthp/d7JOoFeWxkOG
q+1Dde16qnuIzh2V2p/lMNazhv1WkCFvUL3d67ZVPaR7bM8YSGyf2q1uP5Y7
imB7Yt9Ofe3hjNPCPjBHqHxaw+0je++n8TZZfVhXx9jCvjSHMy/Ut3djy43I
Bay1j+cea9+H8TZS935WtIPKG4nlkx91rkosZyJzLKlbPpmCHIBcqLZmiw4u
fO5U0a9DO7R3RGr/nUNVr3dqPeUg8WPQG+v2vbm5sE/NxerbVpFtf7up3nmp
/TSOVf3bC9sN2eu3jCwTsF8uaFgm4T08lnhP3AU9WP2dFPk7HRzknE117KJn
exY8R22endpv5xgwk4bvxbua03A573yLyDIK8skstfNBbH+IfcG5+I669r7E
NrXtRN9p+HnBB7CFM/9aqU67yHodOt1bDY+NA0Qf1DVd2evAOQrbMGfyTtTP
49Dvcut+6BTdRLs1vBaie54QeS1mHf6Oe4texTjKvUatpvt+oja/EX+C6Or6
/SjzAByksA39JM4nXtsvF23bsF2b9eQ73b+Xjl3xk9BxYVj7FiTesy4TXa3h
NY116cfENpZrRcvE6yNrI3bJ+eKP5/mQXdgPRX9Rnc/F30yfG17bV9IYGFFY
796V9SeyLoffEnocGBfXb9TwWrepxt6cwvYd9iZ8kpAFZrGXqN0nxQ9HblK7
XzCnVOdL/X5Y5RcgJ6q9z+v2jVi/4fq8ky6qv1Tl15aWnX4Rf43owsS2rStE
N2x4fR6g+l8V9s1gH/9e/dwj9jU7omfxzJW/A3oNcsmXhf0i2Pt+DO+Z+32v
dqfp/Gh08cI+D7T/kY7Z4o8qPJ4YVxeLzk+8h14sulBtvMX7Ub3Zhf0rhiCX
5Zb9fsqsu81R+WjRdg37GGyE3lDYb+TooMfRxlWii8JeyTV/Zsb8wOseTa1z
3SU6ITU2Ccb1b+w5zPxlHncOPHOMOYW9Hz2B+YQtHnmXeYytHztgl8gy7mqV
bRSDK+sE20TWc1gLmKf4KLC2rRF57Vu1sm3kVNHmlX1qDqq8VrJm4n/AXGXO
tsyN1YLZ7qfykzLr6djvmlb2Xzuw8vq0euRruiSes/gfsu52iNwu6/SakX2h
WKfbR57/rPX0C78K9JitI+sVx2deo/AxWKWyfWBQZYwcbAVc5ffCMv64ylgL
5eDnYAPI5MjmYB9gIN/UbEu6LDK+ubSwfDe6MvYJBgpGPDLwYHDYsW+JbDtj
Thwm/qEwnhhXf6j90/QtXgxrJhjnJpFtOexXHaP/X7Og+CyyNm8eWfdYQ+Nm
bfE3Ft7P2Nfwg5yv9jvxHXProJtF1g97Bh0Nu0in3Pc8DrtobN8OrnkqYD5N
a8ZZwFvwNekW1kZ8tpApdowsTyC/7BR5Xy8r2w+PAavIrdO1KGzHfFHlR1f2
AcIX6C3RPcBgde2FmfW1brF/jwgy4bepba7YXo9qWF5Ebvw+tb7VLbKOND+3
vgkujb8RfkefZbYhzgTDFZ2ic9fWLIPhg7F75H48W7g+MiQ6086R9Y0FuXXK
9pV9K/ZQ+Q36PSixnoXfCLazx0TPqOy7dFDkNXr33HLocPVhZOa5vzS1foq8
0Jc1k/6J76OyAZn1bOzUS9iLYp/bROfWYyzp/PGx9ym+9zbqQ8ea/XEHqWxg
7HonxfZ35R4baWz0Fn2zsE0A/hr2L7XVR/z+ubEj/MveKez3dHD0/75WUPxd
Nqzsj3a26LmxfVF4tpaV/XQO5puq/KzYba0LlsVcr6yvord+kdpnC1+dT1Pr
Zuho+LjgB4ZMjk8Pegv6BbZ58PS+NeP6+C0PjYw3Yg/BtsG5EYFnrQQ/ZU6D
PT+beP5hH7iktC9x/0DxLUY2wgaFLerTmn1F8RkFR147djm4M3ghmDbY9rqx
64DtYn8+LbLNflqQgZGFd2hYNhgedIWjIu9bHSv70J1bGdNHtgWzfzPI3sjg
7wR5G7l7TGY/F/xDfwRbiOxPsmPDe9bWlX1y6AN2hI0T203wHd0OPV98L8Z+
bFkKOerYxLr5+6n1MHzgGPf4gX6kY4OgT6NX4yvwTG4/jRGpy+aGcmxN2Jwu
rZnOD/zccC36OP6R+Emil16rdiYztrGl5u7bENGLEsu2+FbiM4e8tn/Dch99
bh36hq8q/m2UzQzlnSr7J55X2V8Tv82Parb5Y/sHX2gTm8cH4OrQh8G5/ZXw
eTpLv1vF5rFhg9GD1c9R+aWZZZ4WmXXBvpHlFXyJWc+xg6Cj3BzWdnyXbors
v3RTKOcbNymt6zxY2a/4+sg2I3yxropso/mvsP3q/sr+GNdFlvWxeVIfPw18
Hq6MbPvBX5p7Yet5NrMNZ7Le4Ywgv31VMy7dTHQq/gmRn6tes31yaHhGMGrG
9rMN+58Pj4z/YxfCPoQvyAVBfsO3Fb/0CyLrYGNDHe6N/8PoyDZFfCV4LnxR
wNSPr9mGNjNgPmA/V2SW69bL7H+7legw0W1y4wSXcB99k3cDbrBYvw9HD8kt
2x7JvXT9b8hxsc8ND/Invp6b63meF78Ve35mfWulzPJd/8jyN/L48ZFl6+bh
vWG/ANvnu2F/wxaAjo6dDd8r8C/kXWTYoyPLsWkoB1PevLLv7fmV5cdjI+tm
W1T2Ix4q+kXmcmTInVnPI8uUAxNjV/hYrlXZF6Z/ZQysR2TdHj+4O8Q3qRs/
AEdgjcDXgnL09PEN2/Sx7YO3gbvhm3Vf4FmnTg34bbea9XX0dnxoxgeeNeiV
zHbA51PvU8Ro9BffrDRW93BlP+q7I8vc4GvgbPi1YJu7N7J+0bI0hvRGZT8F
yrF/zWS8R/aTRH/gvYI1vh/amVGzX+V9kbGqVUqvq6yv2HfeF99D/Cmx+9YJ
eaK0Pr6maH+VPx3KkWUmBnkGO9WD4VuvXlpmQHbg+z8R5g7f6LHI/tL05fHQ
n9mRfQuwc2xd2P8ZP+j2pb8hGBvz7KEw1x6ObPPC9gX/idq7urL/AH1ALxsR
5C18908KeMKmunbv1Hr6CcjtOnohw6mfQ1Tn+fDt5mXWYTdV+eCw73MtfWDO
M9fxJcKHCB//jxpu53z2/Ni6Oe8HXwmeqz/7h8qnhna2V70PxW8nenqQUXeo
WV59IfAjwzx9RPyWoZx7HBTblkE/l+i+R6lsGPYmlb/CGhLkEPxX/wNzSl3n
wdx2LHC8TbDFxK5D/WFB9hgr/iLxb/NdmTOZ8cZtc2OMYP5gg4fHxiS5dh99
g3eR41UeZea3U/2hQY+jnb6xbW203zPoYtQ7N+CKlG9c2d//nMr+l/hh4pu/
leq8HN4JhmZ8tfBD3E3l08P7YSwxvvGBw38UP8pNM/sCfRA5tqiNfs9lnocx
yZrOmN0ntz/YFol9w/gu7Wv2CeFabM/9YuuePAs+Yx9H/+/bBG2T26fl88g+
CitXjp0aKHpM4fuOLL32Tgt9xsfs08i60OaJ70lsyG+Z7TD4WPaofC/iNf7K
7NOI3yNjanYYVx9FlleRW//I3B98IPGFxc/oK/E7lbZFDNB4ObT0/pyJH6w6
V9fss31aYhmWOIj7wAjU7u6sNzoWiN8V+2xuXHy93P5R2Nw/qdnPiiA49kV8
wYghYv/LVG92zT459+j6r1W/Z2nfpUh1vqvZ53lO5L7tXNqmcWbDsRMviF9H
bfwYOfaAuIMktzyCjxZlnGPNOkf9v6NmH278iuk/z4a/7rzIbRK/Ao9f9Eq5
bTv41eMzTN+G12zDx5aPHxfxUPQTv4t9SuvQ2NmxmWM7n1+zf9afkX20iNmB
r3L7c1EH2/pyuf0Cls/tZ83+wv4Hxt8zslwOvsxehC8mtnX2irXB83UN7qbr
J/bhwrdD/5bFEP0TuU18PSifW/P4ZRyzNs0KPGMrzx2n+KvaScK7v6qwvXdx
eIeUgyssxD6c25+tGThq7ufguYhX+i1yn3jGf8J7oC7vjecsKvvGHlXZl/uH
yDYw/Jy/jfxd+5S20eEz1ibMI8Yvvsb4ReEThY8gc+GJ0n7Ly8f2H9qv9PlJ
2HhL64742uH3zbfkO+6v8hNEf8ntd1zGnj/EkzHeiCnDfs698F0j7gzf+oMT
+0+uGHufxscen17a2kvPcxW+g00cg9kitj3g4NJzMVUfTkyM8xMXgA0QWyDj
jbEHzzxELm4V5GTGHX3GXx2/xDVjzy/GPe8pyr2/M9+Ya4xrxjfrIzZAbIHI
Je1y46Lgo50alv/xOe9XGgv/Tn3ftGG5CTytZ+VvsQ7zLrf/eV105TAvmB/f
hHsxj5D32wT5Hx9S7stcbRfb1gXu+XPoJ3IIfkY8C75Ga6f2AeiW1ZYNXurj
Ex+FZ+yg88tVjtfsXdkGiC2QPf5Y9X+N2DZT4hQpxz6IHok+iY6J7ogOiY6J
vRrdCnzh1ty+AGNy7/8fx95/f1Bbd4u/X/Tk3O+eeI55QW9Cfzottxx6Rm7/
e2Q94j/OCOUbiD85sX42Idga7omtC2GjGBd0NDB8dK0ONcdM3BJbLz0+tz/5
PaljK0fF9ulhzwInI04R32T2G+YGPozsGb1DnfZh37gnt1/oRuIPy+3DSMzf
/YljfLqKdk4cQ3pv7v2ENtlH8Z28MjaG+H6Qk5GXWyWOwQQbgm8JpsC41Lf5
Wv09obLsgMyBDIC8g7yIzAP2AQbybWbbPz4A65few5F12Mfp7yXheS8LfhTE
KYOpgZN9nVnGQSbrVrN8dFq4Fhnt1FB+RfBVWFd0VmJb5BD2AZ2/PbYfPH75
6NYnN/zubwvvn72aPRsfVHyw+TbHJI7dRQ/es2HfEXxIiHF+IfQBXA85bnAY
S80ZA8zxmm01J4Zv/UVo/8ia/T9vFH9czf7RXcI6Bga1cezYs49y45D4lrDO
UQdfjS1z+6IQk41chdwUg9Xoht35dg3LWTvGxrspQ/9BbgaHBo/GZwV9iHLw
ceJUKAejZk5sHJ4F3WXT2N9ji9z+DyenfnZkUN7Frrnj107CH6F0zNo7ucf4
BuHZKQPzBDNdsXLM9P6Vvy3lyNb4unQK3xGZCLkQfL5bbrt0lhm37xFbXuqb
20/n6NzrFnsJct4y/SmMPWKM8MFHN8ZnmdgWYgPmluZvKS1zMY+WhLZokzgX
fFSu03FQzVggmOAaNdvKt4+9toLrdI2N7ayv51mADiHaS+3sEPu79Cosd8+v
bMOi/zwLdg3qIEMuDvflmU4pjbsS+7lvsNFjqwdDBUsllo2YNngwVeL+twn7
DvsPPPoSflH4rCzMvNah84BVgtENiG2XJDYX+w7xnFvntvtjR9sp9I3x0yWz
jXQjcMnc6xiYUufMdjqwhWv0u1XdfhF/1K3/o/uzrrcLa/tmhfHIJyv7PxCH
iy3np9RYMDjmvQ37pSwvemZmfwPe6duZn3Oh+M8zxzmcJdq18Bx/X8/yb2a7
P+vR3fp9I3KW2umsOnNUNgk/xIbjCI7S+Y6FsdDtRbcojJs+rTobNIx5YFuM
c+MN+OrskFnexD9nTWycNduFmUPdwzxCx2AMrgG20LD9AdvWPQ3vmci64xre
M7dS+SV1+yz1q9mOgT0Du8bdDcvqW6rOt8yP2HY3hCxiwdgfT8+9Z4GzrZMZ
KwF7uTKzz832fB+dr0e2ybHXsueuo2t/qxuXAZPZJcwp5tpZuf0Sz0Sez2xH
B5dbXf25p2Zb52WZ7efsdwvqxuzAgxbWjcOCwTL3WfewU9/fsByO7tAyc6zx
36lxbGKusRNcE2yRW5SeX9hlscmylq6g4+LYut3IMPfRvS4Kc4e1Aj0K/Ord
wFPn2mDr7Fx6vtIucwm9E/0WHfPCcC/m8oSGvx1xh+D8zBHsMVPC3GE9BLvl
2cBIsQMMCnU+aXhtxF9sQCjHRkAwCP4zF2R+1jPD8y5bR2PLVSNC3+gDuP45
oQ56MPow+P/ZoRzMf9vCtpopGqvNMvvEYO/YrrCt5heVz6rbxoBdoXlmXzTs
X8PEvy3+X/GzE4/PYYmxvV9j6/YrhzmCTXlm3bYW7CwrNDyn8M9pUTkXxQGV
Mf7VIuP8r4c+826bJe439xsd7LOdAmaA/Qnb095qq64+/VHZHkX5XTXjDUPD
98WvgrbBdMAYwCmQMcAowSN/zGzTZa0iPpe4ajACZINZDWNp8yr7hW4Ryh9s
eB4RW/lEbnt+qXb+Sd1f3hO+IfiIgKF/XlqO66jrHgjlrIn4yaLPoMuAp4Cr
gOF/Wfo67AO8A94F3x69h/rMw0MS56/on9tnBd8V5gWyQ/Mw5vEPZj4+WHqf
Yb9hPD2S2/5MHhjmB/WRNx4N5ZxHXmsV5LR5Otki8X43MXccwcG55TjqINet
njgXAHkAkB8WhvdPbodNdZ99KvuF4lPLc07KHU99pn4PKrwmzC/tX4Psy/u6
J/CcQwbLE8th7Pk/BXkAjOrn8E0PDOXIBV8kXmOHJpbZufeyODHkscTvBFly
1dCfoaH+qblzyyys2Z/5Rx3tE8v25ATAvxCfd2wp2FSI5Xku93M/C4YfxgPj
gvwv5IEBs1hY+jt3b/iArypfw7VTcs/ZX8L4vzi37EAsbZZariRWdUlive1G
0Z8S6ys3JY7PQ89Ex8SvH7+QL2v2DYHH95q8IOjb6Nro3PDzxKPIg7nwzPgq
4rOIPz06K20S90fsFHXAZIgVfSO27oqMh+yF3IXvF2v2iaXjMIjHQE/YKrHN
iLw9lH0ayj8NdYjXYG4xx5AJ8SMmNhLMF1lxdph3m8cuR35F1uO+yJZLQp/B
ktCt0bGxxdwfO6aauUoM2guxdfy4Ydl5T73/F0rHmJ+oskvDO+fdE482OXYc
4L2J8ydsje1C9Z+NjSFwnnrErBG7NiXUxx5EH9DxwfzA/tCjiEWmD8QjX567
D8Qj00f6+mLNuUjQB9EXiQWfEMpZM1g7WBeQSYkPRS4dlts3ln15rcRxIuRm
mVLapo9t/7nS/onERRGXRn/AIc/L7SeFbNYntj0bWzZ2aGzQF5S2N7NvDC8t
D+wVG99nb8Q/BywSX529Y/sid6mcb+mCyj7hzEn83vFdQNfBZ549F39TdA9s
SOy9+OFgX+f+X2b2r+oV2kSW7BfWE7AF7oWMhC8X+/zPmffZ/WPLqODmYNvg
8egiB4T9d3Fsn3Nke8bPQWHc4kuLTIk8iZ8S8hJ2KWRMyvEt2zG3jEYumTtz
11k16E1HxfYRQn44Jvbz4CfBHrUks28B+zA+t4fGxrtZry4svV+AnyNDgUEj
e3TP/fw75B7vm4e5gF2B50JXIn6BOYM+1a5yrO0plXFz3ivYOfvpkbHvjf/G
YbH3yw0q7+F/VtZLjo2tm0D5jd/CcanlFHKWgGlzjrxDrK8HhrUXux7P/nCY
p/gU0j/WsMPCOsbafGh4XvTuQ2KPA873DXXwmUDeWSDaqnJ+lN8r+17wPfFL
RA79IYw9xsWPYWwwHilHRsW/7Pvw7fYMPHIhfaSv7PfETaI/M/c+Kk3jsM+S
x4fvsXdonzHO2GMv+zKM9+/CmGcMLwrfa2lon/fAPfiNLISvD+/y7NLy0dJQ
Z1nOjcS+w62DfIsPNnawxWF8YlfgPowxxgb3QgYibxv7IBhR7zBnweuJw0XP
f7Y0NsAzEvOThPucEDA59NwXasZq/omN1/zTcCzFg4VlMWQybFro46wL+F4y
b/YNfRvVMB5MHPx5pccJtjz60if0hxxxtA9GNC7gRZ0DvvRX7NxfYMJ/xM55
NT1gX2Bgn6mtLHF+DOQZ6iCfgKmArYC7jAnvENljbigHlyEuBN2bdfy6wPNs
d+fG4MmzhW8CfQCXmVW67pLc8eP4pxDbSz4fcmH9XDpuEeyQXGrEIhJfQ340
8tcRY/Jnwzmy8PfCJxe8m7xs4N/kuwMvIdbnG/Dr1Hkk3texbmZfTeLf8Ycj
vod8d8ScEDtLDDs+hIDg36reu4lzoC3CRyuxnxX5JvAtHyT6R25f8aMbzoWF
Tk3OEPwesWVjLyV/wpPYZ0Sn4wOW2ddxbuW4+ralcw6gRxJLTW6LEeKHiPZN
nHutpa6fU9k2vLNo1LBP+AkN51Ygx8JNOjdD5zbMHAdBLiH82sglNyHgpeCm
/YIPJ76cJwa/XPxzhwX9YuPMcSbo9ZNz59tBNyH/U9nEuSEY80MCXkf+JvIO
oXeQp4q4AvQPcgB9r3pt9fu70jmC0D2JIQBjYb4SD7Fz4vwnifo5Tf0elzqv
yHuVsYN2uvZN8eMT+yp/gD9i5rwu7+qYkTg3wjUN5zAhLo9cQPgU4m/7tuqM
Sh2j9I6Osanjmt/ScUbqGMlKzzUqt3yCLZi9jfyIzDvm/Dmlc71hW7ousz2y
fc04LnkKFgWeXG/Ylq7NnK8Q+a9Uu6s0rNMOLo0RdQs8uSax/VyTORcBsiG5
DYntZY/kW/9dGRcmVoY4GfYN+Lm559tMtTMtt356aen3wLu8uHIsP7YR8jls
GDBcbLC3JbY1YUtCFx4YrkWnRse+unQeNvAT4hD/qYxH/1ra/xbsddXc9s3W
oiMr5xzB92siNvzU2Mj1mXML4pNxS+Z8Aozzh1PndblG5Q9lzgODfHVZ7vlK
jOTyqXOL4DdzY+acg8R9/A8dOnHuC3JgkJ+FPC1PZ87rQk7CK3PPV/IkkMOE
/CbkObkhs58wvnH3Z16jWddYs8l9hNxNPhZyu+DH81zmvC3I+q9mzukB/nx/
7rWBWA7mJrmb8AkiTwz21rGqM7503sZlvlCZ8yDhn/JZ6tws+KDcltmuemds
G8VumXM+kPsh05i8PXF+v0T8OblzVmDIY03oD8aTGIcnv+PYoIMeHMbK4bnH
DnknxrEHiM4pjcu3BltDFk8csz8Be0DiePkHKr9fYt7vwYcsc8w+2Ah4x4Fq
64Dc+jG5FPqFcfgYMkvufJDHoSNXxgGbl5ZtwGSJJyDWFXka7JR8OLzDI1X2
VtB90a95F7yTAcjLamej1Lob13AtuYXIYcV3I1nCa6wFmWPEkGfYO5EByPGE
jW0FbIyVY6Q/bTjnD/d6F1o5BuPrhvNzLcuvpfIxlWM/yA9Lvib2dPJlkdsL
u2BVGn/Af5TcEuCE2JjI+UTOL3zpDhO/emGbMXHTG4T3z3cAM8S3iJxY5OfC
x4hYbOJesU8MKp1HCD8mcnPdWDk+f2np2FVsNgNEf8uNS/RrOMcXmPJLpfOC
4Re1XOncRPgePlU4jxD7+fTSMURgzfgHkXcIXz9yZSF7I9vtJDq88rjEr/Ki
yv4K5G8Be0SHeip3HDE4MzrUb6rTNbOP2VIdaeaYtdMCFg0m/bPKB6SO00S/
Jq/BBbnH+1PiL8w93vFfPDf32vxqmNfYptEf0SNX0Le/L7UfcvMmHkPkESXn
yVTVf7q0XZI4DuI5UtU5P3fuEfQ19jL2NPR6chAM17mV9PulxO+TtYM1hHrN
mni+4YfZtInnG/lClxd/Y26fUnTVkeIb4T7gEUNz5xObJv6V0uOVcYs9K6ss
PyBHTA/f5Z/S8bFgppvo/FmVsb+k8n2mq85NufFk8Jrnc+/v4Cix2h6iei+r
/h+l9Q50AfTKQch/4k9h7qr8DdbH0vlnvqk55zA+WOSxxSeLtZExj8xHnpbx
+t1C7f9beZ6TRwsZ78/Y68uulWUSZJODg5zItVdW3m/IiXqV+DsT51u4vHKf
yElF7qRbgkyJLMr62rKJxxHYOBj5ANWbyP5R2rcf2R0fLuys6Pzsv8TuESeI
Pz0xgPjik0OLfDTgMh9mzr0zMHKuA9YVcBpyz5D3b0hkH2Ti6bBFk5+D/Bjk
yiAnMT6g2K7J1UGeCvygyWtIDr1bwSAr54VbZlvJbWfB1/e63LmJ3gvfjpg+
8uVOS52fE99Acq6Szwg86L3M+XNIUI3vNrkR8SFgjmDjAJdcN7cPQHvW+8qx
QmDu+E+Rpw4bDnlTyb2IPzdjG/+Hi2qOOyRHB3liwQrJnYK/KvlXyCmKLLdc
5jyl2K8SdNvE+Vjw6WfO4ZNBTjhiXoiJIZcM/u34ru9YOHcocmPTzLkTr4js
t04cNPHRxB6QY/DayPklyINKLMFWueNuiIUhDw25dMirQ44rYv3A28jFghxH
7A8xQORaPCNyPgfkR/Qw7PLk8+lXc34X8tscXXPOGGJeetYcv07cPbHnt6SO
K8e+Q54z5ErWTHzCieUnpoK8ZeQguiRyfgxyvJBDhhhg4uOIrSNHOHFwYBvk
lyVGgBgH4pyIk0L27po73g2bDnlk8YHHDkMsF7Fd2OPINUuMG/L5Zpnj2rD9
kX+X2DHk27G547CwJWFTIm4LvZx8t8RCIsu/Ujnml1jdJpn1A7Bw7ITk1SH3
Djl4yGEyIbLPKXoStkJshsSv4VvcLnN8NNgM8X8rBnsTdif8eF+tOT6beGHk
/DUyx9YRi0pecOKCsTeRx5dcRsSTk6sbWZ7cINtkXnevrltfIg8SuY+IAycu
lZifjXPHnxLvdG7quE7ir05PHetK7BN5Usl7eVbk+APisNavOSaSuKr1ao59
JB6HGB1if4kjJlbn49RxssRWnZVa5yA+gPzTb+ia/ZFxK/vY4wNP/B/5eYh7
IOc3+Z3wCyBPEjlkyEtD3nHizYkNxJ+bHDLEw/dNHYtKfNeGufN5nhk5Fwp5
YMC9D0+dx4Y4fPI0k7tmWR6bzHmfhiITV87RhA7bMXeeYezJ2FvJhUv7xLmC
h5MnnTwh5DQntznPQy5Z8GDkCnyuyOF4QOm8uLxb4nfJx8s7Id6X2CiwPPwI
JgbdDR2OnK5gG+gIvKtuqv9LaVsDtopvxa/SxHYI9EFsLuSVJm8Mfj74/BBX
ga2HuM3ZpfOC4Y/I/kO+D2JsyZkLfvJv0H3AE0g2RO4UbMdP15175JDKOdzZ
L97LHRv7e2kMitzlH5e2E5G3mvwnfRLn7CK/JT6W5IJEfmOPRhc5rHIOROqw
tx6YOL8HsYfsfci8fSvnCqScvZW/C8C4JcYan2FkJ2Qo8pvhv0cOefLL4f+F
rfzryv6+yOf4BoPf4XuDjy7YIvlu8TnGRxCdlFyd6BSTC+fGZD85rnJOSMbz
pGArx0+RnAT4uZGT/ZDSdiDsQdjasfXjT09uiQWVfW2RPY4JGCs2WWz02IL+
K+1zhg8HeiI+AOTEIy/Nf5X9kJBhiPNC9tgzd7wVdiP8gtHFyZ1CvlJytpC/
hVyk5CkixpKcheRzBg8jJpuc5/g6kQ8SnBacETyY3K/g9Ni+l2viWBrkK/I8
MAb+TJ07BR8c8haSB4D38FvqfDXgP2NS59Dg2X9JnZsF7OiG1DkK8GfAr4H8
Ifg84PtwdeI4I+z1xHkR90d+LOK+waMuTZ3vhdjCi1PHLBAzR64R8AbiuMnx
TD4B/B/wg8BeQK7V50vbhdkHyVuM7Zj9l/ziR1Teg9H7xjBma5Ytb0kcv0ye
wCODXAcuhKw2LshuhwaZEJyqX+Vc/OBX2HOxT5I34tjKuf7BnU6unJOa+bJm
4lxeyOT8jYBRQRa8gTlXs3xeNLEtB3k7amKfPPRf4lbAc/GvWSn4iiDHXp84
/wZrft7E9h5wP+y/+BYRg04uyHY158bHDoQ9iPVu3Yb1DtaHehP7jTEmOzQs
D7PO8PcsyFF2a2GfMHBKZEvioF+pOd/JHZVzCYElTi/sS0PuqTcK+zyQJ4pY
OfIegmPgn71W5DlMu7SPLsl+OSHIluQo7hDb95O8ycQPMNfIRc8e/aHonZXz
7PzdsDxJbNHPhXPXs5/OKuxPW8XGWPj7Eej4b5fOo85+NFp1ZhTOp0GOrKmF
7aIYirEdo4u30ru5rbBMgmxC/MtdkfVxcm+Sj+W3wn/zAtzgjdL5vXkPvA9y
YRO7m7DOFM51gI6MvYnxT7zduMLx1ejILxbOM1MPuMLgyHjLK4V9HsjNhW0X
faVNE+cPp/88B7m68BXAhkLcFjmvwV7I946tj7yh/K0QMKtJDfu45rGxJ+Ju
bo+s44MB3BPkZ2zb2LHJPfVheP/ISuRU553wbsibie2Q/Y6/Y/Kt2t+29N8H
WVQztofMiuwKroUvbtvYebGITRsFnib+oNI2BuYv+ZCRYb4uresMiowZDgg6
OzYyfH1Xiy27d8ntKwCusnti21Pn3LjL5ZHxMXwItw7l/I0MgmjIxY0dCj9Z
4nHBWsFrW+vdPlB4XWV9RQZCFgJ/I96GWHL0O2wP4PSMQ2z06PErNzEOdHpk
PJn4SjCqjyrrRehHYHHELo2PnCeNWO+LwlgiTzu+K68V9k1vGxmTxwd4bfSW
ynODOYL+QvwCcYngPMR1nh1Zj+LvrbDvs/8Th36xyv8onHudHKS8c+IH/xcZ
3+gYxh5j8JrKuTCQPfDxwzeH+GbGFmOMfDzojU8HuycxSo8FrJ6ct9j9u6ns
ttK2K+QE9i32L3xiianB3wI/FmIu8LEemNvPn3yv4L34rRFbSd5l3gN7PTni
8KUEvwXHRa9DvwP7xecKf3DylxM/gt8wOELXMK+Z3+QfZt+cUNifp0PNOZbw
6SXug/gO4lbwr8WflhgofAXwxQXzBfvFt5C/GcScZe6CwUwNdkBkCGQJcs3x
t2mY78x7/q4Qe9adhccuY5j8JQdmtl3NyRzfhw2Q+EL+Ng2+meRX3jOspayp
5B9mTDI2yenK+sY6RzzXpNAOfnf4cu9WOv8+saN19PTcvqnkIbkksS8s2BT+
7tjYGFvgTO8E+y8xeuTQB7Mlxy7xKqyx+FvPDFgBejL6MrZs5APkBOwxxL5B
sc+8FsYz+QaJa3s0sj2CHMv4o+KXSu5c8pUxPsmNjF48rXQ8FH5R+MiRL4vc
VuS44m8AgXE9WjpmiRgPsNqeYZ1kvSQWZlFkrIY8wuQTJl8iOZDxrf+pcJ5t
YqzJP0yOXfxFyLVIjrguwa7E3z9aUHPO4f8DA4q+lw==
          "]], 
         Polygon3DBox[CompressedData["
1:eJw1nXf8V+P7x897nF2JJJlNCUmSskcZIbtQKCWkEpmZJdGgjCIiqUTLKCNE
ouwQRSmkrGR9yV6/17PX+f1xHp/7utc573PucV2v63Xdn4Y9B5x4QTkIggOi
IKjq7wlZEFQqQbBVHATr8yDYQ5k1lb9nKQgOCoOgnvIjlce6tla6lq5/1MFf
umoq/afqf6P6O6l+Y6XLavM/yatV/ofusavk7VT2P8lV1b9WcjfJ7ST3VflV
kk+TvLfkPpIHqM5k3et29XGJ+ttX5V8GvudmKttc17eSy6pTR+lfVGed5F9U
Hksuqf6Pkj+S/Jv665sEwWWSe6neWfp99+jvasmbqXyj0kcq7xzJ56ntv0rf
pfcxkt+qvJvU9g7111/PV0d1H1ednfRXWUEz5bVSYnddDZTeqP4ile+sct02
2Fl5rflt6u9PyS/xntR/f9V5QP3fpryLlfebrq+U/lftp6ish+rXU/n1yntA
9895xyr7XVeidGPlzVLZC0pvWyMIWqq9/gR76H776X5dlX+T2m+u/MeU3jH0
vdar/X96sKP0DFuUnB6ldKzy7irP1GYb1W+ldrUkt1adQ1R2pvJuVlkj5bVR
2Sd6vockPyf5Y6W3iP0tWqj+rirvprzakkuSN0+DYMvie1WLMTZe5c0kP6i6
W+rB75E8RmU7KW+UfttKyXdLPlfyCqXb6Rm+CPwOaqj9RbqmqHyS8q5SH3Vj
972jyrtG/j0bVfYJY1Tyh+pjnMpPU94HSj+vZzpKZR+r7F39/qckt5d8seTe
ko9Un3tJ7qznn6v0kyo/VPJAlZ+t8ll6xroqC3gvkmvofr9LHK28J5Tuqfw7
dL9FukYpfbnaHan281S+RuWp2l+i+u+q73PUvqee6X7Gq+SRkjPV+ZWxp/qP
KH2g+uigvl5Q3peqs0jPc5z6u1r99lP9S9W+vcrXqP5eSl+p/KNVvkDyN2q/
h9q3VHkntX9C7a9S+TEqf1Hl36p8mq7rSn7nzIGz1ceOStdT3iW6V6zn7a+2
b6ltL93vXZ5H8mOS+3N/9Xe4+ntC9T9SXwPUfm+1P07yCrX9KfP3Z97eoPon
Zl5P2ivvVpV3Vvttyx5jZ6hOf5W3Vrq72jdjbCReT35VvRvVvpHq7KDyt5S3
Qc9woeq0lXyW6jdXuqnKG0h+U+XfqHx3ybtJPkjyI5IvV50jJa9lzVH6EvV7
mO4/R/KHev6t9ZvHKv0MY1/3G6g6B6r+Puqnr+QzJdeRvL3knpJrq/4tqv+a
+u4u+WnJj0h+X/I7kker/hWqf4rqny+5rf7uy/vR8xytOqeovKbkPyTXUdtE
zzNH6YOUt6/qXqHnOEX9tdEznqeyFyWXJY+TPJ+6qb/fg8p/W/3vzBqhtvWV
V1H6hdBzcazqP6v665R3lPqfo79baf7dpvJ+Kj9A5f1VPlry+ZL3l9xP8gI9
32bqry9rTjHf6yldKtbfUPV/Yq1mDCn9vOrUUtkJ+m2Z+u+hOrczfnXdpPQk
Pe9u6vts9d1VzztObS4oeY6erfIT1e4M9Xe98uYrvZ3ycpX9whqgNttoPExh
+in9vNrP4DvxvtTnhcpLQtcdpvazQs9b5u8DkheFXs/5/W2Vd77Knkk9fhnH
fXKvA6wHU1T/VdWdl3p8ME7OU/ll+n1H6HneUfkJKhug57la/Z2jZ91Cv/cU
/T1Y9a9S+YtKt9Pz76/64wLPt8fV5hqVTVZ6ifo7TnX249sy5pQ+lj1P8jmS
5yl9lK59JJ8p+UmlL1C745XuxXxX3xfreQ6u+J3wbmam/n63qN5b6v9C/T2h
5DnHXt5Z8sElr5d7q7+mkrdiP+Cb6zdeJPlE5rLqt1P5R8p7VHV30HWa0sep
fNeS81ZFnifMl6quLZTuwHxWeqrK3+Z76Z3Mj71nbaXn+1vpcSqfo7IZer5t
9PwzVHe55LWsL/o7TfL2qnM430J5bwR+tleVPlq/7w2V/al7PSt5f7X/QPUb
qs5I9b+l8i9W+mHVeUvpBWo3XuV3Sj6z6vHRg72r7PH0pq4pZa+JrI111N/v
qjtSddeo//0kL1dZA7UZof5XqM5syXV0dWIt1dWw5LyVSj8X+l53SX5e8jd6
3suUfkX9zVR/9TOUF80zyZ9JDnQtVP0f1O7Jonw671t5V6vttqF1gS+U97f6
+17ySPSJos37ukZJXoSOpfShav+X5JpKf537HfIum+h77qJ3/4rkieorU967
rA2q82jR9jGll+rvbMm1dW2v9JGRn4VnWqb0Vuz/xfe5Ss/3XOS14b6S16MF
anNvyfdYLPkVySFrg+SXJO8W+nv30zVG8hHF89Hne8X7Z+wwhi5PPWbuU//P
xh5LOyjvP8mv6v3N0vPerb87sf+r/s9Kv17cj2/+ovo7UP19j36o9DDVv0Ty
oaq/v/r7UvKNavMTv1/XF4X+eoLqryx7z2EcMB6+1vWV0v9WPdY+LLvPfupv
T/W3p/r7XP21UN5r6Kuqv4/St1Q9t5hj7EcrE8/fNqr/s+rvIvk3dEXeleQt
M4//d4rxfrvapMX7+F7p+sp7WfJRav9F7nHEeGK/Zj88SP3VLN7l6yo/Se9r
qcoOVv1fJbdU/lyVl8q2Acbwm5X+GX1A6eaqt1Jd1ih7vLC+nyh5FTqo6q9m
zylbx0DX2Fb3m6ryVOkXmKuq/6D6qqFra6UPyWwL0Me4xOMT3Yw5OEHy62o3
qew25+n+n4ZuS94bKmui559c8tiZzW/X3wkqG6+87qrfQuWz2H9Zp1S+OrZu
UVE/w3OPccb6/WXXof1AlU9jP1B6iK6TVTZI3xDFvTnvXcm/VN42sn2zheRl
2AusF+ovKvkZaD9Y14nYJqr3T7HeXKT6U0sef8fo+d5Uui5rg57n4My2CWNs
rH5/S55R8vF67q+U/k/9/BB4TTsh9vdg7v4kOVR6V2wMxq/67KT77aj+HlfZ
ReiLutevyntV6W7Ku1H3/Dv0/eup3yfU9q6q+5qjPv6n9B8qf13lpyvvJtW/
WnnT+L3KW4WOrrxV7DcqHxF5Ld9R+Q10PR9bX3mPuaNrB6XHKn+52v8t+Uel
L1adqehr2Dw8e2jdJFJ/h6r+28prrfoDWDeZD/q7jcpjlbdX+Qj9vgEV16Fu
M3Q0lT+mvMHoIqrzseTeqj8qcv/vqu73Zes/V6h9R9V9UXnX6v1kqvM+YxPd
Hts28vz4XNdBvG9sMrX9HJ1T6SlqP0LppdgaWn8aq/+F6J5l2wCsB6wv7BF7
8T51rZfcRP01Urqr6rdXuoHK90HfY05IXqZn2l3yZPV/n9JXqs39Gg8PSp4k
ebjkyZLPQOeqWOdrpOf/S202qGye8poq3UV1dg68V9fW8zXIPD9XF/bNHcpf
hu7EfqH0eF0/q3wuY0rpU2OP/TsC67i7VG1r/qErldxN1/CKbeJp2P4q/051
W6q/3dDP9HuGSv5K9f/RPZsxZiTvp/KjVbZ55rnHHNxdz7+r6vxQsg15ufq7
VNeD6FPoSEpvr/qzyt5TB6v+non1/SbYkfo9eypvrspWoktJXqv+nlX9xrrn
qexVqrel6j/Pmq06HypvZtEfe/WSwh7ALvhR7fvofs0l7yb5B8nD1Kad5DYV
61c7SL5VfW/LHiP5MN3/FfW1UflPqX6rxPYGdsd32I8qf03lv6E7Su6Yen5t
ga5U2C+s1TsWv+nw1PO1tsqfRt+Q/AK6i+QncuMBieR3+O7Y7pn1lTeLcuyf
F9HdQ+8ne6n9k6q/WvIcyRdl1j/RQzdK7qf8VhXbWK1j79/YEreqzWlV2zXY
Nyl7luo20rUle4PqHBZ7f/uRtUZ1rok9H7CHv1N5Ofb6+b3k87HpItsB2AOs
T89VvU+yX77AHFP5isI+xU79Kbd+tQZ7sdCnBqrNs+ga6IjsVblt6c9037m5
94/Bqv90yfvFbfq9Qyu2oZrp22yjekOUfkbl65Tuq/JjeT5wqtz6NN8aG5I9
+VjaBJ6bm2k+VVRn85K/Pfb5sZnfBWvAY6p7lOSvy8ZYpkk+LvO7eEny45KH
Su6O/Q2Oo/bXZ95v2Hf+kHyu/p5W8TdppTrXSz5T6dN1HS15HWua6neRfGTs
NZe1t2HVGFAlsi1yNjYlc1VyL6UP0bUf71Ryd7XvXfEe853kzuy/ko/lfrHX
AnQ8dL1vM6/v8wt9C3zrU2wL5c1T3lBdT6s+22UT8DP9xjqB16KohscXtn9X
VegYe3/CfsGOWaffOyT23oPOh+53XbGXcM9PqrZfsHWPVJ+/q++vVWdPyd0q
1nnujW07fyb5Pp5H5WeBHeg6RvI1ul9npY9Q+nfd75HY9ndt9f2o0qXYe8Hx
FY/ns9j/sVd1HS75bbVfw7sCE0s9/qn7q553T9bUzPr3e+h16v8dyWtVfhXr
t9K3YsNhrzInlD5EfS5QWSfldQAzUB+nsP7oail5u8hlG8C0JL+nPsaz/6tt
Se9zCXiK5BnoF7rfW5ltMzC0cejimfFScNOy6m+v/o7it1S8n4F3LEF3iKz/
sd9RBgZycLE/VlR+oPJ/Q/+X/EXFe94kpXdKjD+BQ/1S6CfnSN5JbbqrzQ2h
v0Ut5c+OLffEdpD8jOROubE8sLBcz1df/f2i+pNZZyQ/zJ5SMQbYFgyM71Mx
pjZc6dPV/vSqMajfJHeRfEzo/eV8Pd9obBoGo+SbaZsZeztPWRN1rwcKvGEf
yesS4xkvV4zJgs3emnpvZg99Q+VPKK8l9qPuGev5WqBzow8W+x/7Ienluu5W
eqauuOo9+wL2V/XXDH1X8i3qb5zkpmX3eTNYVmwscoT+pur/Bv19lr1Fea3Z
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
FFgUPscOhb4+urCftknN2VwQez2h/+tS80dbqO1rYJ2J9/qmqv9abD4l3MI+
krtiC+bm5GAPvQJeI/lBydtLXii5W2LdaAfK2d8S731dGE/Ye7n1KPSp1yVP
lHxj6PXnPfSNxGvD4breVrprYl3iSF3vJsY70B3BaOLM/DV8R+cz/5TuU/Ab
wWTAZm5S3oEl23DDlf4tMdfpCnQGdC0wH3wBgfmWf7KHlMxhgR+wg/roEpiL
Bl+qV8FH7FbYw1um3lvhjV2i8vt1Xao+2ynvffW1WPX3LZmjPKLAg+AO4KMP
lT458Vp9QMnv85fE3KvLdH0CvpAYa94OnVX3mi95l5Jtlyno6omxsObYZOCT
unYrGdPbqPrj9DwdsWMDv78zE+tWpzJeWF9VdrPSvQPzxe7LrQehD21Q+WMq
H8naxx6r/Akq7x0af/hK5d/iI1b5MZJXsp+pbLjkXpJfUP21sbHTsYxNtc1T
c+POYr9S229iczOmF/r8N4nvfQD7EVi3rjtKxt+ov2PuvQCu4NuFPTIY3Qp8
QPc7ITH20Kbk8dg58d6DTQDXvGNi7vSW2FisxYn30g6s53BjEmM19VR+E3tJ
bn8Pfh/w5uMSYz1wnhcpb0poPt05rOe6/1h0cOXtGnj8YsNjy+Ov/jI1XxD8
Gs7zScpfoDq7l8zBhu99jq4LA3Pavk7NUXtcv7VnYO4a4w085hA93y/Y9JIH
lfzOv439Pm8omYMI3yVNzWVEB/wSPEV5J6nsct6JysqZ+8aGq4Atx9Yl4Jz/
pbp36nkvVPrYwPy/yXqeIaH5rB/FxtjA2vim/6i/ZeBpJeus+DuWS+5bMsce
/8AdicfKgJLxnylqf09om5Xx/mhk3jH843/RX1JzBxJsrsScJLh4cJrgKtXL
zLWFg7R1Zg5TQ5U/FZjb1Dox1wjOUUOVt5FcLdvnBB/jqcRcXjhI14DfgYcp
faPGyx1K756YS8UeAX7+EDZu6He4Qc/7hMoXBeZowRfbX/KHgXVk8M5Bqbko
ufrcNzEedGPJ7/x5vc+Syi8tub+Pwe/AF0tec+Bj1k/NVwRDZr2Av4s930N5
eyvdMDX3rVIyf+O+xHMPjAesZ7PU/OC7eZ+xMS6wLtbMr9gPcq99cHvha96k
+/dm/Q1sP/ZXf1cExhw66P5bqM2Ykn1Y8HH53vi2rlS7e3J/b3xB10i+V/Iu
+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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt13m8z1Uex/EvLtfvXhmUvQYPW9bIUtmSNc21xdDCPISk8UCZpESlhRZL
4WFJlpR9NFlKyzRll+xbJlNNM2M0CUWWCPP89O2P9+N+36/z/pxzft/v+Z7v
uZX6Dr19SP4kSVZRQdqWSZJuwHeFkuQy0JkvQCPyJUnHrCTJxWYUTpJ92J1y
o7Gisr34RVQPa42NkTsh15828MNzk+RcdpL8RBVzkuQLNY/Sh/ptom4Dtq1A
kjwrW0Xtm+ouYnv4oXRY225+JV5D+/PY+pg3/7n6PsZ9Cqukz0F8Qg/pOw/L
yE+T+yvWQe4RmSNYTXNK6DOZh6mjto9l1hpno/HGm2txuYzMRmwK/3J2Os9N
/Df6HK19gP7qql2g9mdsKjYIuxFbjh2Xraj/J2iY+mV8W33ul6ktW8E8R8sd
pN5qxsiV1daP/6P+PuEfkc/nOj8dppHq7pWpI/96/C46h43GumCb+XZ0GhuF
dcY2xjMy9hBzuBj3AFvM98Qz/LN0B7aX/z1l889QT2w3f4XsAnPdqs+1eBE+
oXFYd3NcEWtG7oj+b1YzlF8sW9HcL8ntk3mQbtX2gVw+/CA/gjph67A8uqDm
cbVdsU/46+TK8/P0e9S936uv4rTcuLtlN2srxnekb9U8pr8y2D1q12f/8oiT
pnLNqChTSu6y2glyu+VK8jnu6XC57TI7qJpcC1qu/U2aLH9eX3lyr6mbGs8c
+4j/irq7fkhdbyqp7n1jtzeXh+W2YFX5e+TWqp2GTZIvgb1t7C7GPYuN1f87
fGG5Idhadeuoiv7uwzapnSE3XW15tY9ie7E98Yzli/C/lZ3Pr6Txcsf1WQFb
wC+MtSp3AquELeEfKJQ+q3hm5bEJ2FwaqfafWK1YB65flZtNTXPTcWK8fXL7
qTp2r3l/jOVTU40G8NXlVmIVYzxqL/c9Ps+ca1Ed/R7W/9/lBuvniP5rmMss
bC7Vct0y9g5tX8vsyaTrM9bpMaw5XyL2Df5/fDH9LZI7T5P5W9Q2M/4F/pDx
W7ku429ZamcuuzLp2o41fjTWB98a38nvivWtrYXahC6rOZ+Tvot9ZLrJFpT5
gXrI7cykazrW9gisrP5eVzcTq459jd2PHcCmYVWxpvoagO3DsvT5Ff8kLTdk
aWxHJu07z9j54r3mO8Yz4idmp3tUAbnfYY/xo+gztc2wWeY6WXs/bBX9J95z
fJH+7zBmK/fqU34gbcY+xGZi18S+TtP1Mzz2e+PexQ+khdgorEL8Fn6o2k/5
+/U/WFs2PyyTzj9+R125P8U+jO/kSxrjodia+XVqoKQ+dj0V8RuOxx5jDv/m
56g9Ed8FuSJyN2Mt4xnLHfJbcuUGaVtK/wiP19H+Ll9Ox22MURobgb1A98nv
1XZjvNf6nhjfCfe2odytNFfN07/OKeZ2m9wD/j6Yne4pecboG/OOPUztLdhq
82uKHVDzPX4j3ljdDdQk3pVCaVtkGmC1+ZvoornUxa7HruVvoAtYHawOdiVf
NdYkVhHLwx43jyfoS/21xpaazxue78PYR3Qi9kNagj3Kr6Fv+M5qp7ueQbu0
NVfbnuaY72kqEPuMth7YQn6m6/3gVrWdsPnYXb/uobGXNnFxm7m9TIPdg1Yy
02WPaH9D+wLqIrMw9u1ojzXt/h+Lb5ZcNayP2oFYqfimybVR207uFSx/Jl2X
sT7v5FvQb+RaYkXV7lO7l9rEPcZysbZ8oxA2Tn1prCvfSm1x7BnsKqwT1hC7
Ijfd22KPm8O/SOWwm/RXWG6H3Paox4aqrel6tXxpc/yv3/AiVl6uB56n9kq5
8djVWE+sE3YV9kGcVYwxH3uNmsXzVj8Mmy7zFJXJTZ9xPOsqMsXjTIA1kvsR
q8eXi28NdjKeuTk0jnfQWJOM2R87KTcWq2yO/fifaTs/MCv9Xn8nV1b908Zb
LlMU/5dMbXyZ9pewSdQp1ry5bNPeKyv9BsW36Kd41+U6YIvM5VwmfW/i/ZnA
14/7mpuuhVgTL/EdYq1jZ2XLYd35BXSGf9fYzxtvHP3NWnuPH652l/77ZqXf
4fgeH6Kh5txPXU19zI7veSY9K8SZ4ZS2Nnx9WmF+B/iN8a2NucTegZ3kD9K1
8f7Fb8Ea6q8y1cNOYY1jf9HfWLkf+T6F0+9GfD/uxfbEdzuTng/jnPh9fFv4
b/G6ck3ibIcdLZy+w/EuN9Z/tbg3xuiQk561LvGH5WpgU9VXwf4Q9wrboO6s
+3Emzsg56Zm5V276/Y7v+AqZeXRNzDk7PT/8We0yao5N0V9l/fXm28e5Ic7P
2elZ4R3sbWoZz0Pff4nvIjWnwdgFbKvr/jRH/mi8QzTF9Wp1q+KMILcpk54t
44x5yBgN+MtqD2Sl34r4ZrwRa8/YbdTeHc+HSqgdg9+u9km1l7BaWAH6XN3I
GFftYnVbMum5L85/X8o14ktl0vPXmtgLKFtdZWwetj7eP8rBMsZYE+8qP1Fb
Dl9Bbpbr9/H3Yt+Os2h2+q2Lb14xKhz/m8iuyEr3odiPdskcoxfk3pKZTVfL
vZpJ12KsyW7YFnN+JZOeW66T7xrnUewH/b2urwbxrurvOewUtjgrXS+xblbx
59Uu0dfMgun/Kxcy6TN6S6ZtzIXujrMa3sAY7fnnZM/E3pxJz//xf0AfbCd2
Wu1SmRbUyBgzY8/IpP+fxP8p/eR2y53Bl2Wl6z7W/xfY/wGxH8Xo
          "]], 
         Polygon3DBox[{{2796, 1978, 1144, 1145, 1979, 2797}, {2818, 1241, 
          1145, 1144, 1506, 2359}, {2193, 1283, 1092, 1093, 1284, 2194}, {
          2041, 2040, 2821, 1293, 1294, 2822}, {2147, 1219, 1462, 2851, 2038, 
          2039}, {2153, 1224, 1459, 2850, 2047, 2048}, {2804, 1193, 1085, 
          1084, 1366, 2249}, {2050, 2049, 2888, 1894, 1895, 2889}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j1I1VEYx/FHu/d6fdcEQRAjUdHCShcdbBJbyiVpySm3HHTN0UnnNLWX
Ncdo8GUVrARxMkstX5LaIzMUgvBzEu7D9/vjPM//nHv+/6tDo/dHCiLihVoq
jEj+BpvJSlFElRyXIt7zK3QNb+AG3sZdvIcDJRF5fYP8AS/jJ9aG5Wqey0eM
8Vpeyid5Oc6mdZzHBlzE6/gOx4sjSpxlU32UF7BYPc1EbMlT+Amn8TM+w22c
wR3M2P+X/l2e5cd81toX+Tef4195izM953vpHnAfX+IBvsJDzJk/MfON9+ci
atKZ1JG8iJfVHefelH/ybr7K23AB6/E1VuIMPnJHdfad4H38u5knvJcf8ay+
x/IhP7b3Q/4D7+I29uA6tuMHbMBVM93e27KZSvktdsmd/kOF3IHleAvL8CaW
pj7z1dzWUcX/pXtO74f/5R4beX7Gr+mjccrbuKuIVsyme0S/aMr8/2SiSOMf
fYVpLw2NBRff2Dm0BkfM
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzzkyhGEUheGjSrWpTUuwD7m5df/YgEjEJmhDgEARiayAyKwNiQUI5Ijb
HEg8f/DWPefcob5vZHGlWO5IUkOrK2n3JO84605e1MPO5JRu4hzbfcmYemv2
uDc5QaWajMvuZFX9Bib4Vfv9dIElc5OyC4zyz/jQX8OU7BJHleSTv6Zf1bad
J3NX/Bf/jRb9pu7Ip+kbrOPAbF32hxl+n9/DIwa9rya7974B/Tk03ZiVPciG
+HlsyOrlPXWYX8Am3Sj/i13+h//FForyJv4BSLgwsw==
       "]], 
      Line3DBox[{1989, 2184, 2801, 2947, 2245, 2185, 2619, 907, 2618, 2186, 
       2620, 3068, 908, 2443, 2835, 2902, 2666, 2131, 2444, 2836, 2903, 2445, 
       2132, 2246, 2961, 687, 2446, 2133, 2641, 3049, 772, 2447, 2802, 2948, 
       2640, 2187, 2714, 1020, 3092, 2712, 2709, 2764, 3088, 2134, 2762, 2250,
        2448, 3018, 2135, 2251, 2831, 2904, 2449, 2136, 2253, 2834, 2905, 
       2450, 2137, 2254, 2964, 2242, 2451, 2138, 2256, 2965, 2244, 2452, 2139,
        1990}], 
      Line3DBox[{1991, 2739, 2803, 3079, 2740, 2188, 2453, 2622, 2949, 2623, 
       2621, 2683, 2189, 2456, 1759, 2594, 2455, 2682, 2838, 3064, 2685, 2596,
        2763, 2597, 2263, 2667, 3057, 2247, 2458, 2695, 2696, 2665, 3055, 
       2248, 2460, 2140, 1992, 2963, 2249, 2804, 2962, 1993, 2713, 2805, 3069,
        2765, 2269, 2806, 2967, 2270, 2252, 2462, 1196, 2271, 2837, 2906, 
       2464, 2141, 2274, 2968, 2255, 2466, 2142, 2276, 2969, 2257, 2468, 2143,
        2279, 2971, 2258, 2144, 1994}], 
      Line3DBox[{1996, 2282, 2283, 2973, 1995, 2259, 2454, 2260, 3056, 1997, 
       2684, 2261, 2457, 2262, 3044, 2668, 2595, 2698, 2599, 2669, 1387, 2686,
        2264, 2671, 2598, 2699, 2601, 2672, 3059, 2265, 2459, 2266, 2697, 
       1998, 2966, 2267, 2461, 2268, 1999, 2907, 2807, 2925, 2000, 2808, 2926,
        2001, 2291, 2292, 2974, 2002, 2272, 2463, 2273, 2975, 2003, 2839, 
       3019, 2465, 2275, 2004, 2970, 2277, 2467, 2278, 2005, 2972, 2280, 2469,
        2281, 2006, 2976, 2298, 2299, 2007}], Line3DBox[CompressedData["
1:eJwVzjlOAlAUheGLCQHF2jhUdgRch50NS3ABwg60UgtFtMXGIYooO6E1AUdE
7JDBxCnRxM/iz7nnvy/vvcXVYmEtEREraKci+umIs8mIV/mWiWhxA/M5N5TH
3A23PhUx0mt8kZtFlttBHl3McS/YMI+dzcldLCGS7ufKuHXfsnOb2NML9hV5
x29z++YDbJnvuYQ3J3CiP+jvdhf6hzzlHrlPc50r6fPocAuyiUv+y/6Jq/jH
lf6td/Uj+x9zg/uV1/7yzM9MR/TM1f+OQ/T4P4a0Nio=
       "]], 
      Line3DBox[CompressedData["
1:eJwVzzlOgmEUheFrHBi0sUZAdiILsEE3IAvACEtxQApKoxUOCQ6L0BISWuM8
UzEk6vMXb8497/cP9ytVtyu1mYhYxzAV0UpHXGUjbnCNzFLED98z99HGlv6N
VCbiAneLEUV8cQv6OW71Aj65vGzgjJ/HB7ei13Gqz+GdO9EP/X9Wb8o37pg7
MAc3xQQD7tXZPl+2zyZy+gv2uDU9be9L2cUzn032NC/zJe8/catyB7Xkns4f
uYL5PrmP7HB/vvfAH3EjfYxfbhcbnvkHcLovtQ==
       "]], 
      Line3DBox[{2036, 2646, 2647, 2323, 2535, 2985, 2145, 2322, 2750, 2751, 
       2649, 3050, 2146, 2484, 2325, 2789, 3095, 2147, 2039, 2908, 2148, 2041,
        2822, 2909, 2149, 2326, 2823, 2910, 2328, 2536, 2150, 2327, 2879, 
       3036, 2561, 2330, 2537, 1221, 2329, 2565, 2566, 2332, 2538, 2987, 2151,
        2331, 2567, 2568, 2334, 2988, 2152, 2333, 2320, 2911, 2153, 2048, 
       2912, 2154, 2050, 2889, 2913, 2155, 2753, 2825, 2914, 2654, 2156, 2335,
        2881, 3039, 2571, 2336, 2628, 2157, 2627}], Line3DBox[CompressedData["

1:eJwVz7suRFEUxvFvjOHMOYNIvACeg4hKQyGRCJ0HoHF7FpcpFRqFziURT0GE
Wi/EZS5+p/hn7e+/1to7e3Znb323kWQNrSLZKpNtTLeTUm3jrUpG9bp4kB9R
dZJVvsk9yc/oYsCtoMEfq7/ccDyZcz7CtXunMOAK+RCT8rn5Prckv9bv2Zvg
m+oIenqX/JCL3KnvwNVY8qd3Zr+S+7gwt1i/zZ/yy+bf5Ra+uQP1h/tynnfe
x4y9T/mOL/3tXt3Eif0PfsHMC3rmCtzq3WAD/1WfK8k=
       "]], 
      Line3DBox[CompressedData["
1:eJwVzztOQlEUheFtQhSuqOAMAINPmIC1dFJYayAq2IFvmA1gL1Y6AXvtIHEK
4Ai04KP4s/61zz7n5hYuu2edlYg4xWo64jyJuEAxEzHDH5+sRxT4wPmL/oPI
RnT0ER/gG9tmXbM1XLlzK9PY4dd498adXpKJ3sIHv1/uyFc9650N7Opz/POp
eZlv8i3s8198pSL25ND9Q3lsb4wH/UAfyab9mdkjz6DNn2SCMr/BMz+yX19+
3z98utNAz7xi/mae0/Oo6jXZd3YiF8UYIwo=
       "]], Line3DBox[CompressedData["
1:eJwNzktKgnEYhfG3Jl10FDSvgYRNJIkoXUAlNHEHNqoMBWddddqkNUTmZWoE
mVkuIZsFtYZcQZff4OGc8/B/P77l/WqxMhURe0jMRtyiNR/xiS8sJiOa8gbv
+MFfImIsM3MRj3izT9wlsaIfoM+f2msyZR/iST/jsrJnp+QA59y6vOea+rP+
6/tX9oZ+x23Jb0zwwW/KFr/j3fFMRFtuo80V5LT/7sgudpF2c4Rr/cKboftV
u4wad8m9cGN7yc7pr6jzefnAL/Ade2Q3ZMn+B/MjK+8=
       "]], 
      Line3DBox[{2061, 2724, 2815, 3073, 2770, 2366, 2496, 2816, 2997, 2367, 
       2352, 2498, 2817, 2992, 2370, 2856, 2924, 2500, 2177, 2373, 2998, 2355,
        2502, 2178, 2376, 3000, 2357, 2504, 2179, 2379, 3002, 2359, 2818, 
       2995, 2062, 2216, 2819, 2954, 2658, 2217, 2636, 2890, 2955, 2729, 2635,
        2218, 2507, 1770, 2605, 2506, 2689, 2859, 3066, 2691, 2607, 2772, 
       2608, 2509, 2690, 3065, 2384, 2510, 2610, 2611, 2386, 3004, 2364, 2512,
        2180, 2673, 3060, 2365, 2514, 2181, 2063}], Line3DBox[CompressedData["

1:eJwVzMsuQ2EUBtBNGik10JbqKRMvIGkixoSQyqFxv4zwAO2gLjE3521EpLRp
RJpIRLyDEVNjq4OV/f3f3ufMnTd3GkMRkZLPRhyPRpzwkouY8F6SuyzT0RV0
K3KP1cFOV9Q9mGver6wzqXvU1eQ3NpjSPelSuc8mJV1lPOJnLOKXRJ7WZdzd
UJZPB7d2Z2bRPtFtye/U+XZ3YT/PHQtcMjwScWtuu7kyq9yzyDV/vtu1+2CP
lq7i3239vvcnB8zonnWH8hdHzOr+ATsrI4g=
       "]], Line3DBox[CompressedData["
1:eJwNzrkuRXEUhfElQky1SMRwzBJDJXgCrWhNyTU3rtBRU2nwFq7rIQwPIOZK
50okVHq/4sta+9v7f3KKUnlhty7JPLqbku3mZAc3rUmXeVF/whJuuR5uWX/G
oXkMvdy4fMALv4KCa29MXvVV9Jnv7Mv6Z0uyJ79lP9/Zlvzql/hBBfXcgN2+
uwPceztoLulvWMMfN8Qdu183v+OIm8AUd44ZPGKSq+FE33A3LS8wi6Ih2eQq
vnVmHpZzbk9xpW/ZVeWH3Yjs8G9fehU1XGOU/we7KSqv
       "]], 
      Line3DBox[{2091, 2410, 2522, 2411, 3014, 2090, 2412, 2523, 2940, 2864, 
       2092, 2413, 2524, 2941, 2865, 2093, 2866, 3026, 2525, 2414, 2094, 2867,
        3027, 2526, 2417, 2095, 1908, 2732, 2782, 2781, 2096, 3085, 2757, 
       2758, 2756, 2222, 3053, 2097, 2223, 2420, 2660, 2659, 3052, 2098, 2421,
        2527, 1758, 2593, 2099, 2422, 2528, 2942, 2868, 2100, 2872, 3063, 
       2680, 2430, 2101, 2661, 2662, 3054, 2638, 2224, 2102, 1831, 2663, 2639,
        2225, 2103, 2957, 2226, 2227, 2104}], Line3DBox[CompressedData["
1:eJwVzjtOAkAUheFrAkbE2KiogIWLUAMKAoKNJESX4AK0VFDDa0Fa+FgC2BNr
wApX4Ufx59zz38nMHN7e39ytRMQ1Ltci8usRB+ilInLyZzWiwX+hy43TEWnU
9YX9H96Q3Iho8hf80LmBuYiaXpB9tJ0b2FW5rHnONfDCfXIV1PUZ9u2f+T25
i3O7b37HnMGT3bYcLd9E2f4DI26MTf9p8SVuqs/wigR/xZ/xHXf8YqKf4JQ7
lj3M+TaK3JHeXf5Lf0SBq+lTbLnzgXvn+vIfByonuw==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1060, 1923, 1183, 3078, 1061, 1275, 1621, 1885, 3068, 1886, 
       1077, 1873, 1279, 1631, 1759, 1760, 1875, 1761, 1385, 3044, 1842, 1764,
        1765, 1877, 1766, 2927, 1410, 1431, 1846, 1847, 1099, 2929, 1448, 
       1647, 1212, 1106, 2932, 1462, 1219, 3095, 1115, 1897, 1227, 3090, 1126,
        1490, 1235, 3023, 1136, 1491, 1521, 2992, 1240, 1143, 1523, 3009, 
       1551, 1245, 1150, 2938, 1553, 1572, 1251, 1156, 2941, 1574, 1590, 1257,
        1164, 2944, 1592, 1264, 1172}], Line3DBox[CompressedData["
1:eJwVzj9LQnEUxvETVA41FPkGHPo3OFhDUHtpuaTg5JA13AtJNdTWVghBq0vY
CyholvbGFsXQPYTmoGjs4/Dl+5zn/A735o7PK2dTEVHGynREYSZiA4dzEavm
A7k2az+xLp+JqOABie7ILuU/uz3dLhq6TxTlU7tNbnKJC5M7uy/sy2N3N3Yv
8i2/8iM6WJyPeNJdePvMVf9z5f0b17nO7ziREx5484HUfOlmKH9jhKbuWvcj
d+UF+Vducc+8xMvI4g593RpvYR33GOi2eQdt3/sHrzAnnQ==
       "]], 
      Line3DBox[{1064, 1331, 1614, 1332, 2898, 1835, 1357, 1623, 1358, 2903, 
       1624, 1762, 1360, 1386, 3057, 1361, 1839, 1634, 1767, 1389, 3059, 1845,
        1390, 1844, 1413, 1769, 1280, 1432, 1281, 1783, 1926, 3080, 1286, 
       1818, 1287, 1787, 3048, 1293, 1294, 2909, 1117, 1473, 1474, 2916, 1650,
        1476, 1494, 1477, 2921, 1653, 1498, 1524, 2998, 1499, 1661, 1528, 
       3001, 1554, 1529, 1671, 1558, 1575, 1559, 1675, 3027, 1580, 1593, 1581,
        1917, 3076, 1915, 1916, 1174}], Line3DBox[CompressedData["
1:eJwNzb1KgnEYhvGnsBKMBCMycmksXaOTCARzcWlQWlOwD2hobGhzyFx1aKog
CEoaFeoUTPIU2ow+hn7DxXU/F/+Xd6NaLx3ORMQuNhMRU2zPRfTmI7oYpSKK
vKMVMbZb2jtXUNIKCxGf2p5d0+rcdpf1hr3KWazhQp96M6t/87qWw4+d1G5x
482d+x5P7jT2tT5nMMAyDrSmN6/2CA/uNz7RPvgLz9qEz7VffnGv2H/2o/9u
2UPtkvM41Y5whmNcYWkx4po7aCPv2wT/Az5VKhY=
       "]], Line3DBox[CompressedData["
1:eJwVz7Euw1EYhvFP+GtatdEok8GgF9BEYpSOBpEOuvUC2kGCS7BSS2ddkKpo
Bymt1EBiYZYOjc0diBj8DE+e732/k5NzVqv1ndpURGyjMBORTkVkUEwiWrMR
59gw/9ot6HP4motY5D27XbuGXOZNZzqoyFs8rTs2fzuXmJu4MH/oLvlKzuAa
HfkGd+YedzF27l4emId4Nj9xWz/iV3kJY9zq8nyon/AP+rpPPvKWvvcuZyMe
eIAhVuRHPsA+TtDAvP6MT7H2/y93vrjrjd9RQsFuHQn+AGwYK/M=
       "]], 
      Line3DBox[CompressedData["
1:eJwVz79KgmEcR/GfZjZ4CbZ0BV2ApghNSSo6lP2BkIgIySXIMZxCSGhuqGwv
6C6iAi+iaHJpEYSkzzsczvc9j8+rrnV6zfNURNSwnokoLEcU0cpFNLIRG3Yb
Jexq+9qBfYFD7GnH2jtfeh6ij1PtQ7ux7zFCV/vUxvYrnpJ3+s6+9sZH3OEJ
Tuwuf/nMwr1vPtN2ViKe8YI/7crZgufOtrUqBtoUNTud/Ade4joXcG3/omH/
uJe3H+xVfuRNVDBzVtJGKOPW7xloW8lGFXfaP8AEKh4=
       "]], 
      Line3DBox[{1072, 1343, 1344, 2900, 1618, 1347, 1371, 1348, 2905, 1628, 
       1375, 1398, 2968, 1376, 1637, 1402, 2970, 1420, 1403, 1641, 1424, 1441,
        1425, 1645, 3022, 1445, 1446, 1896, 3070, 1894, 1895, 2913, 1123, 
       1485, 1486, 2919, 1133, 1510, 1656, 1511, 2923, 1849, 1880, 1536, 1665,
        3065, 1537, 1868, 1667, 1777, 1541, 3062, 1856, 1542, 1855, 1565, 
       1779, 1313, 1586, 1314, 1861, 1793, 1830, 3054, 1318, 1600, 1319, 1920,
        3077, 1918, 1919, 1180}], 
      Line3DBox[{1073, 1345, 1617, 1346, 2901, 1619, 1350, 1374, 2964, 1351, 
       1629, 1378, 1401, 2969, 1379, 1638, 1405, 2972, 1423, 1406, 1643, 1428,
        2977, 1444, 1429, 1892, 1889, 1893, 1890, 1931, 3083, 1933, 1934, 
       1932, 1297, 2914, 1821, 1302, 1487, 1936, 1935, 3084, 1822, 1512, 1657,
        1757, 3024, 1756, 1658, 1514, 1540, 3004, 1515, 1668, 1543, 3005, 
       1850, 1544, 1566, 1824, 1825, 2956, 1792, 1315, 1794, 1831, 1832, 1795,
        1320, 1602, 3016, 1325, 1976, 1326, 1798}], Line3DBox[CompressedData["

1:eJwVzz0sA1AUhuHTpEjpLF0MxhpN1kYklTAQs1AsBlbCKkrSRIjJ0qVWQava
gQlNGHQpFmYJm8HYp8Ob95zvnvs3Wtic30hExBzGkxH/mOqLOO+POBqKqPAC
8rJlnMqmeVG2yrs4k61xzt5jLuvXrZ+oLwcirjCcjrjmFSxhHwdIyQ+5iLT5
Kur2fjrjlu/0TW7gS3avf1A/4lXd4gv5E7f1I/jGi74qf+Yd/Mgm3PEn+1Xv
yVK98/WDXLN2g4z31HkbW703+lPWfMlcztyYepI7eMMMPvCOWXQBsjEwjw==

       "]], Line3DBox[CompressedData["
1:eJwVzq1PgmEUhvHDBhKgMqPiPwAbjegsmpjN6mxukGxsMJViJLgZHG6MgYIN
Crr5EQxuslEsFE02g43mj3DtPvf1POd53/xhbb+aiIgK2smIX+ysRczwga9M
xAX3g5L+puflqf6NTfMrtyHr+gJZ8xOXkSf6JxLZiE46YoQhqtwcOf5OP8Z6
KuKIe1/t2L+y/8w9ygcc8Lf8i7zUJ85GcogFX+Gn6PMDrsf15S43RtE3/rim
8239Htd6Qy+bB0j7n5Z75yjpXZy5s+fO0ry12kHbu0XuRnZQMP8D4cwu7w==

       "]], 
      Line3DBox[{1171, 1263, 1605, 1589, 2943, 1163, 1256, 1588, 1571, 2940, 
       1155, 1250, 1570, 3011, 1550, 1149, 1244, 1549, 3008, 1520, 1142, 1239,
        2997, 1519, 1518, 1135, 1234, 3071, 1950, 1029, 1125, 3072, 1028, 
       1898, 1027, 1114, 3050, 1218, 1649, 962, 3082, 1105, 1211, 1646, 689, 
       3043, 1098, 1205, 1430, 2978, 1409, 1091, 1198, 1838, 3056, 1382, 1083,
        728, 2949, 1781, 1278, 1076, 907, 1780, 1274, 1059, 2958, 1182, 1269, 
       1799}], Line3DBox[{1175, 1265, 1921, 1607, 1746, 3017, 1745, 1165, 
       1258, 1829, 3053, 1316, 1157, 1252, 3075, 1906, 1151, 1246, 3097, 1979,
        1145, 1241, 2995, 1505, 1137, 1236, 2953, 1503, 1738, 1737, 1128, 
       1229, 3031, 1690, 1481, 1728, 1727, 1118, 1221, 1687, 1466, 1714, 2986,
        1713, 1108, 1213, 1685, 1453, 2983, 1289, 1100, 1206, 2951, 1284, 
       1093, 1200, 2925, 1085, 1193, 2962, 1365, 1078, 1188, 2948, 1809, 1811,
        1810, 1067, 1184, 3029, 1683, 1336, 1804, 1803, 1800}], 
      Line3DBox[CompressedData["
1:eJwVzi1IQ3EUhvEj+BGms5gMih9xrA4Mi2LRIJgHNssVbJrEsGDQYhi7IIiI
mwtjQS1imVoEixNEkCFjSZN94M/w8J73OYf/vXOb2+vJUESsoTIc8YuDsYiV
0YgOXvGViTjivzFvt4gfbkGWuT4e9bzbfXMXu/qe/MChedbtzEjEjv6Gd+7U
fY+bxhb3gpR71h9kGyWu4fZJVvQ7uxt5jU9+g79Hk6/pGbmq3/6/ZT7nqnJZ
byHRi/IKA3Pqv+qoocBdYGo84lIvYaDncOz2TJ747pL3Ju2ymMAf3aou+Q==

       "]], Line3DBox[CompressedData["
1:eJwNzi9IQ2EYR+FX8E/QcGEGx8JYV6wr02hbMKy4IMaxqZuwYrI4wWCUwWZw
c8UhYrKI0WJdHcNgsskwKLgnHH73HF4uX+7gaPdwLiKKaM9HfONqMWJ9IWJk
P5a59oUC38QYLf6JraWIqZu0dsYnuNVSKxFr2imv82NcuvvXsv59ote0Kv60
jFbRHtx0eQfv2ir29aH+Zl94giYv8Vc88i4aWpE/o8P7/MLu8Ce0fN9o53ab
3+OaN3gdeZ5498C2vWsPA2zwX3d3vvso40fr2QQziIAs6A==
       "]], 
      Line3DBox[{1178, 1268, 1680, 1609, 2945, 1168, 1261, 1677, 1585, 2942, 
       1160, 1859, 1858, 1584, 1562, 2939, 1776, 1881, 1775, 1774, 1852, 3046,
        1535, 1772, 1878, 1771, 1770, 1663, 1312, 1140, 1903, 3074, 1902, 
       1789, 1308, 1131, 3051, 1231, 1301, 1121, 2911, 1224, 1459, 2935, 1111,
        1216, 1457, 1440, 2931, 1103, 1209, 1438, 1419, 2928, 1096, 1203, 
       1417, 2975, 1397, 1088, 1196, 1395, 1370, 1081, 3018, 1191, 1368, 1367,
        1070, 3087, 1186, 1882, 1968}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
pAx8A4a2MfM+t5NU6T6I2IT4JrovEG7mncrsB+2Kdkb7Hgse1nz8IB7OC+ne
zJk2RKTvmyutECiGa1o9ZzdEN4O02MZPG1bQeldm9xP3Y6XA56YisXBeF7y7
tGS59I5e0r3h68W7E8pBhU8u9tmZfjj91Ey1162diN3Q+rImgsaZHUniNkNs
sL4nBDU5ZeTF/e/LV1iWQPf0W9eVqX5aeNHSfWpPInnVoh0wBirgF0z04ROo
hdzHY/z75LvhxPh1O36K0zogdIZ6pWkR5CrHf8n26oEX47Lu1OVQfTIw3agk
qwXmP32p6D+1Gp4flHn6h3cAlKN/90ZfTCHX8kYs1/+mvLlZqd0xpgdmv6n5
8v1oAnyNlXDkbKiDJDNJXS+q7zR8nj6LNGkglQ9M/Mec6gLhFzKHePO7QKNY
K2zBsxryY6vsZjqCnuUCW6WEQSieGVzjr9hDpFV6Xk1wa4Jl7VEjWfM74J2m
+0tqb1J7hyeV2h/KDIcKGLsbxM9hUd4QL43dPJRH8O1Y32uGP4g72gHxTzTn
4Vtnkw8bQ1ZrXDzPJmtera6+KFPDvcb7OO+ScbfFv6wD7CUPT/Pl6SP+Uus6
3fZUwpvubyUbTzVxx0kBi7JjW/pgaeLs+flnOWDfNeWHYTKBRVZPlFen0Hqq
aftR/7lDEONdVqR/Ihps/oy52/zgPRyysKtID++D8xDy0PzBO7CapqMvpd0J
nw3k73wJ7YJ5Qa2tI+Xl0HSq/khofg8c4fy5MVuvArR/aW7wXUf15LAMf58V
C/JtXIZfWbYBq33c5+MC8SRRSCLoKM3bimmOFyAom5hpxl/om14HJxef0FMz
ZENv2Wr3T/2JcIBz9g8dSc+011aGJUOgnT4YFLG+ncjNXFrzcGoVjHl/xb/1
Zx9Iq+unULuSEo5Q7cjRBHIuKFyFse/LW33yycn9RJjv9ZJpkYWw/1GcVIZA
B6TaXztI/Zyce8v6Rf2ecEwjOhl/x3iH8Q/jHsY7jH8Y99BP0G/QX2QS+p0+
hPSQyLztY+8vrgFXPen4X0mdXD9Bv0F/SXx9ROaVAws8B8IM5C++g7ERIzMO
fKjn2gnthvbiGMntK1MbhCHOerP1ms3QU7984tCPMsiY7MzOc+2HyAEzr/6w
CFJ6vU5k0fZOMPwhrf/hSTfopqbNXmEVQywTHf42neuFgYl/TyzN74Vb3iG/
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
pG4Ld2HWt+kNds3y4MBXQ7v3TbJvYb1b5JeDu4oBcUGcEB/+nAsv6PNIiGh+
AX0+kZHNTWCeizoJdRPqpVPjV4f7W7wgQ+XLsigfoN9EeRPDh6S1nlm+0qVk
pEBtXg4vh/AYj4+IyS2FcR9tH2ZqvyFTlzVIiFdzSIqC85EHjaVgJeptdU07
AbImW1geNGQDZ9Ifk8bD9ZCf7eRwoyoHVqTbZ96WY0HUz9DS7dVNILakNXvm
Oha58+LyuwNPXhPVG7+en17XDDzB4x7l9A8QvTrTIxI6+aT22vQRyf3/fW9t
3m6Bmqa5HDj/+N1xUZdqKBqevVXvfBRILNlxc+YVNvzWsuXfa1MHn8UnZwta
UpwjVhlrf3lJps0O32Bg0gmuAWo71b5z4IydwYKzgdFwzEu8Uv9yKSw25dXm
lHLgSWVmhLgHAVW5m+smZZZAe5irqNPp97B8vWSgXSYb1oenyufkV4CHzhy3
Tt4SiDVWrb/+hQ0rh/nW12SWQZeamfwV6VJwnFmmQHGD4tMLLjO4bdJ9mZGl
/QZAymIGxQ0EHX+tZ3AbdrHqSvYdILM8sqsuyGUSJ1a1vKhdOyRMnGd7hcYT
eYMiqXrJa9Amxy+bNFgHcxTLXEWOskkeidOPePSIONakTpeeUA+2byriw4NY
JDJj09TVFxPJjfANjrULmkAktnbyV60eIqLW2vPkRic5dkIgxmFLHeS9PDWe
f2cTuagV2nNBdZB0a4+PET1UASf9JoauaX9CFCOOz+Z34xCzRX1Cg1aVcPfH
yzMy4YVkwiONq1p0frLrnLsuR0vA+81O1s3IC3Cg42z8szAO+bL4VSLLuQJI
6bcr/fOeQu7NhA8O4kPkCPt3e1xDMTyYmiM6xTQeklmx+yWXcIiTSbHWh/tV
oHvY+6fyryw4t+s73/NyFkl+Nn61+NYGqLvX4hQuUw6OxqYPtrX0kIHj897H
P+8Cu9H3PvP+hxav0/D9z0drR9apnemBgNdah4e2NMKOj46Jw9odULUyWmvq
32Yo7p/nOe1ONzh5hyaZ6XXAbr+1LS+nl0JBTaGOrW4/6GsfldpB9drTZh6b
nUIX4NnP17d+ZLDhJXGfKBJQC0d0MrsjlJ+QXVGdWwcp39YKHPA+dbgOFmk9
eZ2fnEqOhTq4so6w4IVJ55XYq02Qd/zwiqLqt2Sm9dydfJL9sEfhlca3bFrP
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
F5TB0lG99w9u4Vy9l+2wukfOYgCc7bZenl5bRq595myLFKN5/fzUx0HvukDh
ovixseaN5FVqya5mqS44I9PTy7u/HjyGNRp4tNqIdXB5sYF7H0S0eWtff9FJ
bpyXqz1/tRsuHtjNK7usAUT3e76xsWskv4fvW9WYDULbAt1PQTkV8P1GofHO
De/IuOBZrbUmHKh1VVwx/nwJV9f9g1uK7vtRXedhmVhw9HwX1K7pfsEf0Eqm
W18X31vRAVuFG2U3fm6CV+zZhU9X9JCMV3tFzrS1w7YA+/v3vcrAJYw1RbO9
j4hJ3p5tZN4Blezy6kj1ZBIjljLJ5coAJDWe+3r7aTv0mYmW6+x7Q3I2C67V
8GDDCYNcF51PtbDnHk/T1pZYonyfJ7fiMgfuiu0V7CquACfr6KextsGkybsz
JuIZBzSbFht9k68A1Gf/1mmFPcKXTzqlgu2UpLjd2r1kIMi4cUp2Nzz3Zh1a
EZkBQb/ffBr4MUgOjKhu2DCjBfqq1t3PuZFE6yO5B+uXsYnFmbF6TlfqQXBX
6c0nBbEQm374TL4Sm+TH3Y/glWiA8FF/Nhn17zujfv1Jtzg2gRMP7xfYraxs
ZsGDMSx9Wb1G4JmjOUDXIfIaYW50HbATsX3DrPPz/+mubN3gUd2V4f7C9q1h
J8HRO8XcNZvqureehftvv08njz5cvtm+j0NmitrcmnqnAoYcGpsoPlD+bM1z
ig/pTxTXY/D5sHxMgNu2XghL7h+a6lwP34eeyD+tbIeE0biwazRO9I/Gh78h
oeXyewqBd+OKWS8/9sL2o1kvXmzrgnn/T0cl6fKP6ijeO+sC56qxSPZnTZ66
JdUk0iirmB1bDY5ZgzMWHRmANvYJfsk1uaBRsOVRlEk73N1kHxrr1Qn+Z6t0
D0ZVQq/LOIka614oGo0LH0fjxJjR+ID65x98QnXbRvWPZMHTxs8hHPIrxLm5
pouQoAFd78+JZdC7NMZWe2QAtrbsClpsHk1kzYv698i3w+szVqKJ1V3gNv5V
8aWMMDKz/8GKFL0+qtuyRR4NVoGy3zbF9k1+ICsiMfhVl/MvnXNcF3XO/xF2
32E9f///wCnJLlL2TEZkE0oPJLKyQqjMjIysrJBVZGZrkE0yKmWkOlJp7733
HrJ3fuf5du59Ln0v1+/9z+tyrq7er57jPM85z8e53VeRzmPe/7B5OjXfeP9D
m9/9Xin1P23DXshObv+WjU1oPbR7oRuNzd16vGBtFGld+tC0fGcZPbo0zXNm
vzgWti/fz9gkjxI3WE9s06mA3n1r+GIG72gOFTLFjXeK6U7ulOk0OoGuzuu4
dYFROtvZoJXfpaMV9cY5zr6fxDhncfFnxddJVaz97DsTZc9HUoGxW0OfYfE0
qf/wqLYpFezQ0sbm1TMyaO/E0m2Db8TQz2Fy2y5cKSTt8W0bzLfLZeUh7Tt9
aZZPX5apHho2K5OyvtvWFq8tYhv8ow6r8++3dMr29PAVETQ748zhJvNK2Jmm
jb4ZRBXWy7lw90XORfv+z4fu3lrGSq4efLhfNoteBrWVsX+VRlMmzttvo1DI
bk5uF99froR0U3pbL1JLoKfb5k37PD+NyYRGBfvMrqS3Uyb1VzCNIcPpnqer
k+Lo/KN2nQZZlrLaIRNlcp3yyU75xLobD0LplllM51jnChZf5CunX5xF49t2
vbr52XPac9Ln/ZRLlSz8eo98yzaZ5PfXeCPI96QYb0wKGWq9TimFvSlu/tt1
bzFt6n5h7xyXAnJ9NUD9Tlksy7wXbuysW0kOGw4Edw9PpXVvLs8YcT2Q3fet
zcjVr6ZEt8+37w3h44oB59JnPAxnis83N94+q4pt15wRM6gqicLXWanx30Pe
8/yW8N/D2mvpvpR+z4966/m7xHr+8IhBDvzvZdnLrdvyv5eMau81kf5e+TV3
G9sNL2Fy400yxr3IZ86bbjy7rZVCWyacqZjZOo8NiRiUVnmxjO2WS/3Y9U4c
PXQaYB2aHsdiF8qX3Q6vYhPWB7eTVY2mRwd2juTnhYISdjny88L6TPBsIp2X
pBlb7y0dXkItNM51XjQinaoHDY9Xesb781/m0fEq5cxngN/qHwG57LO5wf2b
12Ool2HgwNAm+Szvk/OpX7GlrIWG+VyFkfEkG9PcuyqpqO5zgULqDfXQWLri
3rnP2EkFNGDqukc3tEvpyZdNjsN7xtL6volJS3zL6PoiRd9v7fPIeYKar+Xd
WBrTISWN39fUY/NBrZRCRnO7Gh6T7uu/n++36tZ5Ph2ZamZSVUm6Vx74uj/g
z4ML9idiGySSrVXX70cKk8nl/JEO75IraUfj3ZfsDWKo+ezoT8P8E+jbsZLD
dourKKRwiVGlcixF6xSfWOGYS+WyE3X2GZRRkw+PZz57k0iaf63bPNd+Lp7j
+XLd2sgtKaYxN961v8Lv5+1mDzrIRGZRvNaZcY5Hy+hrk23vAxLj2VX/UeOt
k3Lpp6/MTJfneWzC7MPdbxkVsAd2Fy3nz8mnWzVt/Xl/Tn1P2Z/m/Tmd/GR2
UerPVx9Qyul0wZvSzNfsCptaTWsPrvrVtSyBvi94+XnWmFd0ou+c62kvKmnV
nE3ySjIZdGtlgMrAq3Gk1bVWcZJvGRs0yKhLdnou7e25ZU5K6+dsxwGZseeD
K5liZBeVT4szSGO26Q7+HGTpzw695c9B2pH+Y5H0HNRo7jqI/x72LeixPP89
tPphczXp96grGBXz/y+Lbdf9Fv//sk2dvv5qw/+/ve1irvLvyZa6TrPi35Op
jp/4Wfqed5/N+cKf7zRAttNU/nxnIct+r5Ge7wMTVk7ix4Gmmw/oxo8DuU9d
YC0dhxfhyrF8vMGupWle4+MN+nJmnZI03nC/VTONH0+23Ngmlh9PutJy+2jp
eJ4K2KnEjz9L7DezHT/+7O7tDf8d/+sphcf4eWSjJq4hfh5ZeR+7WdJ5jM7z
yubnnVmvUzvKzzsbZqVgIp337+Y0lo+jaPKE73F8HMUCHvet7crHUQo2Y1fz
64pNMU5359cV+7Zu7n/X1cmJA1L5dcv6b7N6yq9b9t75XJB03Wo7yavy65wF
aPk85tc5K1itcke6zhs3em0vt66o7rN5A/PVLrcSyf2epSa/j0j90oqT/D6i
HMubmtJ9FF5rGMHvO2rXeMZGft/RpBVrnKT7LvCv/t+9bp6769EpV37/snaT
qgbx+5e5PLocJt2/HtMGzRuhl0gNdFTdopZXkYmJjtU8s2hqb2TozPsH6qxT
Vcj7B2qrcFpJ6h+yzArf8v6Ezpu9Teb9CbUYN+Cd1J+4TWwlz+cjZLZdW4fP
R+jjwiZJ0nykZHeoHO+X6O34n1K/RKcPdn4h9Uvq9193ihsTw2zbnZYtOlvO
fuarVTWUz6WkevuFm4n9wjeaq5fweRaZuW6I5PMseqXe+qA0z9J486ma96vU
RHarLO9X6UqrrmlSv6prO1mjy9dw9kKpS6HysHKmdmi2/I52eeRz3/1Mm/05
rMGTvTsVPEqY87iwPu1mZFGjenkHa4T7XTjr73Yz0d5VX3Y57+epc6cpmbyf
Z1+Cba5K/bzz6ANXliiE0mzZoNWvRlezZKWc/nO14uhmZuDwWauTKUz2ytSh
dyrYx+SLSqxPCt1qoJk9LSCfevvtGbLXpoAZ9Si1GKuYRzqtFY/y5yBZWOVG
8OcgC5p+a4/0HPw7H+G1b0fhgDUetiY59GUpTZ88ocJtdDaz/GEYJK0DfLtq
qb5kfB5NCU75GFWURx9tf04IUyskn3o5CLbCaUyt135UtK8SzmZD4W5+EN7m
JtH+O/NP+yfRviimVTZ/zjKj6BOV/DlLu6JCv0jPWeO0Vyn5i32Z1xWbSC3v
Cro5xa8seVQO9Z52+xR/XjPNo32V+fOabk0J7Cg9r1OivFtr3U5g52zPPSpv
UUaph+7GfeHjQyMfxeERKyKY8+XBW/l4g8LCesrN5OONwjfjHqvLRLFrdiNU
r4wvIu9ztSmzI4pp6O2w81m+mczMYOm+O5eK6FubYfe0/fOpfNFyJz6eYf6y
U97z8QwVeByzk8Yzl6+bfVIOy2XttrTI4Z+0ekVFm2OW/HnVabQNHxexZx5D
q+fZ5VLpzMR20rho94Fftyb7lDLPDpeGyBQn0Iofqu26efPzqDTbsIVxOct8
cr13YststntNWrTJvERa8o/8hTn12ruJ9sEn+5vz8Q/NGvbVn49/2PHIRerS
+GfMtLC8xg/5eKxD+EG3vRXM1+X6msf3Y2iCzxSPyo3F1GeNZ0uFT4XMzL9D
4gKFeMrvtcNpy5tiyvvy6XJHPiAeuebVfdPsWNqj9/Dobr8y2p9l1kY7JJet
r95pcjkvjmzbP0vk40NyXP9zKh8fsjUyM7ZL48MtW9UvRiyqpv4Ja8KmNo9g
r1spDFPsH01Bvo7SOJPKJxlq8XEm69XfXV4aZ/69LuHse1esS9gayDgPKqum
J/YVGdN1PVhO+umI9l9i6F3QxsAGaQnko2f52/ZQMT3+ofb8h2UhjTyWdcXB
KZHmW9zrMMuuiJq+k23MDIpo/T/yO7rZuWYb8efYuQmbNa8XplKg2tcksy7l
9ODgQsdAdf79Li569mp1MSlXLS0d6ltE6sKH/Sq82CfCiR0g2j/Uy4/wHFDS
4ZFaDhvTdt7Ycp0CerordN7cSYXUZn25Ax+fs+tDbfvz8TkddLj2Shqf7+s7
/92xewlsTUe/G/yTIlMWzvKJr6Qpu270qO1cwvxLW3X6pJlOg53a37uYmEfX
jCqW8PE/c7D0383H/2Q2ZnQzafzfJWfy+d/TCpnGtgV5fdNCSfXogExTPg/T
uJyuzOcR7FdOyEU+j6AAtdFPpHnEr9K4JnMTy1nh0eOq3/Y+pY5rY/buGMn7
8f7L9FZ8qGbhzua2ja082UHLzMQm/WPIQeRMzBK5ExNF3sRZ0T5TtBuI9i59
lmcpT6xiNsOelQ+56kAm05U2hSSlUdfTPstrZUspObxZrsWEAvZiYosuH3fG
0VWRS4HPriKfwkX8O0l8Koj2RYeT57XeU00BKXsLOqhfoLVvdy9wNE+gEwa6
h4otq6jswMcNjcbG0vy3j5tt/hVPw13HyfF5Fi1r1im3a6EbO15110aaZ5nM
fD0z7Uw1ldded/XbGkJjvXdsnuAZRdfa7X24unExHVRf6K86PIneH0tguXf4
fDZBV2foy2KqeLnB6zWLob3z0ybKtS3iz9uItBMsg6rNcsK1XyTRqHD9gIlP
y+uuk/o5I+byW5u8fpRF6884uG29Y8e8+hzZV21USR/mbpFrZJ7ALOLbBmt3
T6GY5XYLv46spI/CHV5UL//ik2jfWq99juneB71iClifc6lHt62IJ5sNs50e
rSihrPDCBXzeyoZHsW2lBqeZVfve2dK8NXb/mlrVpETWdY+Kw9foV6y43b17
4Z+r6PSVwatbm5SzlBd6PUZsfkNdVbpXrac8avnrsCqfF7Md/Y9ds/G/STsi
kwZL82KbsXqO+x0LWc/u3Xpk2gcy/9tptp6/SuhEc99q+dZvWeiZxOeXdR+z
7pY9lBIfRlG7MV7XmGU1k7mbdPzaghBS6OHnWnwkhh4/aHb6g08Fm9d4lMHy
hxl06oBxI8u8GDog+iMr0T+tFf2STr1cjJEiF2OiaB8j2oeKdo11luM8upVT
Sz/j3dM1cmmtxYlnejlxZNRll9LVeyXk1fHLiZymN2hD7c5Dmw8X0fjRyrHn
75RQ7bb+Jq87urKdNxuduWxdRE6JsTZ3rYpJV3HzyOmFsUwufMzcY2pFpLu6
MMz6chatcT30pYeDB4vK6VLsNOV/57F+jsmv08s1j+5IJ8r6uoJ/srm30zQq
PpZRQvGLncdTEpnyCYPLD9M9WZq3TLvSftW0SbjSU+vlaKwX7TNE+17RrjPy
UnpKbCHT637gqYfpQ2bz4bNebz6vSjn7Pmi9UTx7eb3TcINemcz7wDJ9af1k
3YoTfX4GxLE2EY36OCvksbOtZLaNPVdGwQ/fW4z8Vs7OeSQ00lx0n5aFemRJ
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
/GYsec7HFfR69uOn0rii16hRN/hzkLacuxvOn4N0fuLhqdJz8O3M98f4eJUc
ezcozLAPpHujul+Sxqvmlp30+fOX2uYvbMKfv1R0rZ1CY/78Tf5H/svdr/n+
fPxM6b92jOTjZ9rk2eeZNH4e/Tqgz9XqNHblpkXh+EtZdLxGs1oaD8wQ4z/Z
uL/zRNAeJcaJJaLdzGfpOj4OYeaOm47ycQi1sQ1Vk8YhrquTt9nbZrEBkQNm
901l1HdY4FjpvXPuh5s6fH7BIufMWbzhjh1FfPbcJM0vRgwcX8XHOWyN756U
2sMhNMbYoKM0zvkut6p1qUUJ273KYkWNUgC9Vkm6JL3XnnMltAcfD7PBd0yO
5Da9wc42qNgijYd31sslOSHyR+zqtZ8W7brdhx/h8zL2NGrEED4vY+e7afSW
5mXTfvVOLVudSV9kglUTrCrYTyUrvT3GsbRpeOU4Ps6nY7d6rOXjfJZZsXel
NM7fJ/JL8DlB5JjYiH+vEZ+TRHuK+cwZfDxJKrt2JfDxJFu8tMZFGk8u1b8c
v2dWBUWMUuqj8y6Z/a6saO4yJJWCHdaW8nkrya5ukNXvqgNr11ZlkjRvPfOz
257DKtWkPj7fIuFQNGvU4dsPqa5gUrbFRD5fppP7Zg2St/Kk8LZR4dJ8eVrp
tUZHX1XTvJIQU/t2r5npATVNqT6B1V6s4vMgSu5oyxx0H5NcUUNlaR6kN7PF
ej5+poWWH934+Jkm3t+l/9/4uWnoKTfZCrrgOWHHqR3X6VRYi1UTu+ZRitPg
cD6ep+2G1xrz8TwdXJBvKI3nW2bWWP+eVkiP37pP75cWyirvbC2W1gEsHA2G
8HkEuR3t5v4g3ZO27LuiJs0jpv8j18ZCrEccFusTEWJdIudpbYP9l7OY8cYG
A/i8hkJvPUqT5jXeIj+lvchPOSDyU3xEey/Rbi3a512flcPnU6zRgZBxAR1d
6WvNqQPSfMpHzEOSxbwE8xHXmWdaLFycwd7aH1p7vTCV5cTL+kvrNjmN18zh
83c2IbmzGZ+/s5Cu362k+fvsdz5nIhZVsxf7UpWnNY+gyr7vR0jrUXbietoi
rq9UcV1dF/kpqSI/pbvIT7lQL1elM3Jw1uqN/pVcTr2WGuwbPSmN2my++mtL
bQpldFsaFmJXzf/u085Vlm+oxZ42M6Q66kZ6DRvMTSwnp/PmO7/tfcouj4iz
k9ZbBjTvYsLn1/TmruUcPr9mJg2OfJXm1yVWSy9N9ikl3ekGM2WKE5jK0age
0vrhnJgPl/i8npbPnObJ5/Us1sP+ljSvby/WJR3EOqWZWJ+c2nH2M1nzBHIJ
eaw4tnsK21prtUBaT3gmzks3cV72i/NyUN9FT10miiITojSvjC9irzIGR0nr
pc+SWzc7yTJY4Gn379ovkljukcZu0vqGochbeSHyVmpE3oqZaPcT7VWiPTC4
0+8tQ0pYr4E5tquUg1mSQ3Y3qc5nanab56sbF7O+jShZdXgS26a7+pG03qK/
RF13/5Ik9u2O/6J+iwuZmnf2BKnuqNshw9cN0hKYX0Gp3JFDxcy842wPaT3w
Xe+T0vohSzsS0myGLr8+f6X4SuuH9X3ORsLndPK/O75WtpQ1jl/ZdNOEAnox
+nRnaT2q3/nnfo0fZrLOzbRPuO2toEI5pf/WUfu4TVO10C2g7ifj3S7dKqGF
O1caaS9PoCj3gja1nUvokpLO+E+a6Uxv/oCH0nrdtsKGbx+q5dC2c4azynUK
mN+c0YbSemCUhsOHMbcTqP+S8b7lLcrY4qtr3kjr2BfcdlGgeiQNVDkQ9mp1
MRu0Xj5LWodc9I9cm06nHQ/lL/YljVN7ErW8K9jcVTrx0vr53OuJ1x2cEplm
u049ZtkVselLj/zyNyiib7v/zmcJF/ksiiK35YloDxLtKaqFUzX2FLNVb2/v
ezsng33dJ+cm7b+IW88eVm4sZhop81orfCqkucui/ltPHiFyWN6LHBY9kcPS
p167rmhPfK35St4pnlbIHWz2+WEVHba3O/FUJZqq1ivMaWFcTvrX+w5ObJlN
SmU7IqV18lkRc9s3Msokjye7Cw4PqKAx5QtcpX0up/epSvtiaMZSf2lfDCUO
aPhY2hfTT/fChizfTPL7bHX6zqUiNsP98E1pnb/IImVuv86x1CCnPOXmgXJ2
z+PoDs1GuVRTcmXwkvF5bPi06g9RRXmsc5WNjvR+JOuvvJVXvshbueEwMmta
QD7LyNcZttemgBI+1W6U3te0zkrftUQhlBU55615NbqaXN7uGSy993n1j7yV
2/XatUT78JNO9m3259Avm37bFTxKKGie1WDp/VTvY+8GdPkaTluXVOYrD+Pz
5tYaTaX3WQ0+1/S59DCYRt9r9n321GpWU3L5yBb7OCro+3jJ0Wl5lB+VoO9X
Vco67tHoIdV/PvhH3kqzTWc28OPDdoXsiObHh4qae+2Xjs/GsZEj2nwOYqEN
X8ybXFpGd8OfT5bqUUuSnRT0lqSyR+nPDnVdUELyQSeSpfrV+781N47yKWDh
3XcObzEnj1YauT2T6l2HHF99g593lmTi3oqfd/bm8dTz0nk3+sd7kOFme6YX
vEinLJ1V007LVrLXYwfbevaOIYXup23zF+fTdc/crR8+lDKHGg9Xqf52gc02
i9bbeX/7ofabbuNcpqU2SFaq103vclKq7yXl8i8H7o2PZn01pwyR6nt1Rd7K
NZG3kivyVrY9mHL0R984Zv3Qcdrlc3kUn2b9VKofXtrGRMa+az4r7fTtSEhB
JvnPjc6T6o0zZwff6qhRxgwab1zy1jyeNtt2fC3VJ/9yk+vE+w22TmPlA95v
sDTTA9ulfsOx3vq5vlg/PylyVXqKXJVdIlcl89qE7W20qmiHMav5XBLHir+H
thteFk+HvkTs1smopsLJzq69P71ia94ra0j10mtFfsoekZ+iLPJTao4pDVVy
TWTNIj0HHWkaSO7mHQOkOu2rPxQ9PdwLmeUr+5/WL/0o9emqFKmue4nIPfES
uSfyIvfk2D9yTBo9fDbT/GMCK8syaeN2M54NPeB4X6pXNx6+4TIfz7Be6e1r
+HiG5RUYzZfGMytv5Vi0GlrIhj8KGpe2JoodH/5oiFT33usf+SMW4+xCd62O
Zt16qKUZlhey7h+03kl1+zsnK9q8K89hrTprL/s9oZz2XTVyVEyLownNIz31
z0aypayFteakalqbkWht2TKajtdbj1oh1qOOjRnjwufL7FtOO2m+TO00lQ5I
8+XtC+MsMoND2G8HvUSX5hWkbvstWtqHMj3ut9HS6hTWIO9293ClUnKYpJok
7Vtp/4+ckZijU2d+VU1mg4Kc5qrJFtKTznLrpf04+35MXH72QgEb69VTzuVA
DuXY+F+R9u+0K+idNrR5OasNMLGy9o6jcWPbrpb2+5h1+lbB/y5quD7Biv9d
rFecxV7p78ro9+kiPw40qlbVmB8H1rqn4WXpOKi7OaRoNSmieK9BT3RvFzNT
99TF0v6jjQkuhudMKmjX2oYG32QzWNaPb7ek/Ur5/8gN8ftY2tloayZ7IG/n
s2NHHMXf9Wkr7XvqMiU0t59KCdsS5PmpYGoYLeqvuF3aJzWlZ8rMg2MK2Y+o
VS32mpWwzJWpMiHrYulAvfnCKTFfGKx1PNp2azbVplzs3iKhnCUpqLaX1ntn
idyQ8yI3pLfIDdEK7Cg/6GcRaafYvNkaV8jy7jrev/A0kQxG/c5T71BFH/WO
eU28msSUbs6Lk/aFrQtsQGduVFPDcRHOjpeD2PBJ23tI+8gCRQ6Il8gBMRA5
IL9MDml4GWextr57f9uFBrCcs49GSPvUnEWuh53I9ZAXuR4XRB6HhcjjKBJ5
HIfyVuoNfVnMPplukAtkMWy6it0I6f1R216N041CUtnGXbPvz3mYy3ZbdPGT
9ut5/iMvY2aZijrvD9nZnmfn8v6QnLbf/a8/1PjHc3Z5+wODZq1OZr8cpkn1
BhTjN7SjVG9wceBpWf68YEeWZkrPC2KNB5yUnhde/3hOKchceTfXPo8plY5M
XZVZzDymbJpf8SaDcv+qQ/D1bS+ej1XmSk7Gb/Jpx6TMp40U8ij73cdbjw8U
1OUsNxT1w+PF+m3CjJ698yZHsdudAlqO0y2nR54qD2te5dI9sW6Jet2mYj1t
9Y+CwRdPxlHtAxXXmQlFzO/tVU8XjyJa+P3wJ7uMZPK1WdLEd2EJaXTp//LE
vXx6/Ne63GttOfF7Fs3IWm/aNZtN17w60mlZEVtUM25nzKZ86lQvL2OcyGVQ
rddOol1rQfMhuVHlLEdvt0/B+TR2x2BOz8cJKWQadsbouE0829d2i/KU0jK2
d8cv3Y0Lcsn+5oYFjSrT2Y62r7ed8S5lb8K3fUjenU2t6uVfHBZ5E41EewfR
biPaj8gl/lawLSFDu289i7Vymfm6FZ2VQjNJy/VswOb9heRi/2zgmZv5LMd0
xJPeMrk0dPD1/IRd+WyF8YE0/kleKtOUDPjnpGaspFlQDssyWazYzauQ1jr7
tUuxyae+h8093R6WMz5G702ds0jl2vNPVs0SqeNCv+KzKaXsWPm0mXN/5dL1
941cFFkSDQg56aSmUUnfz11vlDoqiVTLtP+r7y3d3GsQPz5UYtoviB8f2n3B
qrt0fPC98XesF9/ffWvMz8AHqexs3rzX3TqV0dSpJ9T02uZQd5GXMUjkZWiL
468i2gfXy9F4znJWhk0uqPt8oZK8R6qL9siKXcjPO419YTycn3cafu/2Qem8
7/urvv21dqyob3f/a/38tXYjcf30mrjEKmepL7nPPJw10r6EDGR+tQlZzPuj
2PLDPjbxZFMo0zD1SzFlfJeR+a1bSBkyc1reuJVHrotV2vBPVvbxQNCopoVU
sHVf//2NMqlhxma3nTUFzPjQ+rFX/QrpsO5k2QeWWWza72t3miwqYicD9zyR
6sZf9+z0m1/nLO7c6Bb8OmcWO9c+ka7zQzNJdsgub3ZsetrPhb3KWdSXe5Uz
JuTTZGrfqnt0BKsYwbqky5axB7faz4r3yqctH7qUDN7lTbnXFb/wnyc9TctP
0s+bbOv6pVt0BK3votCe/zyNHpO8UPp5286hPru2vGTGSzTum44soZbZg3Kl
OvklbSv1+f3INnfQuc7vR5o99q63dD+K+9a3fr39vb/ux//d127iuOA4FYvj
0yqyw0h+fFjUsM53+fGhZVNkdKTj46V5TDr+rNWj6zn8+DP5rDuK0vE33+lx
lh9/xiZ0ko4/87cLqK3lx99/uk/svUFPqfSRdxvL4+XslLlTjbS/ILzf+SG8
/6Ghmy+14v0Pa/LQ9r7U/7j0mNabX5/Upmq0dH2yi0uyVaTrU/GbdYOgB6n0
ISJOuj7Z1QatekjXZ62oz0f9p7Ooz/97Hfi59gGxDrxh6mwvfn/RS8v+nfn9
xZz6Dfwh3V8hQT1K+f1F0S0HT+f3FzNcu+SGdH/hvsV9jPu32f0B8fz+JeXc
+I78/mVGU6YqS/cvrptD4jrC9RO5+ZkL75+Zh8bRZ7x/Zh36lLhI/fPDv/aX
+fqqiTrtnL/mQb6+HUQ/ryiOi5M4TtfE8Xk60S2Q9z8s58t+Dd7/kEPIWw+p
/8kQdX1Roq6vqajrE/up6j57iH1VW/brSc8dktN+ksyfO1SSPsVYeu58jjw5
l/ertPn4TyXer9LT3S8mS/2q1xmv+bxfpcY2g7byfpX63xryTepXq0Wex/16
OSAVov2RaE8Q7QvFesGQenkfhqJ9WL32oeLfC+qtMxzzfnVcbl0Rw2d//U/2
Uj1nhdPU6g78uuk6z1FfeWYuu999ZPd+jsk0wn64tfvaStYjS+1Sy99RzKxX
O5uqeWkU5PxURy21gN4M3RS0w6+ENbts7+wxJ7ZuvtBezBcOi/nCzQbp7ntm
VTCVvS7uOu+S6fvb7B7SOqeli4mHvGIpGzPuccjTvDz6uKIk/vmyZFqR3Uv1
4pxCdvfuVSeZp8WUf7STouehBNp0YfpqpZbVVLO4y/PFPYPZnWr1gtopCbRM
zAu8xbxAVswLDnc2HX3pWSkdvdrkiKtJPg0aPXPzsjVxdN/r3JOqpCKGT/Ov
PT2leu/HRku0+c+zlet77eM/z/RHBNlIPx9S02u2rX0Fq+p594Z3QDrL2G3e
a+X2eFpUbxyoLsaBlllj5rbeU80WjbmaqqR+gR1qtmWjVBd0xyJ2If/+rFvL
hEfGPYPJ65fLB+n7l7aKjF7Qq5KpRvOedGgq7f59onejQ/F0ynBrCT8+dPml
9kF+fNivseNDpeNzWYz3TojxXmMx3ru/X6eKn0fSGr1rIT+PtLaq/8e+/Dz2
unZly+pFBSylYsVimyalLOH28a+9P8bS973Zd8+2qmRH7PdoGh9O5/1MvmlL
Pr7KamW4cPnpCjLYqhM8dlEmnZRt6jovO4Ymz5B3tX6bRfvyDPxbD6qgNJMh
utI+4s6/7s6dJF9NPXe2dUv6HkZnTmxY5FQcR+f6k2NoFZ8n+dVafl9aQBFK
HYql/cjnmnvOSu1TQG37r+/v71VCgR2P9nDan0BauwxMvPeF05GDKmygajWt
vBKVIu2/3pbpPIP/PHNWvqzBf54deKWsKv18gdIXs5rPiezj4oxxWQOr2POJ
h7/tuxJDRf94r9R4ieFi/ncx85rzL/jfxYwepz6V/q6kzS43+HEgp4GP5vLj
QNe0T06VjsPAg58n/axJp/vRPV+Oya6gvXazLSQfI/edfvPBXUupbGDYqE6b
CsjYTS9U8jRmLkvczo8zH0dPW8iPM924O+SddJz7yDdPzZkVwAaS4wzX1xWs
ev3xNjtvZNMZhcV9spbHMs28JaZqOfx+fGBfUJVTRFmyu/sP9nhJR4t/XPNz
qqJR917mF0xMoS0PH9QM8njJ5gx9f5O3s5Qo+VSpXexLrXu+YV/qsD/7RCjy
zz4RtlHsE/kQal9ptiyX2qu+j9sTUMgiLRWUtRrnk7/4PX/62+C6/SYZf42r
g327iP72e7WGJv/+tDqgYhH//hTQslWh9P1bfdaLnOaXRIeXFCa3mVZEJdsL
Vs/RK6J1Ho/XPNTKJkP7F7bj+xVQ3PqHZnqehVQ8eUAMPz60LU53Kj8+tG5x
UTfp+Pydv+DpqyfyAuC0iPeYvsfFftW/f97Ld7L4+UfR1sYnairoyOCJ17Pa
JbMZjp7LOzdJpmPXR15vsbiK+gfdHuR+JJb1mbdmyfTlCWQxsNfVHItKUnrg
8vPN3kSmXN5+8GuZJLJ2zG1h/bWK7MdoHF55P5Zamt9pL+1PHyb8wVfCIywV
DuFg0R5er12nm9E+ft3Szfa9x/LrliZnXXkrXbf18xd2iPyFgeLfI8TnLtGO
egYleb/p4YurmNGudRskR+LZuvmSm0ERH7MkN4MtbPzdRnIz3qiMmM/vU5bU
6/5xfp+yj3rehtJ9ekw4/ruF6y8vPP8jov1YvfZXqf1M+PFk6v4/b/DjSS/1
HE2k4zl3oqN0PNmdBV2G8+NJ0afHLpSOZ9DeL9LxZFo2ur/48aS33Rv2l47n
37kD7r77RO7A15bfnTe0SyPVu/uqvphUku4Yk3Umu2L+mS/gJ/79Rnyainb1
g/Jh/Dpk29PWpvPrkPUfPcRMug4vp6VZ8uuQeb8zPsKvQ7Z5xeSl0nXoU7Th
ycwx8bRlwrVBOQ5VbIvBj4HSPvQHD0lx3bQqamERsNDZP5HtWXsxIdI2mub/
Iy+gceWJgqZV1UxxdWyc2aKnlDu9zzD9qmhav3J2Oe/nyXrcxgcdh6ay7yWZ
HaR+/kPRu4pmu6rYta22AxxWxVOcUl4T7bhYWlQv57e1eK59tbbfkXmjkt3p
1rxVsH04TXcLO3psSho5ivrUAPGpLOpU7XVWTuXPL8pUrYjlzy8aZubRVHp+
DZ+u+slVo5r2Xf9mdF/9NfW8tTvmIyVQ5k+182WrM5kWOzciwaqCVGoKdaX3
oUaGCeUmCimsqf/mwevjKulgm4IuMj1jKDlh71v+/em026s2/PuzDmaaLaTv
H2Zto+aolkRLXSLVHUZVsVE6H60kT8Y1YmMxPz5k+ePI+5WLnrKlg5ZrSMfn
hniu2YjnWlPxXFtGS6Tvye6ZKKW7qr9m+pM+VEjf86B4z2opPieK961r3m6R
5+eLWW1ecoyfL6o9ciJZOl9yX7338PEMfTw/flar31G02GbvQmk888K9zXl+
PKnmaql7oH04M843WiEdzznCz7cXfr6c8POjh9nt3fKmmDnIhrzomFxIDQfT
f/XqH21+qPFxEbt2pHsaHxfRa9r537hoYT2Hv7H4PfY+8/wKTmTR7fnrm9l0
rKCwLud+lWTydjGOUhPjqG1iHFXy7I9Xv0549T+EV79ZePXGwqs3F179N+U/
zny6cOZ/Cme+s3Dm7whnfr9w5qeK8cxFMZ5RE+OZu9bNTPl4jBatMV3Fx2Os
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
bGtjmUTbtOfqDs0qZWNXPbEdvSeEBQ0bOfv9RD4eqOyZa8D728bGtWfepPmS
l+8QR0ubWCoXLpmRcMnShEt26La+Zc7sBJp/d4byUYMqilbdPGzd+1hKTbc8
67InigKd006tUa6mPodsO41qK7koPWVX8PsuOIh9DtsUwPp7nMrvfT2XPFv0
X318ZxXT1wvvnNbpJOX3bNTNqyKVnoj2rqI9V7TnXu66bL52Fft/dV15XM5L
F69QIqmbLImLQpvClUSclPVqsdyUKCVSkqK4CiFtkm7JEpXWmyxJqYQ0botC
y9OqXSntz9MilbV3hhnv5z7v608/0++ZOducmd853690RM6HXyfdQ4WSkeM3
p1TBCoo/5kbxx/wp/tgdqUfih891QAG3uDxOLRUl17gNkHtFwUdqbXnbutDT
3el6+qsrkE6+60rS55W1UWTd/NNceLvtl+Jlux+io6uzD5M+sqCdyH9PCg9Z
lws3H9NFaF5Je4PVYg4oXhXILvHGeXmwQO2W+nh0RcpKpLmgBI47B0Xm1XVB
yKr4u+d5ibDSuypXf2UNuJjXn13d1wozhhV+U92ZB3GVZsmkTskp1fdg/G0e
DPUpuffaRKArKQqqGXIl4Kzb8LeZAhci1B6Mi+DEo7lhU+XjZapBXrX+o1f8
HbTbxm6XYA8PFC2DV5L+YvfSuYEhfQ9Buet3raoxXehEz+5Y0u8cRfEFNlG8
gcsUZ2CvZHKC+eJWlNcyztvl0GPoCDesIfftybQ/n/Xrt9M+/fAvD991fOxE
t326bFfEZYD1BxU90qeZG/Kb9aplnTBz0Z/TB5Ny4A8FiTkzOK8h3zhgV5hp
M2SVrVuy07wclkVMiCT9BfkubwL3m5RAv77VaAP5WhC8sXoH4YEdTpl17fel
XNRetv5qVkAy7DguvJL0Beznjglr2s1DpfmWtjH5T1B3eNJx0q8qns89hOWG
3CstHmC5QXeMsDyRW8meyCPPmhGMgZ1i7yJ5sMWgKYv0ZX/3i6j/wU36/jz1
R116Gq1Lf/DnZ6WoshJw2Ts7NdynHd1udq89Wd7w4x4gi2//WrK5TQ+PRzK+
z27h8fBH+OpmMt7u3F7Vhe0VsPlXB5tSvJ+uy12yi+BLvAwsSwvWTUB+Y9N5
IpLdaMbhmVKkrmmgd0ApxjgX+mvKTmUc5qE32c073nsXwXbKH8z4hBmPcBjl
t+ZRvuublOe6Qlbs8D23VDSzPf6ZQ1kH5FcH9a1Z3AhHAuU/fXlbiqzO6y/V
f9QGCoflXCenNMK1RO6mmNo81PZ79nCxXjNcrn0Ze6i3FZ6H7vMSPpaELipb
rrZ6x0NnDteWkbqv54e2KRyJr4FJrhNbeY86ka2sc4NjYxHUU57sGMqbfZDy
ZXv89qBjwfWrMG3urjrpVVxkpiflSOoSBShPtgFfPcwp2o93jPbn2dG+vKev
TjRNUboEph4VRpLHebCv29WY3PcO0PpsxvfOeN4Zfzbj02Y82qw+fi2tl19L
6+Qbg2092po5MDH3vNXHYy3I50nU8C+z3wLjz2Z82lmURzuxpzRq96QclG8b
O7tzQSsy6a32If34r4/1edaNfYmq9jpKZ5ny4Hf1obPSyoVgMWZqw/Tm22jR
Te1Rayd3gy/3hifpr29XP7PgwLgngCZcm3mipxMt/6DgrWNSD6pFpw236iYi
55vqrqrteF/IfzBacbAIVmp9dsfjkWeokQweD+tbxcLI+D8WOz7A80dR17wN
8fxB/Gj6GCk8f6cjZm74PeDk8ZS8B+VWDH9QwO9Jlhn0ey0aBSbTXKSux7WC
/dejZ0hfjGPg1dtOsWeRrYjT6My7dZA819uN9B9pUz5mxs/8jPIyr+7bUYLX
C8vlBCXxetFQULUfWS/jBWc84UGUH9yW9iu60f7FfNq3uLAAObcZ/IXqXjQb
h3WWoWOT59QT/A3GF874wxlvOIfyfO+kvN8C3O983/y8yXsZb7JGcEt0bR4k
/SY7oUQP58VXz4QSO/9T2TfCMyMaxn3xkLtf3oz+zC+fT/BGTGdmZ1+4VYp0
L/ESdTya0MeLco0En2Twi8jw4fga5Frg1YvtH2Jn3Kwn9m9qaF+H/Quuhnes
xf6FRIpdHIh/bX+kMgP7I8jtcivC/ojc519oIf4YlFg6UsP0FuTE9zks/tCB
LPMS6wh+iyrlIw+g/OSjKC85p8hgKNo4F6kE9rnj+AAc+XuWJD4YUz5yxk/O
eMkbKF8d469jvHWM743xvzHeNyPK1+ZD+drsKF8b43tj/G+M9+1bODyVqcV4
1RifWh39rsn4vlrp9032PZTxUMnTfpmf8V6x76ye9LurH/3eyvi6GH/XFfp9
s4DyaTF+LcarxXCfpSkONMN/ZnwYjB+D8WKYbJ++XTk0AY2PXVL7aWkXei7o
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

    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 285.07063662683004`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {2.3697248428185222`, 4.714694782360704}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.075973593201876, -2.119225872945207, 1.6276410352925361`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.672165458186323*^9, {3.6721655025894403`*^9, 3.672165532055406*^9}, 
   3.672165568247755*^9, {3.672165611582611*^9, 3.672165615596869*^9}, 
   3.672165704590456*^9, 3.6721657762420464`*^9, 3.6721658382954073`*^9, 
   3.672165869454502*^9, {3.6721659473324347`*^9, 3.672165973411446*^9}, {
   3.672166031395152*^9, 3.672166034458486*^9}, 3.672166272627495*^9, 
   3.67216631047453*^9, 3.672166370538845*^9, {3.6721664121253223`*^9, 
   3.6721664360758266`*^9}, {3.6721664838649693`*^9, 3.6721664944419947`*^9}, 
   3.672166591940181*^9, 3.6721666388730793`*^9, {3.672166675983521*^9, 
   3.672166711499555*^9}, 3.672167274671649*^9, 3.672167331651832*^9, {
   3.672167479421955*^9, 3.672167526799212*^9}, 3.672172451304741*^9, 
   3.672175496790612*^9, {3.67217560738769*^9, 3.67217561925463*^9}, 
   3.6723412722554207`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VectorPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qs0", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"qs0", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6723412793951683`*^9, 3.6723413327444468`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
    {Arrowheads[{{0.035100262415228047`, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, -0.9349611519491352}, \
{-0.9582390359176647, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.03261540359966496, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, -0.7987121235921334}, \
{-0.9582390359176647, -0.915573590693581}}]}, 
    {Arrowheads[{{0.029805344646352944`, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, -0.6636535325643205}, \
{-0.9582390359176647, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.026833415499577285`, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, -0.5296264952329386}, \
{-0.9582390359176647, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.02392557445607539, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, -0.396451111627548}, \
{-0.9582390359176647, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.021389916033760437`, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, -0.26393013062831633`}, \
{-0.9582390359176647, -0.30749844080025557`}}]}, 
    {Arrowheads[{{0.01961210605329547, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, -0.1318529686575873}, \
{-0.9582390359176647, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.018964752719524542`, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, -2.048823669144951*^-16}, \
{-0.9582390359176647, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.019612106053295466`, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, 
      0.1318529686575869}, {-0.9582390359176647, 0.15386131705669837`}}]}, 
    {Arrowheads[{{0.021389916033760427`, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, 
      0.2639301306283159}, {-0.9582390359176647, 0.307498440800255}}]}, 
    {Arrowheads[{{0.02392557445607539, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, 
      0.39645111162754754`}, {-0.9582390359176647, 0.4606917455153091}}]}, 
    {Arrowheads[{{0.026833415499577285`, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, 
      0.5296264952329381}, {-0.9582390359176647, 0.6132306476242042}}]}, 
    {Arrowheads[{{0.029805344646352944`, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, 0.66365353256432}, {-0.9582390359176647,
       0.7649178960071079}}]}, 
    {Arrowheads[{{0.03261540359966496, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, 
      0.798712123592133}, {-0.9582390359176647, 0.9155735906935806}}]}, 
    {Arrowheads[{{0.035100262415228047`, 1.}}], 
     ArrowBox[{{-1.0417609640823353`, 
      0.9349611519491348}, {-0.9582390359176647, 1.0650388480508644`}}]}, 
    {Arrowheads[{{0.03742047957023938, 1.}}], 
     ArrowBox[{{-0.9077381064612853, -0.9349611519491352}, \
{-0.8065476078244291, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.03510026241522804, 1.}}], 
     ArrowBox[{{-0.9077381064612853, -0.7987121235921334}, \
{-0.8065476078244291, -0.915573590693581}}]}, 
    {Arrowheads[{{0.03250572932786945, 1.}}], 
     ArrowBox[{{-0.9077381064612853, -0.6636535325643205}, \
{-0.8065476078244291, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.02980429594910416, 1.}}], 
     ArrowBox[{{-0.9077381064612853, -0.5296264952329386}, \
{-0.8065476078244291, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.027215748799216226`, 1.}}], 
     ArrowBox[{{-0.9077381064612853, -0.396451111627548}, \
{-0.8065476078244291, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.025015842531886746`, 1.}}], 
     ArrowBox[{{-0.9077381064612853, -0.26393013062831633`}, \
{-0.8065476078244291, -0.3074984408002555}}]}, 
    {Arrowheads[{{0.023513795386847718`, 1.}}], 
     ArrowBox[{{-0.9077381064612853, -0.1318529686575873}, \
{-0.8065476078244291, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.022976634117327668`, 1.}}], 
     ArrowBox[{{-0.9077381064612853, -2.048823669144951*^-16}, \
{-0.8065476078244291, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.023513795386847714`, 1.}}], 
     ArrowBox[{{-0.9077381064612853, 
      0.1318529686575869}, {-0.8065476078244291, 0.15386131705669837`}}]}, 
    {Arrowheads[{{0.02501584253188674, 1.}}], 
     ArrowBox[{{-0.9077381064612853, 
      0.2639301306283159}, {-0.8065476078244291, 0.307498440800255}}]}, 
    {Arrowheads[{{0.027215748799216226`, 1.}}], 
     ArrowBox[{{-0.9077381064612853, 
      0.39645111162754754`}, {-0.8065476078244291, 0.4606917455153091}}]}, 
    {Arrowheads[{{0.02980429594910416, 1.}}], 
     ArrowBox[{{-0.9077381064612853, 
      0.5296264952329381}, {-0.8065476078244291, 0.6132306476242042}}]}, 
    {Arrowheads[{{0.03250572932786945, 1.}}], 
     ArrowBox[{{-0.9077381064612853, 0.66365353256432}, {-0.8065476078244291, 
      0.7649178960071079}}]}, 
    {Arrowheads[{{0.03510026241522804, 1.}}], 
     ArrowBox[{{-0.9077381064612853, 0.798712123592133}, {-0.8065476078244291,
       0.9155735906935806}}]}, 
    {Arrowheads[{{0.03742047957023938, 1.}}], 
     ArrowBox[{{-0.9077381064612853, 
      0.9349611519491348}, {-0.8065476078244291, 1.0650388480508644`}}]}, 
    {Arrowheads[{{0.039695066113408374`, 1.}}], 
     ArrowBox[{{-0.7726844475853445, -0.9349611519491352}, \
{-0.6558869809860843, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.03751578873086676, 1.}}], 
     ArrowBox[{{-0.7726844475853445, -0.7987121235921334}, \
{-0.6558869809860843, -0.915573590693581}}]}, 
    {Arrowheads[{{0.03510026241522805, 1.}}], 
     ArrowBox[{{-0.7726844475853445, -0.6636535325643205}, \
{-0.6558869809860843, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.03261444525824325, 1.}}], 
     ArrowBox[{{-0.7726844475853445, -0.5296264952329386}, \
{-0.6558869809860843, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.030267192885750055`, 1.}}], 
     ArrowBox[{{-0.7726844475853445, -0.396451111627548}, \
{-0.6558869809860843, -0.4606917455153096}}]}, 
    {Arrowheads[{{0.028305447533316135`, 1.}}], 
     ArrowBox[{{-0.7726844475853445, -0.26393013062831633`}, \
{-0.6558869809860843, -0.3074984408002555}}]}, 
    {Arrowheads[{{0.026987118334044113`, 1.}}], 
     ArrowBox[{{-0.7726844475853445, -0.1318529686575873}, \
{-0.6558869809860843, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.026520401539997553`, 1.}}], 
     ArrowBox[{{-0.7726844475853445, -2.048823669144951*^-16}, \
{-0.6558869809860843, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.02698711833404411, 1.}}], 
     ArrowBox[{{-0.7726844475853445, 
      0.1318529686575869}, {-0.6558869809860843, 0.15386131705669837`}}]}, 
    {Arrowheads[{{0.02830544753331611, 1.}}], 
     ArrowBox[{{-0.7726844475853445, 
      0.2639301306283159}, {-0.6558869809860844, 0.307498440800255}}]}, 
    {Arrowheads[{{0.03026719288575005, 1.}}], 
     ArrowBox[{{-0.7726844475853445, 
      0.39645111162754754`}, {-0.6558869809860843, 0.4606917455153091}}]}, 
    {Arrowheads[{{0.03261444525824325, 1.}}], 
     ArrowBox[{{-0.7726844475853445, 
      0.5296264952329381}, {-0.6558869809860843, 0.6132306476242042}}]}, 
    {Arrowheads[{{0.03510026241522804, 1.}}], 
     ArrowBox[{{-0.7726844475853445, 0.66365353256432}, {-0.6558869809860843, 
      0.7649178960071078}}]}, 
    {Arrowheads[{{0.03751578873086676, 1.}}], 
     ArrowBox[{{-0.7726844475853445, 0.798712123592133}, {-0.6558869809860843,
       0.9155735906935806}}]}, 
    {Arrowheads[{{0.039695066113408374`, 1.}}], 
     ArrowBox[{{-0.7726844475853445, 
      0.9349611519491348}, {-0.6558869809860843, 1.0650388480508644`}}]}, 
    {Arrowheads[{{0.041761521235017134`, 1.}}], 
     ArrowBox[{{-0.6364410033366619, -0.9349611519491352}, \
{-0.5064161395204814, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.03969585351411344, 1.}}], 
     ArrowBox[{{-0.6364410033366619, -0.7987121235921334}, \
{-0.5064161395204815, -0.915573590693581}}]}, 
    {Arrowheads[{{0.03742131483169447, 1.}}], 
     ArrowBox[{{-0.6364410033366619, -0.6636535325643205}, \
{-0.5064161395204814, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.03510026241522805, 1.}}], 
     ArrowBox[{{-0.6364410033366619, -0.5296264952329386}, \
{-0.5064161395204814, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.0329306748685496, 1.}}], 
     ArrowBox[{{-0.6364410033366619, -0.3964511116275479}, \
{-0.5064161395204814, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.031137192265460228`, 1.}}], 
     ArrowBox[{{-0.6364410033366619, -0.26393013062831633`}, \
{-0.5064161395204815, -0.3074984408002555}}]}, 
    {Arrowheads[{{0.02994379632061746, 1.}}], 
     ArrowBox[{{-0.6364410033366619, -0.1318529686575873}, \
{-0.5064161395204815, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.02952385611598915, 1.}}], 
     ArrowBox[{{-0.6364410033366619, -2.048823669144951*^-16}, \
{-0.5064161395204814, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.029943796320617454`, 1.}}], 
     ArrowBox[{{-0.6364410033366619, 
      0.1318529686575869}, {-0.5064161395204815, 0.15386131705669837`}}]}, 
    {Arrowheads[{{0.031137192265460228`, 1.}}], 
     ArrowBox[{{-0.6364410033366619, 
      0.2639301306283159}, {-0.5064161395204815, 0.307498440800255}}]}, 
    {Arrowheads[{{0.03293067486854959, 1.}}], 
     ArrowBox[{{-0.6364410033366619, 
      0.39645111162754754`}, {-0.5064161395204814, 0.4606917455153091}}]}, 
    {Arrowheads[{{0.03510026241522805, 1.}}], 
     ArrowBox[{{-0.6364410033366619, 
      0.5296264952329381}, {-0.5064161395204814, 0.6132306476242042}}]}, 
    {Arrowheads[{{0.03742131483169445, 1.}}], 
     ArrowBox[{{-0.6364410033366619, 0.66365353256432}, {-0.5064161395204815, 
      0.7649178960071079}}]}, 
    {Arrowheads[{{0.03969585351411344, 1.}}], 
     ArrowBox[{{-0.6364410033366619, 0.798712123592133}, {-0.5064161395204815,
       0.9155735906935806}}]}, 
    {Arrowheads[{{0.041761521235017134`, 1.}}], 
     ArrowBox[{{-0.6364410033366619, 
      0.9349611519491348}, {-0.5064161395204814, 1.0650388480508644`}}]}, 
    {Arrowheads[{{0.043492800900637944`, 1.}}], 
     ArrowBox[{{-0.4988730296648194, -0.9349611519491352}, \
{-0.3582698274780382, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.041513369660070965`, 1.}}], 
     ArrowBox[{{-0.4988730296648194, -0.7987121235921334}, \
{-0.35826982747803815`, -0.915573590693581}}]}, 
    {Arrowheads[{{0.03934404501385873, 1.}}], 
     ArrowBox[{{-0.4988730296648194, -0.6636535325643205}, \
{-0.3582698274780382, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.03714333716748694, 1.}}], 
     ArrowBox[{{-0.4988730296648194, -0.5296264952329386}, \
{-0.35826982747803815`, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.03510026241522803, 1.}}], 
     ArrowBox[{{-0.4988730296648194, -0.396451111627548}, \
{-0.35826982747803815`, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.03342340222801958, 1.}}], 
     ArrowBox[{{-0.4988730296648194, -0.26393013062831633`}, \
{-0.35826982747803815`, -0.3074984408002555}}]}, 
    {Arrowheads[{{0.032314547999474974`, 1.}}], 
     ArrowBox[{{-0.4988730296648194, -0.1318529686575873}, \
{-0.3582698274780381, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.03192580702625035, 1.}}], 
     ArrowBox[{{-0.4988730296648194, -2.048823669144951*^-16}, \
{-0.35826982747803815`, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.03231454799947496, 1.}}], 
     ArrowBox[{{-0.4988730296648194, 
      0.1318529686575869}, {-0.35826982747803815`, 0.15386131705669837`}}]}, 
    {Arrowheads[{{0.03342340222801957, 1.}}], 
     ArrowBox[{{-0.4988730296648194, 
      0.2639301306283159}, {-0.35826982747803815`, 0.307498440800255}}]}, 
    {Arrowheads[{{0.03510026241522803, 1.}}], 
     ArrowBox[{{-0.4988730296648194, 
      0.39645111162754754`}, {-0.35826982747803815`, 0.4606917455153091}}]}, 
    {Arrowheads[{{0.03714333716748694, 1.}}], 
     ArrowBox[{{-0.4988730296648194, 
      0.5296264952329381}, {-0.35826982747803815`, 0.6132306476242042}}]}, 
    {Arrowheads[{{0.03934404501385874, 1.}}], 
     ArrowBox[{{-0.4988730296648194, 
      0.66365353256432}, {-0.35826982747803815`, 0.7649178960071079}}]}, 
    {Arrowheads[{{0.04151336966007095, 1.}}], 
     ArrowBox[{{-0.4988730296648194, 0.798712123592133}, {-0.3582698274780382,
       0.9155735906935806}}]}, 
    {Arrowheads[{{0.04349280090063795, 1.}}], 
     ArrowBox[{{-0.4988730296648194, 
      0.9349611519491348}, {-0.35826982747803815`, 1.0650388480508644`}}]}, 
    {Arrowheads[{{0.04479428909252182, 1.}}], 
     ArrowBox[{{-0.3598727677919283, -0.9349611519491352}, \
{-0.21155580363664356`, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.0428749864799464, 1.}}], 
     ArrowBox[{{-0.3598727677919283, -0.7987121235921334}, \
{-0.21155580363664356`, -0.915573590693581}}]}, 
    {Arrowheads[{{0.04077816184153509, 1.}}], 
     ArrowBox[{{-0.3598727677919283, -0.6636535325643205}, \
{-0.21155580363664356`, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.038659178742693215`, 1.}}], 
     ArrowBox[{{-0.3598727677919283, -0.5296264952329386}, \
{-0.21155580363664356`, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.03670058619068307, 1.}}], 
     ArrowBox[{{-0.3598727677919283, -0.3964511116275479}, \
{-0.21155580363664356`, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.035100262415228047`, 1.}}], 
     ArrowBox[{{-0.3598727677919283, -0.26393013062831633`}, \
{-0.21155580363664356`, -0.30749844080025557`}}]}, 
    {Arrowheads[{{0.03404606610949725, 1.}}], 
     ArrowBox[{{-0.3598727677919283, -0.1318529686575873}, \
{-0.21155580363664356`, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.033677318174095486`, 1.}}], 
     ArrowBox[{{-0.3598727677919283, -2.048823669144951*^-16}, \
{-0.21155580363664356`, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.03404606610949725, 1.}}], 
     ArrowBox[{{-0.3598727677919283, 
      0.1318529686575869}, {-0.21155580363664356`, 0.15386131705669837`}}]}, 
    {Arrowheads[{{0.03510026241522804, 1.}}], 
     ArrowBox[{{-0.3598727677919283, 
      0.2639301306283159}, {-0.21155580363664356`, 0.307498440800255}}]}, 
    {Arrowheads[{{0.03670058619068306, 1.}}], 
     ArrowBox[{{-0.3598727677919283, 
      0.39645111162754754`}, {-0.21155580363664356`, 0.4606917455153091}}]}, 
    {Arrowheads[{{0.038659178742693215`, 1.}}], 
     ArrowBox[{{-0.3598727677919283, 
      0.5296264952329381}, {-0.21155580363664356`, 0.6132306476242042}}]}, 
    {Arrowheads[{{0.04077816184153508, 1.}}], 
     ArrowBox[{{-0.3598727677919283, 
      0.66365353256432}, {-0.21155580363664356`, 0.7649178960071078}}]}, 
    {Arrowheads[{{0.0428749864799464, 1.}}], 
     ArrowBox[{{-0.3598727677919283, 
      0.798712123592133}, {-0.21155580363664356`, 0.9155735906935806}}]}, 
    {Arrowheads[{{0.04479428909252182, 1.}}], 
     ArrowBox[{{-0.3598727677919283, 
      0.9349611519491348}, {-0.21155580363664356`, 1.0650388480508644`}}]}, 
    {Arrowheads[{{0.04560068134787059, 1.}}], 
     ArrowBox[{{-0.21936163963383856`, -0.9349611519491352}, \
{-0.06635264608044758, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.0437167961971277, 1.}}], 
     ArrowBox[{{-0.21936163963383853`, -0.7987121235921334}, \
{-0.0663526460804476, -0.915573590693581}}]}, 
    {Arrowheads[{{0.04166236055794296, 1.}}], 
     ArrowBox[{{-0.21936163963383853`, -0.6636535325643205}, \
{-0.06635264608044761, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.03959073004056778, 1.}}], 
     ArrowBox[{{-0.21936163963383856`, -0.5296264952329386}, \
{-0.06635264608044758, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.03768058957640351, 1.}}], 
     ArrowBox[{{-0.21936163963383856`, -0.396451111627548}, \
{-0.06635264608044758, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.03612370725304206, 1.}}], 
     ArrowBox[{{-0.21936163963383856`, -0.26393013062831633`}, \
{-0.06635264608044758, -0.3074984408002555}}]}, 
    {Arrowheads[{{0.03510026241522803, 1.}}], 
     ArrowBox[{{-0.21936163963383853`, -0.1318529686575873}, \
{-0.0663526460804476, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.034742705183748654`, 1.}}], 
     ArrowBox[{{-0.21936163963383856`, -2.048823669144951*^-16}, \
{-0.06635264608044758, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.03510026241522803, 1.}}], 
     ArrowBox[{{-0.21936163963383853`, 
      0.1318529686575869}, {-0.0663526460804476, 0.15386131705669837`}}]}, 
    {Arrowheads[{{0.03612370725304206, 1.}}], 
     ArrowBox[{{-0.21936163963383856`, 
      0.2639301306283159}, {-0.06635264608044758, 0.307498440800255}}]}, 
    {Arrowheads[{{0.0376805895764035, 1.}}], 
     ArrowBox[{{-0.21936163963383853`, 
      0.39645111162754754`}, {-0.0663526460804476, 0.4606917455153091}}]}, 
    {Arrowheads[{{0.03959073004056778, 1.}}], 
     ArrowBox[{{-0.21936163963383856`, 
      0.5296264952329381}, {-0.06635264608044758, 0.6132306476242042}}]}, 
    {Arrowheads[{{0.04166236055794296, 1.}}], 
     ArrowBox[{{-0.21936163963383856`, 
      0.66365353256432}, {-0.06635264608044758, 0.7649178960071078}}]}, 
    {Arrowheads[{{0.0437167961971277, 1.}}], 
     ArrowBox[{{-0.21936163963383853`, 
      0.798712123592133}, {-0.0663526460804476, 0.9155735906935806}}]}, 
    {Arrowheads[{{0.04560068134787058, 1.}}], 
     ArrowBox[{{-0.21936163963383853`, 
      0.9349611519491348}, {-0.0663526460804476, 1.0650388480508644`}}]}, 
    {Arrowheads[{{0.045873685240266304`, 1.}}], 
     ArrowBox[{{-0.07729184870909488, -0.9349611519491352}, {
      0.07729184870909443, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.044001490064248895`, 1.}}], 
     ArrowBox[{{-0.07729184870909488, -0.7987121235921334}, {
      0.07729184870909443, -0.915573590693581}}]}, 
    {Arrowheads[{{0.04196099552433232, 1.}}], 
     ArrowBox[{{-0.0772918487090949, -0.6636535325643205}, {
      0.07729184870909446, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.03990487142289913, 1.}}], 
     ArrowBox[{{-0.07729184870909489, -0.5296264952329386}, {
      0.07729184870909445, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.038010520766734626`, 1.}}], 
     ArrowBox[{{-0.07729184870909489, -0.396451111627548}, {
      0.07729184870909445, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.03646772660636358, 1.}}], 
     ArrowBox[{{-0.07729184870909488, -0.26393013062831633`}, {
      0.07729184870909443, -0.3074984408002555}}]}, 
    {Arrowheads[{{0.03545421385041369, 1.}}], 
     ArrowBox[{{-0.0772918487090949, -0.1318529686575873}, {
      0.07729184870909446, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.03510026241522804, 1.}}], 
     ArrowBox[{{-0.07729184870909488, -2.048823669144951*^-16}, {
      0.07729184870909443, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.03545421385041368, 1.}}], 
     ArrowBox[{{-0.07729184870909489, 0.1318529686575869}, {
      0.07729184870909445, 0.15386131705669834`}}]}, 
    {Arrowheads[{{0.036467726606363576`, 1.}}], 
     ArrowBox[{{-0.07729184870909488, 0.2639301306283159}, {
      0.07729184870909443, 0.307498440800255}}]}, 
    {Arrowheads[{{0.03801052076673461, 1.}}], 
     ArrowBox[{{-0.07729184870909488, 0.39645111162754754`}, {
      0.07729184870909443, 0.4606917455153091}}]}, 
    {Arrowheads[{{0.03990487142289912, 1.}}], 
     ArrowBox[{{-0.07729184870909488, 0.5296264952329381}, {
      0.07729184870909443, 0.6132306476242042}}]}, 
    {Arrowheads[{{0.04196099552433232, 1.}}], 
     ArrowBox[{{-0.07729184870909489, 0.66365353256432}, {0.07729184870909445,
       0.7649178960071079}}]}, 
    {Arrowheads[{{0.044001490064248895`, 1.}}], 
     ArrowBox[{{-0.07729184870909488, 0.798712123592133}, {
      0.07729184870909443, 0.9155735906935806}}]}, 
    {Arrowheads[{{0.045873685240266304`, 1.}}], 
     ArrowBox[{{-0.07729184870909488, 0.9349611519491348}, {
      0.07729184870909443, 1.0650388480508644`}}]}, 
    {Arrowheads[{{0.04560068134787059, 1.}}], 
     ArrowBox[{{0.06635264608044714, -0.9349611519491352}, {
      0.21936163963383812`, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.043716796197127705`, 1.}}], 
     ArrowBox[{{0.06635264608044715, -0.7987121235921334}, {
      0.21936163963383815`, -0.915573590693581}}]}, 
    {Arrowheads[{{0.04166236055794296, 1.}}], 
     ArrowBox[{{0.06635264608044716, -0.6636535325643205}, {
      0.2193616396338381, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.03959073004056778, 1.}}], 
     ArrowBox[{{0.06635264608044714, -0.5296264952329386}, {
      0.21936163963383812`, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.03768058957640351, 1.}}], 
     ArrowBox[{{0.06635264608044714, -0.396451111627548}, {
      0.21936163963383812`, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.03612370725304206, 1.}}], 
     ArrowBox[{{0.06635264608044714, -0.26393013062831633`}, {
      0.21936163963383812`, -0.3074984408002555}}]}, 
    {Arrowheads[{{0.035100262415228047`, 1.}}], 
     ArrowBox[{{0.06635264608044715, -0.1318529686575873}, {
      0.21936163963383815`, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.034742705183748654`, 1.}}], 
     ArrowBox[{{0.06635264608044714, -2.048823669144951*^-16}, {
      0.21936163963383812`, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.035100262415228047`, 1.}}], 
     ArrowBox[{{0.06635264608044715, 0.1318529686575869}, {
      0.21936163963383815`, 0.15386131705669837`}}]}, 
    {Arrowheads[{{0.03612370725304206, 1.}}], 
     ArrowBox[{{0.06635264608044714, 0.2639301306283159}, {
      0.21936163963383812`, 0.307498440800255}}]}, 
    {Arrowheads[{{0.03768058957640351, 1.}}], 
     ArrowBox[{{0.06635264608044715, 0.39645111162754754`}, {
      0.21936163963383815`, 0.4606917455153091}}]}, 
    {Arrowheads[{{0.03959073004056778, 1.}}], 
     ArrowBox[{{0.06635264608044714, 0.5296264952329381}, {
      0.21936163963383812`, 0.6132306476242042}}]}, 
    {Arrowheads[{{0.04166236055794296, 1.}}], 
     ArrowBox[{{0.06635264608044714, 0.66365353256432}, {0.21936163963383812`,
       0.7649178960071078}}]}, 
    {Arrowheads[{{0.043716796197127705`, 1.}}], 
     ArrowBox[{{0.06635264608044715, 0.798712123592133}, {
      0.21936163963383815`, 0.9155735906935806}}]}, 
    {Arrowheads[{{0.04560068134787059, 1.}}], 
     ArrowBox[{{0.06635264608044715, 0.9349611519491348}, {
      0.21936163963383815`, 1.0650388480508644`}}]}, 
    {Arrowheads[{{0.04479428909252182, 1.}}], 
     ArrowBox[{{0.2115558036366431, -0.9349611519491352}, {
      0.35987276779192784`, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.0428749864799464, 1.}}], 
     ArrowBox[{{0.2115558036366431, -0.7987121235921334}, {
      0.35987276779192784`, -0.915573590693581}}]}, 
    {Arrowheads[{{0.04077816184153509, 1.}}], 
     ArrowBox[{{0.2115558036366431, -0.6636535325643205}, {
      0.35987276779192784`, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.038659178742693215`, 1.}}], 
     ArrowBox[{{0.2115558036366431, -0.5296264952329386}, {
      0.35987276779192784`, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.03670058619068307, 1.}}], 
     ArrowBox[{{0.2115558036366431, -0.3964511116275479}, {
      0.35987276779192784`, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.035100262415228047`, 1.}}], 
     ArrowBox[{{0.2115558036366431, -0.26393013062831633`}, {
      0.35987276779192784`, -0.3074984408002555}}]}, 
    {Arrowheads[{{0.03404606610949725, 1.}}], 
     ArrowBox[{{0.2115558036366431, -0.1318529686575873}, {
      0.35987276779192784`, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.033677318174095486`, 1.}}], 
     ArrowBox[{{0.2115558036366431, -2.048823669144951*^-16}, {
      0.35987276779192784`, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.03404606610949725, 1.}}], 
     ArrowBox[{{0.2115558036366431, 0.1318529686575869}, {
      0.35987276779192784`, 0.15386131705669837`}}]}, 
    {Arrowheads[{{0.03510026241522804, 1.}}], 
     ArrowBox[{{0.2115558036366431, 0.2639301306283159}, {
      0.35987276779192784`, 0.307498440800255}}]}, 
    {Arrowheads[{{0.03670058619068306, 1.}}], 
     ArrowBox[{{0.2115558036366431, 0.39645111162754754`}, {
      0.35987276779192784`, 0.4606917455153091}}]}, 
    {Arrowheads[{{0.038659178742693215`, 1.}}], 
     ArrowBox[{{0.2115558036366431, 0.5296264952329381}, {
      0.35987276779192784`, 0.6132306476242042}}]}, 
    {Arrowheads[{{0.04077816184153508, 1.}}], 
     ArrowBox[{{0.2115558036366431, 0.66365353256432}, {0.35987276779192784`, 
      0.7649178960071078}}]}, 
    {Arrowheads[{{0.0428749864799464, 1.}}], 
     ArrowBox[{{0.2115558036366431, 0.798712123592133}, {0.35987276779192784`,
       0.9155735906935806}}]}, 
    {Arrowheads[{{0.04479428909252182, 1.}}], 
     ArrowBox[{{0.2115558036366431, 0.9349611519491348}, {
      0.35987276779192784`, 1.0650388480508644`}}]}, 
    {Arrowheads[{{0.04349280090063796, 1.}}], 
     ArrowBox[{{0.3582698274780377, -0.9349611519491352}, {
      0.498873029664819, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.041513369660070965`, 1.}}], 
     ArrowBox[{{0.3582698274780377, -0.7987121235921334}, {
      0.49887302966481895`, -0.915573590693581}}]}, 
    {Arrowheads[{{0.03934404501385874, 1.}}], 
     ArrowBox[{{0.3582698274780377, -0.6636535325643205}, {
      0.49887302966481895`, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.03714333716748694, 1.}}], 
     ArrowBox[{{0.3582698274780377, -0.5296264952329386}, {
      0.49887302966481895`, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.03510026241522805, 1.}}], 
     ArrowBox[{{0.3582698274780377, -0.396451111627548}, {
      0.498873029664819, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.033423402228019594`, 1.}}], 
     ArrowBox[{{0.3582698274780377, -0.26393013062831633`}, {
      0.498873029664819, -0.3074984408002555}}]}, 
    {Arrowheads[{{0.032314547999474974`, 1.}}], 
     ArrowBox[{{0.3582698274780377, -0.1318529686575873}, {
      0.498873029664819, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.031925807026250363`, 1.}}], 
     ArrowBox[{{0.3582698274780377, -2.048823669144951*^-16}, {
      0.498873029664819, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.03231454799947496, 1.}}], 
     ArrowBox[{{0.3582698274780377, 0.1318529686575869}, {
      0.49887302966481895`, 0.15386131705669837`}}]}, 
    {Arrowheads[{{0.03342340222801957, 1.}}], 
     ArrowBox[{{0.3582698274780377, 0.2639301306283159}, {
      0.49887302966481895`, 0.307498440800255}}]}, 
    {Arrowheads[{{0.03510026241522805, 1.}}], 
     ArrowBox[{{0.3582698274780377, 0.39645111162754754`}, {0.498873029664819,
       0.4606917455153091}}]}, 
    {Arrowheads[{{0.03714333716748695, 1.}}], 
     ArrowBox[{{0.3582698274780377, 0.5296264952329381}, {0.498873029664819, 
      0.6132306476242042}}]}, 
    {Arrowheads[{{0.03934404501385875, 1.}}], 
     ArrowBox[{{0.3582698274780377, 0.66365353256432}, {0.498873029664819, 
      0.7649178960071079}}]}, 
    {Arrowheads[{{0.041513369660070965`, 1.}}], 
     ArrowBox[{{0.3582698274780377, 0.798712123592133}, {0.49887302966481895`,
       0.9155735906935806}}]}, 
    {Arrowheads[{{0.04349280090063796, 1.}}], 
     ArrowBox[{{0.3582698274780377, 0.9349611519491348}, {0.498873029664819, 
      1.0650388480508644`}}]}, 
    {Arrowheads[{{0.041761521235017134`, 1.}}], 
     ArrowBox[{{0.5064161395204809, -0.9349611519491352}, {
      0.6364410033366614, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.03969585351411346, 1.}}], 
     ArrowBox[{{0.5064161395204809, -0.7987121235921334}, {
      0.6364410033366614, -0.915573590693581}}]}, 
    {Arrowheads[{{0.03742131483169447, 1.}}], 
     ArrowBox[{{0.5064161395204809, -0.6636535325643205}, {
      0.6364410033366614, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.03510026241522805, 1.}}], 
     ArrowBox[{{0.5064161395204809, -0.5296264952329386}, {
      0.6364410033366614, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.03293067486854959, 1.}}], 
     ArrowBox[{{0.5064161395204809, -0.396451111627548}, {
      0.6364410033366614, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.031137192265460256`, 1.}}], 
     ArrowBox[{{0.5064161395204809, -0.26393013062831633`}, {
      0.6364410033366614, -0.3074984408002555}}]}, 
    {Arrowheads[{{0.029943796320617486`, 1.}}], 
     ArrowBox[{{0.5064161395204809, -0.1318529686575873}, {
      0.6364410033366614, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.02952385611598915, 1.}}], 
     ArrowBox[{{0.5064161395204809, -2.048823669144951*^-16}, {
      0.6364410033366614, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.02994379632061748, 1.}}], 
     ArrowBox[{{0.5064161395204809, 0.1318529686575869}, {0.6364410033366614, 
      0.15386131705669837`}}]}, 
    {Arrowheads[{{0.03113719226546025, 1.}}], 
     ArrowBox[{{0.5064161395204809, 0.2639301306283159}, {0.6364410033366614, 
      0.307498440800255}}]}, 
    {Arrowheads[{{0.03293067486854959, 1.}}], 
     ArrowBox[{{0.5064161395204809, 0.39645111162754754`}, {
      0.6364410033366614, 0.4606917455153091}}]}, 
    {Arrowheads[{{0.03510026241522805, 1.}}], 
     ArrowBox[{{0.5064161395204809, 0.5296264952329381}, {0.6364410033366614, 
      0.6132306476242042}}]}, 
    {Arrowheads[{{0.03742131483169447, 1.}}], 
     ArrowBox[{{0.5064161395204809, 0.66365353256432}, {0.6364410033366614, 
      0.7649178960071079}}]}, 
    {Arrowheads[{{0.03969585351411346, 1.}}], 
     ArrowBox[{{0.5064161395204809, 0.798712123592133}, {0.6364410033366614, 
      0.9155735906935806}}]}, 
    {Arrowheads[{{0.041761521235017134`, 1.}}], 
     ArrowBox[{{0.5064161395204809, 0.9349611519491348}, {0.6364410033366614, 
      1.0650388480508644`}}]}, 
    {Arrowheads[{{0.039695066113408374`, 1.}}], 
     ArrowBox[{{0.6558869809860839, -0.9349611519491352}, {
      0.772684447585344, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.03751578873086676, 1.}}], 
     ArrowBox[{{0.6558869809860839, -0.7987121235921334}, {
      0.772684447585344, -0.915573590693581}}]}, 
    {Arrowheads[{{0.03510026241522805, 1.}}], 
     ArrowBox[{{0.6558869809860839, -0.6636535325643205}, {
      0.772684447585344, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.03261444525824325, 1.}}], 
     ArrowBox[{{0.6558869809860839, -0.5296264952329386}, {
      0.772684447585344, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.030267192885750055`, 1.}}], 
     ArrowBox[{{0.6558869809860839, -0.396451111627548}, {
      0.772684447585344, -0.4606917455153096}}]}, 
    {Arrowheads[{{0.028305447533316142`, 1.}}], 
     ArrowBox[{{0.6558869809860839, -0.26393013062831633`}, {
      0.772684447585344, -0.30749844080025557`}}]}, 
    {Arrowheads[{{0.026987118334044113`, 1.}}], 
     ArrowBox[{{0.6558869809860839, -0.1318529686575873}, {
      0.772684447585344, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.026520401539997553`, 1.}}], 
     ArrowBox[{{0.6558869809860839, -2.048823669144951*^-16}, {
      0.772684447585344, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.02698711833404411, 1.}}], 
     ArrowBox[{{0.6558869809860839, 0.1318529686575869}, {0.772684447585344, 
      0.15386131705669837`}}]}, 
    {Arrowheads[{{0.028305447533316132`, 1.}}], 
     ArrowBox[{{0.6558869809860839, 0.2639301306283159}, {0.772684447585344, 
      0.307498440800255}}]}, 
    {Arrowheads[{{0.03026719288575005, 1.}}], 
     ArrowBox[{{0.6558869809860839, 0.39645111162754754`}, {0.772684447585344,
       0.4606917455153091}}]}, 
    {Arrowheads[{{0.03261444525824325, 1.}}], 
     ArrowBox[{{0.6558869809860839, 0.5296264952329381}, {0.772684447585344, 
      0.6132306476242042}}]}, 
    {Arrowheads[{{0.03510026241522805, 1.}}], 
     ArrowBox[{{0.6558869809860839, 0.66365353256432}, {0.772684447585344, 
      0.7649178960071079}}]}, 
    {Arrowheads[{{0.03751578873086676, 1.}}], 
     ArrowBox[{{0.6558869809860839, 0.798712123592133}, {0.772684447585344, 
      0.9155735906935806}}]}, 
    {Arrowheads[{{0.039695066113408374`, 1.}}], 
     ArrowBox[{{0.6558869809860839, 0.9349611519491348}, {0.772684447585344, 
      1.0650388480508644`}}]}, 
    {Arrowheads[{{0.03742047957023938, 1.}}], 
     ArrowBox[{{0.8065476078244287, -0.9349611519491352}, {
      0.9077381064612848, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.03510026241522804, 1.}}], 
     ArrowBox[{{0.8065476078244287, -0.7987121235921334}, {
      0.9077381064612848, -0.915573590693581}}]}, 
    {Arrowheads[{{0.03250572932786945, 1.}}], 
     ArrowBox[{{0.8065476078244287, -0.6636535325643205}, {
      0.9077381064612848, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.02980429594910416, 1.}}], 
     ArrowBox[{{0.8065476078244287, -0.5296264952329386}, {
      0.9077381064612848, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.027215748799216226`, 1.}}], 
     ArrowBox[{{0.8065476078244287, -0.396451111627548}, {
      0.9077381064612848, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.02501584253188675, 1.}}], 
     ArrowBox[{{0.8065476078244287, -0.26393013062831633`}, {
      0.9077381064612848, -0.30749844080025557`}}]}, 
    {Arrowheads[{{0.023513795386847718`, 1.}}], 
     ArrowBox[{{0.8065476078244287, -0.1318529686575873}, {
      0.9077381064612848, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.022976634117327668`, 1.}}], 
     ArrowBox[{{0.8065476078244287, -2.048823669144951*^-16}, {
      0.9077381064612848, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.023513795386847714`, 1.}}], 
     ArrowBox[{{0.8065476078244287, 0.1318529686575869}, {0.9077381064612848, 
      0.15386131705669837`}}]}, 
    {Arrowheads[{{0.02501584253188674, 1.}}], 
     ArrowBox[{{0.8065476078244287, 0.2639301306283159}, {0.9077381064612848, 
      0.307498440800255}}]}, 
    {Arrowheads[{{0.02721574879921622, 1.}}], 
     ArrowBox[{{0.8065476078244287, 0.39645111162754754`}, {
      0.9077381064612848, 0.46069174551530906`}}]}, 
    {Arrowheads[{{0.02980429594910416, 1.}}], 
     ArrowBox[{{0.8065476078244287, 0.5296264952329381}, {0.9077381064612848, 
      0.6132306476242042}}]}, 
    {Arrowheads[{{0.03250572932786945, 1.}}], 
     ArrowBox[{{0.8065476078244287, 0.66365353256432}, {0.9077381064612848, 
      0.7649178960071079}}]}, 
    {Arrowheads[{{0.03510026241522804, 1.}}], 
     ArrowBox[{{0.8065476078244287, 0.798712123592133}, {0.9077381064612848, 
      0.9155735906935806}}]}, 
    {Arrowheads[{{0.03742047957023938, 1.}}], 
     ArrowBox[{{0.8065476078244287, 0.9349611519491348}, {0.9077381064612848, 
      1.0650388480508644`}}]}, 
    {Arrowheads[{{0.035100262415228047`, 1.}}], 
     ArrowBox[{{0.9582390359176642, -0.9349611519491352}, {
      1.0417609640823349`, -1.0650388480508648`}}]}, 
    {Arrowheads[{{0.03261540359966496, 1.}}], 
     ArrowBox[{{0.9582390359176642, -0.7987121235921334}, {
      1.0417609640823349`, -0.915573590693581}}]}, 
    {Arrowheads[{{0.029805344646352944`, 1.}}], 
     ArrowBox[{{0.9582390359176642, -0.6636535325643205}, {
      1.0417609640823349`, -0.7649178960071084}}]}, 
    {Arrowheads[{{0.026833415499577285`, 1.}}], 
     ArrowBox[{{0.9582390359176642, -0.5296264952329386}, {
      1.0417609640823349`, -0.6132306476242047}}]}, 
    {Arrowheads[{{0.02392557445607539, 1.}}], 
     ArrowBox[{{0.9582390359176642, -0.396451111627548}, {
      1.0417609640823349`, -0.46069174551530956`}}]}, 
    {Arrowheads[{{0.021389916033760437`, 1.}}], 
     ArrowBox[{{0.9582390359176642, -0.26393013062831633`}, {
      1.0417609640823349`, -0.30749844080025557`}}]}, 
    {Arrowheads[{{0.01961210605329547, 1.}}], 
     ArrowBox[{{0.9582390359176642, -0.1318529686575873}, {
      1.0417609640823349`, -0.15386131705669884`}}]}, 
    {Arrowheads[{{0.018964752719524542`, 1.}}], 
     ArrowBox[{{0.9582390359176642, -2.048823669144951*^-16}, {
      1.0417609640823349`, -2.3920684293556755`*^-16}}]}, 
    {Arrowheads[{{0.019612106053295466`, 1.}}], 
     ArrowBox[{{0.9582390359176642, 0.1318529686575869}, {1.0417609640823349`,
       0.15386131705669837`}}]}, 
    {Arrowheads[{{0.021389916033760427`, 1.}}], 
     ArrowBox[{{0.9582390359176642, 0.2639301306283159}, {1.0417609640823349`,
       0.307498440800255}}]}, 
    {Arrowheads[{{0.02392557445607539, 1.}}], 
     ArrowBox[{{0.9582390359176642, 0.39645111162754754`}, {
      1.0417609640823349`, 0.4606917455153091}}]}, 
    {Arrowheads[{{0.026833415499577285`, 1.}}], 
     ArrowBox[{{0.9582390359176642, 0.5296264952329381}, {1.0417609640823349`,
       0.6132306476242042}}]}, 
    {Arrowheads[{{0.029805344646352927`, 1.}}], 
     ArrowBox[{{0.9582390359176642, 0.66365353256432}, {1.0417609640823349`, 
      0.7649178960071078}}]}, 
    {Arrowheads[{{0.03261540359966496, 1.}}], 
     ArrowBox[{{0.9582390359176642, 0.798712123592133}, {1.0417609640823349`, 
      0.9155735906935806}}]}, 
    {Arrowheads[{{0.035100262415228047`, 1.}}], 
     ArrowBox[{{0.9582390359176642, 0.9349611519491348}, {1.0417609640823349`,
       1.0650388480508644`}}]}}},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
  PlotRange->{{-1.101015254455221, 1.101015254455221}, {-1.101015254455221, 
   1.101015254455221}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6723413335808992`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6696534135897083`*^9, 3.6696534204991817`*^9}}],

Cell["\<\
List(-Cos(t - x0) + Cos(3*t + x0) + Sin(4*t + y0),
   3*Cos(3*t + x0) + Cos(t - x0)*(7 - Sin(t - x0)) - 
    (2*Cos(3*t + x0)*(5 + Sin(3*t + x0)))/(-7 + Sin(t - x0)) - 
    (Cos(t - x0)*Power(5 + Sin(3*t + x0),2))/Power(-7 + Sin(t - x0),2) + 
    ((5 + Sin(3*t + x0))*Sin(4*t + y0))/(7 - Sin(t - x0)),
   (Cos(3*t + x0)*(3 + Cos(4*t + y0)))/(-7 + Sin(t - x0)) + 
    (Cos(t - x0)*(3 + Cos(4*t + y0))*(5 + Sin(3*t + x0)))/Power(-7 + Sin(t - \
x0),2) + 4*Sin(4*t + y0) + 
    (2*(3 + Cos(4*t + y0))*Sin(4*t + y0))/(-7 + Sin(t - x0)))\
\>", "Output",
 CellChangeTimes->{3.669653421919354*^9, 3.669660466638867*^9, 
  3.669718716939019*^9, 3.669718779572757*^9, 3.6697255232577457`*^9, 
  3.66973943816588*^9, 3.669739563596397*^9, 3.669915368723578*^9, 
  3.669993009339221*^9, 3.670711820541093*^9, 3.6708649024806633`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp1", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"qs", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "x"}], "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"F2", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "y"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.667667460972838*^9, 3.667667500218464*^9}, {
   3.667667612836914*^9, 3.66766761678855*^9}, {3.668031207966751*^9, 
   3.668031212548716*^9}, {3.668031286270006*^9, 3.668031305453834*^9}, 
   3.668031978632262*^9, {3.669221840772698*^9, 3.66922184510841*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "7"}], "+", 
    RowBox[{"2", " ", "t"}], "-", 
    RowBox[{"2", " ", "y"}]}], ",", "0", ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "-", "y"}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", "t", "-", "y"}], ")"}], "3"]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "t"}], "+", "y"}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"4", "-", "t", "+", "y"}], ")"}], "2"]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"4", "-", "t", "+", "y"}], ")"}], "3"]}]}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.667667482839512*^9, 3.667667500776659*^9}, 
   3.667667617375873*^9, 3.6676685511173286`*^9, 3.6676686087131*^9, 
   3.667668667010593*^9, 3.6676687556694813`*^9, 3.667668829509671*^9, 
   3.667668906403964*^9, {3.667670685478223*^9, 3.6676707092413807`*^9}, 
   3.667671047715054*^9, {3.667671096418057*^9, 3.6676711264267406`*^9}, 
   3.6680311749639893`*^9, 3.668031316210524*^9, 3.668031996078507*^9, 
   3.669211916737438*^9, 3.669221717400634*^9, 3.6692218458030443`*^9, 
   3.669225733502433*^9, 3.669228410601099*^9, 3.6693051494956512`*^9, 
   3.6693054113904552`*^9, 3.669305442850469*^9, 3.669305637447969*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", "temp1", "]"}]], "Input",
 CellChangeTimes->{{3.669221847890115*^9, 3.6692218598357277`*^9}}],

Cell["\<\
List(-7 + 2*t - 2*x,-1 + (2*Power(t - x,2))/Power(-4 + t - x,3) + 
    (2*(-t + x))/Power(4 - t + x,2) + 2*Power(4 - t + x,3),0)\
\>", "Output",
 CellChangeTimes->{3.669221860447043*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"F1", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "x"}], "]"}], "+", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"F2", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "y"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6680321566177998`*^9, 3.668032159505769*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", "t"}], "+", 
       RowBox[{"4", " ", "y"}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4", "-", "t", "+", "y"}], ")"}], "6"]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "-", "t", "+", "y"}], ")"}], "3"]]}], "}"}]], "Output",
 CellChangeTimes->{3.66803216224135*^9, 3.669211922987278*^9, 
  3.6692217185746393`*^9, 3.669228416805581*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F1", "[", 
  RowBox[{"x", ",", "y", ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.667668695111381*^9, 3.6676687021782303`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "-", "t", "+", "y"}], ")"}], "4"]}], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.667668696421694*^9, 3.667668702863758*^9}, 
   3.668031181891571*^9, 3.669211926594639*^9, 3.669221719796338*^9, 
   3.6692284191173687`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["As for inout BC:", "Section",
 CellChangeTimes->{{3.670108683127079*^9, 3.6701087053341*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gradFijqk", "[", 
  RowBox[{"q1", ",", "q2", ",", "q3"}], "]"}]], "Input",
 CellChangeTimes->{{3.686598556631234*^9, 3.686598559055058*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"g", " ", "q1"}], "-", 
        FractionBox[
         SuperscriptBox["q2", "2"], 
         SuperscriptBox["q1", "2"]]}], ",", 
       FractionBox[
        RowBox[{"2", " ", "q2"}], "q1"], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"q2", " ", "q3"}], 
         SuperscriptBox["q1", "2"]]}], ",", 
       FractionBox["q3", "q1"], ",", 
       FractionBox["q2", "q1"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"q2", " ", "q3"}], 
         SuperscriptBox["q1", "2"]]}], ",", 
       FractionBox["q3", "q1"], ",", 
       FractionBox["q2", "q1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"g", " ", "q1"}], "-", 
        FractionBox[
         SuperscriptBox["q3", "2"], 
         SuperscriptBox["q1", "2"]]}], ",", "0", ",", 
       FractionBox[
        RowBox[{"2", " ", "q3"}], "q1"]}], "}"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.6865985594888697`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"An1", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "q2"}], "*", 
        RowBox[{
         RowBox[{"q2", "/", "q1"}], "/", "q1"}]}], "+", 
       RowBox[{"g", " ", "q1"}]}], ",", 
      RowBox[{"2", "*", 
       RowBox[{"q2", "/", "q1"}]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "q2"}], "*", 
       RowBox[{
        RowBox[{"q3", "/", "q1"}], "/", "q1"}]}], ",", 
      RowBox[{"q3", "/", "q1"}], ",", 
      RowBox[{"q2", "/", "q1"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.668115528624702*^9, 3.6681155811941347`*^9}, {
  3.668115663539152*^9, 3.6681156904920263`*^9}, {3.668115775661502*^9, 
  3.668115777165204*^9}, {3.686599661146514*^9, 3.686599661218422*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"An1", "[", 
  RowBox[{"q1", ",", "q2", ",", "q3"}], "]"}]], "Input",
 CellChangeTimes->{{3.686599750930313*^9, 3.686599756163015*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"g", " ", "q1"}], "-", 
      FractionBox[
       SuperscriptBox["q2", "2"], 
       SuperscriptBox["q1", "2"]]}], ",", 
     FractionBox[
      RowBox[{"2", " ", "q2"}], "q1"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"q2", " ", "q3"}], 
       SuperscriptBox["q1", "2"]]}], ",", 
     FractionBox["q3", "q1"], ",", 
     FractionBox["q2", "q1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.686599756650867*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"An2", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "q2"}], "*", 
       RowBox[{
        RowBox[{"q3", "/", "q1"}], "/", "q1"}]}], ",", 
      RowBox[{"q3", "/", "q1"}], ",", 
      RowBox[{"q2", "/", "q1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "q3"}], "*", 
        RowBox[{
         RowBox[{"q3", "/", "q1"}], "/", "q1"}]}], "+", 
       RowBox[{"g", " ", "q1"}]}], ",", "0", ",", 
      RowBox[{"2", "*", 
       RowBox[{"q3", "/", "q1"}]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.668115695131*^9, 3.6681157512367973`*^9}, {
  3.66811578168541*^9, 3.6681157830760202`*^9}, {3.686599719307053*^9, 
  3.686599719803026*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"An2", "[", 
  RowBox[{"q1", ",", "q2", ",", "q3"}], "]"}]], "Input",
 CellChangeTimes->{{3.670163751730425*^9, 3.670163758688263*^9}, {
  3.6701641005596867`*^9, 3.6701641007967367`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"q2", " ", "q3"}], 
       SuperscriptBox["q1", "2"]]}], ",", 
     FractionBox["q3", "q1"], ",", 
     FractionBox["q2", "q1"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"g", " ", "q1"}], "-", 
      FractionBox[
       SuperscriptBox["q3", "2"], 
       SuperscriptBox["q1", "2"]]}], ",", "0", ",", 
     FractionBox[
      RowBox[{"2", " ", "q3"}], "q1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6701637593567*^9, {3.670164101397191*^9, 3.670164112912812*^9}, 
   3.6701683054899387`*^9, 3.670177142667955*^9, 3.670180447523218*^9, 
   3.670181182367386*^9, 3.67018129006879*^9, 3.67025449399914*^9, 
   3.670258320849122*^9, 3.670258469989962*^9, 3.670258607118926*^9, 
   3.670258700235859*^9, 3.6865997436077843`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"An", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"An1", "[", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "]"}], "*", "n1"}], "+", 
   RowBox[{
    RowBox[{"An2", "[", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "]"}], "*", "n2"}]}]}]], "Input",
 CellChangeTimes->{{3.668115786354007*^9, 3.668115825605117*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AnN", "=", 
  RowBox[{"An", "[", 
   RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6702574389862137`*^9, 3.6702574590727043`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "n1", ",", "n2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"n1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", "q1"}], "-", 
         FractionBox[
          SuperscriptBox["q2", "2"], 
          SuperscriptBox["q1", "2"]]}], ")"}]}], "-", 
      FractionBox[
       RowBox[{"n2", " ", "q2", " ", "q3"}], 
       SuperscriptBox["q1", "2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", "n1", " ", "q2"}], "q1"], "+", 
      FractionBox[
       RowBox[{"n2", " ", "q3"}], "q1"]}], ",", 
     FractionBox[
      RowBox[{"n2", " ", "q2"}], "q1"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"n1", " ", "q2", " ", "q3"}], 
        SuperscriptBox["q1", "2"]]}], "+", 
      RowBox[{"n2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", "q1"}], "-", 
         FractionBox[
          SuperscriptBox["q3", "2"], 
          SuperscriptBox["q1", "2"]]}], ")"}]}]}], ",", 
     FractionBox[
      RowBox[{"n1", " ", "q3"}], "q1"], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"n1", " ", "q2"}], "q1"], "+", 
      FractionBox[
       RowBox[{"2", " ", "n2", " ", "q3"}], "q1"]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.670257459460272*^9, 3.6702583241882887`*^9, 
  3.6702584724066896`*^9, 3.6702586108415947`*^9, 3.670258702667584*^9, 
  3.686600012388492*^9, 3.6866000834797573`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalLambda]n", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"Eigenvalues", "[", "AnN", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n1", "^", "2"}], "+", 
       RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
      "\[Element]", "Reals"}], "&&", 
     RowBox[{"q1", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.670149228870535*^9, 3.67014926592976*^9}, {
   3.670149681696169*^9, 3.6701496843198147`*^9}, {3.670170102346698*^9, 
   3.670170164075624*^9}, {3.670170230452373*^9, 3.670170295692935*^9}, {
   3.670170793060274*^9, 3.670170856276185*^9}, {3.670170894645392*^9, 
   3.670170908404814*^9}, {3.6701709627102633`*^9, 3.670170973837244*^9}, {
   3.670177538811118*^9, 3.670177540346896*^9}, {3.670179897699967*^9, 
   3.670180115026702*^9}, {3.670181126162057*^9, 3.670181172427227*^9}, {
   3.6701812039310703`*^9, 3.67018122826968*^9}, 3.670181260828499*^9, 
   3.670254530232966*^9, {3.670254565577466*^9, 3.670254566377062*^9}, {
   3.670254920662888*^9, 3.6702549558867188`*^9}, {3.670258458767215*^9, 
   3.6702584625428658`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalLambda]nN", "=", 
  RowBox[{"\[CapitalLambda]n", "[", 
   RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.670257347260232*^9, 3.6702573644075527`*^9}, {
  3.670257464369688*^9, 3.670257465040656*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"n1", " ", "q2"}], "+", 
       RowBox[{"n2", " ", "q3"}]}], "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SqrtBox["g"]}], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "+", 
       RowBox[{"n1", " ", "q2"}], "+", 
       RowBox[{"n2", " ", "q3"}]}], "q1"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "+", 
       RowBox[{"n1", " ", "q2"}], "+", 
       RowBox[{"n2", " ", "q3"}]}], "q1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670257364815009*^9, 3.670257466735156*^9, 
  3.6702583273304663`*^9, 3.670258477556559*^9, 3.670258705138713*^9, 
  3.68660003488697*^9, 3.6866000881882143`*^9, 3.686601497063607*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vn", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"n1", " ", "q2"}], "+", 
    RowBox[{"n2", " ", "q3"}]}], "q1"]}], "\[IndentingNewLine]", 
 RowBox[{"VnN", "=", 
  RowBox[{"Vn", "[", 
   RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.670258117825282*^9, 3.670258145346184*^9}, {
  3.670258201834564*^9, 3.670258218243376*^9}, {3.670258428550226*^9, 
  3.6702584348139353`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"n1", " ", "q2"}], "+", 
   RowBox[{"n2", " ", "q3"}]}], "q1"]], "Output",
 CellChangeTimes->{
  3.670259156119842*^9, 3.6702717558223*^9, {3.686600059163375*^9, 
   3.6866000615315857`*^9}, {3.6866000954038982`*^9, 3.6866000977784157`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalLambda]nN", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"VnN", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"VnN", "-", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"VnN", "+", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.670271767923184*^9, 3.670271848644627*^9}, {
  3.6866001333437643`*^9, 3.6866001389751043`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"n1", " ", "q2"}], "+", 
       RowBox[{"n2", " ", "q3"}]}], "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SqrtBox[
       RowBox[{"g", " ", "q1"}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670271850400776*^9, 3.6866000643727703`*^9, 
  3.686600160494309*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rn", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Eigenvectors", "[", 
      RowBox[{"An", "[", 
       RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "]"}], 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"n1", "^", "2"}], "+", 
        RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
       "\[Element]", "Reals"}], "&&", 
      RowBox[{"q1", ">", "0"}]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6701771643264923`*^9, 3.670177236814625*^9}, {
   3.6701772748551598`*^9, 3.670177400024918*^9}, {3.6701774374740067`*^9, 
   3.6701774810422573`*^9}, 3.670180167502261*^9, {3.670180636100239*^9, 
   3.670180666796021*^9}, {3.670181242140181*^9, 3.670181255675654*^9}, {
   3.670254533841651*^9, 3.670254569161305*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rn", "[", 
  RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "]"}]], "Input",\

 CellChangeTimes->{{3.670276060812757*^9, 3.670276068916217*^9}, {
  3.686600194543602*^9, 3.686600197679648*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["q1", 
       RowBox[{
        RowBox[{
         SqrtBox["g"], " ", "n2", " ", 
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]]}], "-", "q3"}]]}], ",", 
     FractionBox["q1", 
      RowBox[{
       RowBox[{
        SqrtBox["g"], " ", "n2", " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "+", "q3"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["n2", "n1"]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        SqrtBox["g"], " ", "n1", " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "-", "q2"}], 
      RowBox[{
       RowBox[{
        SqrtBox["g"], " ", "n2", " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "-", "q3"}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        SqrtBox["g"], " ", "n1", " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "+", "q2"}], 
      RowBox[{
       RowBox[{
        SqrtBox["g"], " ", "n2", " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "+", "q3"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6702760695640497`*^9, 3.686600199756276*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RnN", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "q1"}], ",", "q1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "n2"}], ",", 
       RowBox[{
        RowBox[{
         SqrtBox["g"], "n1", " ", 
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]]}], "-", "q2"}], ",", 
       RowBox[{
        RowBox[{
         SqrtBox["g"], "n1", " ", 
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]]}], "+", "q2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n1", ",", 
       RowBox[{
        RowBox[{
         SqrtBox["g"], "n2", " ", 
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]]}], "-", "q3"}], ",", 
       RowBox[{
        RowBox[{
         SqrtBox["g"], "n2", " ", 
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]]}], "+", "q3"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.670257374885728*^9, 3.67025738111145*^9}, 
   3.670257469993206*^9, 3.670258333867857*^9, 3.670258484806382*^9, {
   3.670275837777814*^9, 3.670275841585196*^9}, {3.6702760847520523`*^9, 
   3.6702762601511917`*^9}, {3.670276337416293*^9, 3.670276339728333*^9}, {
   3.670276412129857*^9, 3.670276418145199*^9}, {3.686600613013109*^9, 
   3.686600677790181*^9}, {3.6866007175099163`*^9, 3.6866007281341333`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "q1"}], ",", "q1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "n2"}], ",", 
     RowBox[{
      RowBox[{
       SqrtBox["g"], " ", "n1", " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}], "-", "q2"}], ",", 
     RowBox[{
      RowBox[{
       SqrtBox["g"], " ", "n1", " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}], "+", "q2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n1", ",", 
     RowBox[{
      RowBox[{
       SqrtBox["g"], " ", "n2", " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}], "-", "q3"}], ",", 
     RowBox[{
      RowBox[{
       SqrtBox["g"], " ", "n2", " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}], "+", "q3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6702573814915667`*^9, 3.670257470526784*^9, 3.670258337211429*^9, 
   3.6702584858916693`*^9, 3.670258707480221*^9, 3.670275842276232*^9, {
   3.670276407808866*^9, 3.670276418656928*^9}, 3.686600541948176*^9, 
   3.6866007299699383`*^9, {3.686601017654907*^9, 3.686601032950762*^9}, 
   3.686603756803691*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ln", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{"Rn", "[", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "]"}], 
     "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n1", "^", "2"}], "+", 
       RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
      "\[Element]", "Reals"}], "&&", 
     RowBox[{"q1", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6701774061480207`*^9, 3.670177411144586*^9}, {
   3.670177497650765*^9, 3.6701775248668127`*^9}, {3.670180159789564*^9, 
   3.670180160621254*^9}, {3.670181300300063*^9, 3.670181326915902*^9}, 
   3.67025457248946*^9, 3.670254701699403*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LnN", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Inverse", "[", "RnN", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n1", "^", "2"}], "+", 
       RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
      "\[Element]", "Reals"}], "&&", 
     RowBox[{"q1", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.67025739595641*^9, 3.670257409623734*^9}, {
  3.670257472945086*^9, 3.6702574736487226`*^9}, {3.670276443089884*^9, 
  3.670276481722184*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"n2", " ", "q2"}], "-", 
       RowBox[{"n1", " ", "q3"}]}], "q1"], ",", 
     RowBox[{"-", "n2"}], ",", "n1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SqrtBox["g"]}], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       RowBox[{"n1", " ", "q2"}], "-", 
       RowBox[{"n2", " ", "q3"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"5", "/", "2"}]]}]], ",", 
     FractionBox["n1", 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}]], ",", 
     FractionBox["n2", 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       RowBox[{"n1", " ", "q2"}], "-", 
       RowBox[{"n2", " ", "q3"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"5", "/", "2"}]]}]], ",", 
     FractionBox["n1", 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}]], ",", 
     FractionBox["n2", 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670257410173643*^9, 3.6702574742067337`*^9, 
  3.670258342140121*^9, 3.670258489397492*^9, 3.670258709759049*^9, 
  3.6702764822683363`*^9, 3.686601048956346*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"AnN", "-", 
    RowBox[{"RnN", ".", "\[CapitalLambda]nN", ".", "LnN"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670254664215238*^9, 3.6702547573477488`*^9}, {
  3.670254988208003*^9, 3.670254991351473*^9}, {3.670257479817952*^9, 
  3.670257493177438*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.670254742537857*^9, 3.6702547588085337`*^9}, {
   3.670254965757234*^9, 3.6702549918765383`*^9}, 3.670257494250737*^9, 
   3.670258345537614*^9, 3.670258491281187*^9, 3.6702587155889397`*^9, 
   3.6702765066642714`*^9, 3.6866033476400337`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"\[CapitalLambda]nN", ",", "q1"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271880220018*^9, 3.670271905125139*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], 
       SuperscriptBox["q1", "2"]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["g"], " ", 
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]]}], "+", 
        RowBox[{"2", " ", "n1", " ", "q2"}], "+", 
        RowBox[{"2", " ", "n2", " ", "q3"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["q1", "2"]}]]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       RowBox[{"2", " ", "n1", " ", "q2"}], "-", 
       RowBox[{"2", " ", "n2", " ", "q3"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670271905646286*^9, 3.686603361550858*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"\[CapitalLambda]nN", ",", "q2"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6702719216532393`*^9, 3.6702719218208847`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["n1", "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["n1", "q1"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["n1", "q1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6702719221422253`*^9, 3.6866033630615873`*^9, 
  3.686603586802854*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"\[CapitalLambda]nN", ",", "q3"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271926773403*^9, 3.670271926917325*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["n2", "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["n2", "q1"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["n2", "q1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670271927166395*^9, 3.6866033642970657`*^9, 
  3.686603588768284*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"RnN", ",", "q1"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271050228848*^9, 3.670271051753518*^9}, {
  3.670271083401948*^9, 3.6702710946821947`*^9}, {3.6702711407068357`*^9, 
  3.670271142794483*^9}, {3.6702716172498617`*^9, 3.670271621649148*^9}, {
  3.6702716549302893`*^9, 3.670271655146619*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["3", "2"], " ", "n1", " ", 
      SqrtBox[
       RowBox[{"g", " ", "q1"}]]}], ",", 
     RowBox[{
      FractionBox["3", "2"], " ", "n1", " ", 
      SqrtBox[
       RowBox[{"g", " ", "q1"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["3", "2"], " ", "n2", " ", 
      SqrtBox[
       RowBox[{"g", " ", "q1"}]]}], ",", 
     RowBox[{
      FractionBox["3", "2"], " ", "n2", " ", 
      SqrtBox[
       RowBox[{"g", " ", "q1"}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6702711432864447`*^9, 3.6702716220920973`*^9, 
  3.6702716561346407`*^9, 3.686603734799911*^9, 3.686603770771072*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"RnN", ",", "q2"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271154432273*^9, 3.6702711600427437`*^9}, {
  3.670271635233625*^9, 3.670271661458661*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670271162529194*^9, {3.670271639400135*^9, 3.6702716619404573`*^9}, 
   3.6866037417362967`*^9, 3.686603772937104*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"RnN", ",", "q3"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6702711654488783`*^9, 3.670271170666851*^9}, {
  3.670271666401963*^9, 3.670271671025902*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670271171103529*^9, 3.670271679762845*^9, 
  3.686603744422832*^9, 3.686603776579466*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"LnN", ",", "q1"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271198257243*^9, 3.670271206203701*^9}, {
  3.670271684594392*^9, 3.670271688825965*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "n2"}], " ", "q2"}], "+", 
       RowBox[{"n1", " ", "q3"}]}], 
      SuperscriptBox["q1", "2"]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "+", 
       RowBox[{"5", " ", "n1", " ", "q2"}], "+", 
       RowBox[{"5", " ", "n2", " ", "q3"}]}], 
      RowBox[{"4", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "n1"}], 
       RowBox[{"4", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "n2"}], 
       RowBox[{"4", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "+", 
       RowBox[{"5", " ", "n1", " ", "q2"}], "+", 
       RowBox[{"5", " ", "n2", " ", "q3"}]}], 
      RowBox[{"4", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "n1"}], 
       RowBox[{"4", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "n2"}], 
       RowBox[{"4", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670271206591535*^9, 3.670271689432991*^9, 
  3.6866040790717287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"LnN", ",", "q2"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6702712281106987`*^9, 3.6702712367162933`*^9}, {
  3.670271697330266*^9, 3.670271701450124*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["n2", "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["n1", 
       RowBox[{"2", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["n1", 
       RowBox[{"2", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}], ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6702712371010723`*^9, 3.670271701978249*^9, 
  3.6866040832833033`*^9, 3.686604404782428*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"LnN", ",", "q3"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271239342255*^9, 3.6702712433236313`*^9}, {
  3.670271706498253*^9, 3.670271710202269*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["n1", "q1"]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["n2", 
       RowBox[{"2", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["n2", 
       RowBox[{"2", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}], ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6702712443465023`*^9, 3.6702717106985064`*^9, 
  3.686604085537965*^9, 3.6866044477497663`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The first case: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", 
    SqrtBox[
     RowBox[{"g", " ", "h"}]], "\[LessEqual]", 
    SubscriptBox["V", "n"]}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.670257556414957*^9, 3.67025781613446*^9}, {
  3.670259337553647*^9, 3.670259356849967*^9}, {3.670259392802246*^9, 
  3.670259432077239*^9}, {3.6702595701903467`*^9, 3.670259590062869*^9}, {
  3.686606239957306*^9, 3.686606240205332*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"abs\[CapitalLambda]n", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"VnN", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"VnN", "-", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"VnN", "+", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.670255945775667*^9, 3.670255964893262*^9}, {
   3.67025611082395*^9, 3.670256321290393*^9}, {3.670256354810754*^9, 
   3.670256355788041*^9}, {3.670256389644224*^9, 3.670256398330702*^9}, {
   3.6702566358788548`*^9, 3.670256695470017*^9}, {3.670257251607066*^9, 
   3.670257298486753*^9}, 3.6702575031298122`*^9, 3.670258014642084*^9, {
   3.670258091416945*^9, 3.670258099570407*^9}, {3.670258152274683*^9, 
   3.6702581929135237`*^9}, {3.670258228084009*^9, 3.670258280356419*^9}, {
   3.670258358796887*^9, 3.6702584258375177`*^9}, {3.670271954046537*^9, 
   3.670271969469961*^9}, {3.670272035767501*^9, 3.670272047150777*^9}, {
   3.6866048875278587`*^9, 3.686604890751204*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"abs\[CapitalLambda]nN", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"abs\[CapitalLambda]n", "[", 
     RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n1", "^", "2"}], "+", 
       RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
      "\[Element]", "Reals"}], "&&", 
     RowBox[{"q1", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.670258746438459*^9, 3.670258763514028*^9}, {
  3.670271986110169*^9, 3.670271998598199*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"n1", " ", "q2"}], "+", 
       RowBox[{"n2", " ", "q3"}]}], "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "q1"}], " ", 
        SqrtBox[
         RowBox[{"g", " ", "q1"}]]}], "+", 
       RowBox[{"n1", " ", "q2"}], "+", 
       RowBox[{"n2", " ", "q3"}]}], "q1"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SqrtBox[
       RowBox[{"g", " ", "q1"}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6702587644803343`*^9, 3.670259167752677*^9, {3.6702719762429047`*^9, 
   3.6702719992730827`*^9}, 3.670272048605425*^9, {3.686604864284679*^9, 
   3.68660489331222*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"abs\[CapitalLambda]nN", ",", "q1"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67027205621463*^9, 3.6702720730630083`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], 
       SuperscriptBox["q1", "2"]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["g"], " ", 
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]]}], "+", 
        RowBox[{"2", " ", "n1", " ", "q2"}], "+", 
        RowBox[{"2", " ", "n2", " ", "q3"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["q1", "2"]}]]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"q1", " ", 
        SqrtBox[
         RowBox[{"g", " ", "q1"}]]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.670272068594904*^9, 3.670272073355136*^9}, 
   3.6866048981050453`*^9, 3.68660504698656*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"abs\[CapitalLambda]nN", ",", "q2"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271489461361*^9, 3.670271500207274*^9}, {
  3.6702720768315907`*^9, 3.670272081239636*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["n1", "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["n1", "q1"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["n1", "q1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670271500769706*^9, 3.670272082462895*^9, 
  3.6866048997046623`*^9, 3.686605139463505*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"abs\[CapitalLambda]nN", ",", "q3"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271504504302*^9, 3.67027151395956*^9}, {
  3.67027208497546*^9, 3.670272088519423*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["n2", "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["n2", "q1"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["n2", "q1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670271514368616*^9, 3.670272088946789*^9, 3.6866049009817877`*^9, {
   3.6866051411171017`*^9, 3.686605169725787*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The second case: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", 
    SubscriptBox["V", "n"], "<", 
    SqrtBox[
     RowBox[{"g", " ", "h"}]]}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.670257556414957*^9, 3.67025781613446*^9}, {
  3.670259337553647*^9, 3.670259356849967*^9}, {3.67025953271002*^9, 
  3.670259551496265*^9}, {3.686606235925247*^9, 3.686606236301194*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"abs\[CapitalLambda]n", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"VnN", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "VnN"}], "+", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"VnN", "+", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.670255945775667*^9, 3.670255964893262*^9}, {
   3.67025611082395*^9, 3.670256321290393*^9}, {3.670256354810754*^9, 
   3.670256355788041*^9}, {3.670256389644224*^9, 3.670256398330702*^9}, {
   3.6702566358788548`*^9, 3.670256695470017*^9}, {3.670257251607066*^9, 
   3.670257298486753*^9}, 3.6702575031298122`*^9, 3.670258014642084*^9, {
   3.670258091416945*^9, 3.670258099570407*^9}, {3.670258152274683*^9, 
   3.6702581929135237`*^9}, {3.670258228084009*^9, 3.670258280356419*^9}, {
   3.670258358796887*^9, 3.6702584258375177`*^9}, {3.670271954046537*^9, 
   3.670271969469961*^9}, {3.670272035767501*^9, 3.670272047150777*^9}, {
   3.6866048875278587`*^9, 3.686604890751204*^9}, {3.686605534022175*^9, 
   3.686605536782011*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"abs\[CapitalLambda]nN", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"abs\[CapitalLambda]n", "[", 
     RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n1", "^", "2"}], "+", 
       RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
      "\[Element]", "Reals"}], "&&", 
     RowBox[{"q1", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.670258746438459*^9, 3.670258763514028*^9}, {
  3.670271986110169*^9, 3.670271998598199*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"n1", " ", "q2"}], "+", 
       RowBox[{"n2", " ", "q3"}]}], "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      SqrtBox[
       RowBox[{"g", " ", "q1"}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SqrtBox[
       RowBox[{"g", " ", "q1"}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6702587644803343`*^9, 3.670259167752677*^9, {3.6702719762429047`*^9, 
   3.6702719992730827`*^9}, 3.670272048605425*^9, {3.686604864284679*^9, 
   3.68660489331222*^9}, 3.686605559824069*^9, 3.686605790893025*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"abs\[CapitalLambda]nN", ",", "q1"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67027205621463*^9, 3.6702720730630083`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], 
       SuperscriptBox["q1", "2"]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"q1", " ", 
        SqrtBox[
         RowBox[{"g", " ", "q1"}]]}], "+", 
       RowBox[{"2", " ", "n1", " ", "q2"}], "+", 
       RowBox[{"2", " ", "n2", " ", "q3"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", "2"]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"q1", " ", 
        SqrtBox[
         RowBox[{"g", " ", "q1"}]]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.670272068594904*^9, 3.670272073355136*^9}, 
   3.6866048981050453`*^9, 3.68660504698656*^9, 3.686605561490528*^9, 
   3.686605794098289*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"abs\[CapitalLambda]nN", ",", "q2"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271489461361*^9, 3.670271500207274*^9}, {
  3.6702720768315907`*^9, 3.670272081239636*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["n1", "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["n1", "q1"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["n1", "q1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670271500769706*^9, 3.670272082462895*^9, 
  3.6866048997046623`*^9, 3.686605139463505*^9, 3.686605563838976*^9, 
  3.686605795582053*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"abs\[CapitalLambda]nN", ",", "q3"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271504504302*^9, 3.67027151395956*^9}, {
  3.67027208497546*^9, 3.670272088519423*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["n2", "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["n2", "q1"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["n2", "q1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670271514368616*^9, 3.670272088946789*^9, 3.6866049009817877`*^9, {
   3.6866051411171017`*^9, 3.686605169725787*^9}, 3.686605565079907*^9, 
   3.686605796974531*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The third case: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     SqrtBox[
      RowBox[{"g", " ", "h"}]]}], "\[LessEqual]", 
    SubscriptBox["V", "n"], "<", "0"}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.670257556414957*^9, 3.67025781613446*^9}, {
  3.670259337553647*^9, 3.670259356849967*^9}, {3.67025953271002*^9, 
  3.670259551496265*^9}, {3.686606070858532*^9, 3.686606109691936*^9}, {
  3.686606188876849*^9, 3.686606232245393*^9}, {3.6866065907848663`*^9, 
  3.68660659644905*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"abs\[CapitalLambda]n", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "VnN"}], ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "VnN"}], "+", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"VnN", "+", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.670255945775667*^9, 3.670255964893262*^9}, {
   3.67025611082395*^9, 3.670256321290393*^9}, {3.670256354810754*^9, 
   3.670256355788041*^9}, {3.670256389644224*^9, 3.670256398330702*^9}, {
   3.6702566358788548`*^9, 3.670256695470017*^9}, {3.670257251607066*^9, 
   3.670257298486753*^9}, 3.6702575031298122`*^9, 3.670258014642084*^9, {
   3.670258091416945*^9, 3.670258099570407*^9}, {3.670258152274683*^9, 
   3.6702581929135237`*^9}, {3.670258228084009*^9, 3.670258280356419*^9}, {
   3.670258358796887*^9, 3.6702584258375177`*^9}, {3.670271954046537*^9, 
   3.670271969469961*^9}, {3.670272035767501*^9, 3.670272047150777*^9}, {
   3.6866048875278587`*^9, 3.686604890751204*^9}, {3.686605534022175*^9, 
   3.686605536782011*^9}, 3.68660634283849*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"abs\[CapitalLambda]nN", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"abs\[CapitalLambda]n", "[", 
     RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n1", "^", "2"}], "+", 
       RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
      "\[Element]", "Reals"}], "&&", 
     RowBox[{"q1", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.670258746438459*^9, 3.670258763514028*^9}, {
  3.670271986110169*^9, 3.670271998598199*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      SqrtBox[
       RowBox[{"g", " ", "q1"}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SqrtBox[
       RowBox[{"g", " ", "q1"}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6702587644803343`*^9, 3.670259167752677*^9, {3.6702719762429047`*^9, 
   3.6702719992730827`*^9}, 3.670272048605425*^9, {3.686604864284679*^9, 
   3.68660489331222*^9}, 3.686605559824069*^9, 3.686605790893025*^9, 
   3.686606348691536*^9, 3.6866064188949013`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"abs\[CapitalLambda]nN", ",", "q1"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67027205621463*^9, 3.6702720730630083`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"n1", " ", "q2"}], "+", 
       RowBox[{"n2", " ", "q3"}]}], 
      SuperscriptBox["q1", "2"]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"q1", " ", 
        SqrtBox[
         RowBox[{"g", " ", "q1"}]]}], "+", 
       RowBox[{"2", " ", "n1", " ", "q2"}], "+", 
       RowBox[{"2", " ", "n2", " ", "q3"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", "2"]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"q1", " ", 
        SqrtBox[
         RowBox[{"g", " ", "q1"}]]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.670272068594904*^9, 3.670272073355136*^9}, 
   3.6866048981050453`*^9, 3.68660504698656*^9, 3.686605561490528*^9, 
   3.686605794098289*^9, 3.686606350938925*^9, 3.6866064213303337`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"abs\[CapitalLambda]nN", ",", "q2"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271489461361*^9, 3.670271500207274*^9}, {
  3.6702720768315907`*^9, 3.670272081239636*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["n1", "q1"]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["n1", "q1"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["n1", "q1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670271500769706*^9, 3.670272082462895*^9, 
  3.6866048997046623`*^9, 3.686605139463505*^9, 3.686605563838976*^9, 
  3.686605795582053*^9, 3.686606352407125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"abs\[CapitalLambda]nN", ",", "q3"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271504504302*^9, 3.67027151395956*^9}, {
  3.67027208497546*^9, 3.670272088519423*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["n2", "q1"]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["n2", "q1"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["n2", "q1"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670271514368616*^9, 3.670272088946789*^9, 3.6866049009817877`*^9, {
   3.6866051411171017`*^9, 3.686605169725787*^9}, 3.686605565079907*^9, 
   3.686605796974531*^9, 3.6866063534817247`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The fourth case: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", "n"], "<", 
    RowBox[{"-", 
     SqrtBox[
      RowBox[{"g", " ", "h"}]]}]}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.670257556414957*^9, 3.67025781613446*^9}, {
  3.670259337553647*^9, 3.670259356849967*^9}, {3.67025953271002*^9, 
  3.670259551496265*^9}, {3.686606070858532*^9, 3.686606109691936*^9}, {
  3.686606188876849*^9, 3.686606232245393*^9}, {3.6866065717453947`*^9, 
  3.686606581387704*^9}, {3.686652345739398*^9, 3.68665234651508*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"abs\[CapitalLambda]n", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "VnN"}], ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "VnN"}], "+", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{
       RowBox[{"-", "VnN"}], "-", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.670255945775667*^9, 3.670255964893262*^9}, {
   3.67025611082395*^9, 3.670256321290393*^9}, {3.670256354810754*^9, 
   3.670256355788041*^9}, {3.670256389644224*^9, 3.670256398330702*^9}, {
   3.6702566358788548`*^9, 3.670256695470017*^9}, {3.670257251607066*^9, 
   3.670257298486753*^9}, 3.6702575031298122`*^9, 3.670258014642084*^9, {
   3.670258091416945*^9, 3.670258099570407*^9}, {3.670258152274683*^9, 
   3.6702581929135237`*^9}, {3.670258228084009*^9, 3.670258280356419*^9}, {
   3.670258358796887*^9, 3.6702584258375177`*^9}, {3.670271954046537*^9, 
   3.670271969469961*^9}, {3.670272035767501*^9, 3.670272047150777*^9}, {
   3.6866048875278587`*^9, 3.686604890751204*^9}, {3.686605534022175*^9, 
   3.686605536782011*^9}, 3.68660634283849*^9, {3.6866066167134857`*^9, 
   3.686606622904846*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"abs\[CapitalLambda]nN", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"abs\[CapitalLambda]n", "[", 
     RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n1", "^", "2"}], "+", 
       RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
      "\[Element]", "Reals"}], "&&", 
     RowBox[{"q1", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.670258746438459*^9, 3.670258763514028*^9}, {
  3.670271986110169*^9, 3.670271998598199*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      SqrtBox[
       RowBox[{"g", " ", "q1"}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"q1", " ", 
         SqrtBox[
          RowBox[{"g", " ", "q1"}]]}], "+", 
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6702587644803343`*^9, 3.670259167752677*^9, {3.6702719762429047`*^9, 
   3.6702719992730827`*^9}, 3.670272048605425*^9, {3.686604864284679*^9, 
   3.68660489331222*^9}, 3.686605559824069*^9, 3.686605790893025*^9, 
   3.686606348691536*^9, 3.6866064188949013`*^9, 3.686606626694603*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"abs\[CapitalLambda]nN", ",", "q1"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67027205621463*^9, 3.6702720730630083`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"n1", " ", "q2"}], "+", 
       RowBox[{"n2", " ", "q3"}]}], 
      SuperscriptBox["q1", "2"]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"q1", " ", 
        SqrtBox[
         RowBox[{"g", " ", "q1"}]]}], "+", 
       RowBox[{"2", " ", "n1", " ", "q2"}], "+", 
       RowBox[{"2", " ", "n2", " ", "q3"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", "2"]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SqrtBox["g"]}], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}], "+", 
       RowBox[{"2", " ", "n1", " ", "q2"}], "+", 
       RowBox[{"2", " ", "n2", " ", "q3"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.670272068594904*^9, 3.670272073355136*^9}, 
   3.6866048981050453`*^9, 3.68660504698656*^9, 3.686605561490528*^9, 
   3.686605794098289*^9, 3.686606350938925*^9, 3.6866064213303337`*^9, 
   3.686606629043743*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"abs\[CapitalLambda]nN", ",", "q2"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271489461361*^9, 3.670271500207274*^9}, {
  3.6702720768315907`*^9, 3.670272081239636*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["n1", "q1"]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["n1", "q1"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", 
      FractionBox["n1", "q1"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670271500769706*^9, 3.670272082462895*^9, 
  3.6866048997046623`*^9, 3.686605139463505*^9, 3.686605563838976*^9, 
  3.686605795582053*^9, 3.686606352407125*^9, 3.686606630636793*^9, 
  3.68660677111333*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"abs\[CapitalLambda]nN", ",", "q3"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670271504504302*^9, 3.67027151395956*^9}, {
  3.67027208497546*^9, 3.670272088519423*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["n2", "q1"]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["n2", "q1"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", 
      FractionBox["n2", "q1"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670271514368616*^9, 3.670272088946789*^9, 3.6866049009817877`*^9, {
   3.6866051411171017`*^9, 3.686605169725787*^9}, 3.686605565079907*^9, 
   3.686605796974531*^9, 3.6866063534817247`*^9, 3.686606631883374*^9, 
   3.686606785106051*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"abs\[CapitalLambda]n", "[", 
   RowBox[{"q1_", ",", "q2_", ",", "q3_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"VnN", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "VnN"}], "+", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"VnN", "+", 
       SqrtBox[
        RowBox[{"g", " ", "q1"}]]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.670259795000271*^9, 3.6702597983122053`*^9}, {
  3.686605216538566*^9, 3.686605219986608*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"abs\[CapitalLambda]nN", "=", 
  RowBox[{"abs\[CapitalLambda]n", "[", 
   RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"n1", " ", "q2"}], "+", 
       RowBox[{"n2", " ", "q3"}]}], "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      SqrtBox[
       RowBox[{"g", " ", "q1"}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SqrtBox[
       RowBox[{"g", " ", "q1"}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670259815918577*^9, 3.68660522689393*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pls\[CapitalLambda]nN", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"VnN", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"VnN", "+", 
       SqrtBox["q1"]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.67026009574645*^9, 3.6702601858854847`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"n1", " ", "q2"}], "+", 
       RowBox[{"n2", " ", "q3"}]}], "q1"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SqrtBox["q1"], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", " ", "q2"}], "+", 
        RowBox[{"n2", " ", "q3"}]}], "q1"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670260198269022*^9, 3.670260328511661*^9, 
  3.686605229278689*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mns\[CapitalLambda]nN", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Vn", "-", 
       SqrtBox["q1"]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.670260282670884*^9, 3.6702603220630074`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox["q1"]}], "+", "Vn"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.670260301479981*^9, 3.67026032967293*^9}, 
   3.686605234766756*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"absAnN", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"RnN", ".", "abs\[CapitalLambda]nN", ".", "LnN"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n1", "^", "2"}], "+", 
       RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
      "\[Element]", "Reals"}], "&&", 
     RowBox[{"q1", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.670259866377821*^9, 3.670259957458482*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"g", " ", 
        SuperscriptBox["q1", "3"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["n2", "2"]}], ")"}], " ", 
        SuperscriptBox["q2", "2"]}], "-", 
       RowBox[{"2", " ", "n1", " ", "n2", " ", "q2", " ", "q3"}], "-", 
       RowBox[{
        SuperscriptBox["n2", "2"], " ", 
        SuperscriptBox["q3", "2"]}]}], 
      RowBox[{
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"5", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{"n1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n1", " ", "q2"}], "+", 
         RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
      RowBox[{
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{"n2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n1", " ", "q2"}], "+", 
         RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
      RowBox[{
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"g", " ", 
        SuperscriptBox["q1", "3"], " ", "q2"}], "+", 
       RowBox[{"q2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["n2", "2"]}], ")"}], " ", 
           SuperscriptBox["q2", "2"]}], "-", 
          RowBox[{"2", " ", "n1", " ", "n2", " ", "q2", " ", "q3"}], "-", 
          RowBox[{
           SuperscriptBox["n2", "2"], " ", 
           SuperscriptBox["q3", "2"]}]}], ")"}]}], "+", 
       RowBox[{
        SqrtBox["g"], " ", "n2", " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["n2", "2"]}]}], ")"}], " ", "q2", " ", "q3"}], 
          "+", 
          RowBox[{"n1", " ", "n2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["q2", "2"]}], "+", 
             SuperscriptBox["q3", "2"]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "g"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["n2", "2"]}], ")"}], " ", 
        SuperscriptBox["q1", "3"]}], "+", 
       RowBox[{
        SqrtBox["g"], " ", 
        SuperscriptBox["n2", "2"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], "+", 
       RowBox[{"q2", " ", 
        RowBox[{"(", 
         RowBox[{"q2", "-", 
          RowBox[{
           SuperscriptBox["n2", "2"], " ", "q2"}], "+", 
          RowBox[{"n1", " ", "n2", " ", "q3"}]}], ")"}]}]}], 
      RowBox[{
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"5", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{"n2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", "n1", " ", 
          SuperscriptBox["q1", "3"]}], "+", 
         RowBox[{"q2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n1", " ", "q2"}], "+", 
            RowBox[{"n2", " ", "q3"}]}], ")"}]}], "+", 
         RowBox[{
          SqrtBox["g"], " ", 
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["n2", "2"]}], ")"}], " ", "q2"}], "-", 
            RowBox[{"n1", " ", "n2", " ", "q3"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"5", "/", "2"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"g", " ", 
        SuperscriptBox["q1", "3"], " ", "q3"}], "-", 
       RowBox[{"q3", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q2", "2"], "+", 
          RowBox[{"2", " ", "n1", " ", "n2", " ", "q2", " ", "q3"}], "+", 
          RowBox[{
           SuperscriptBox["n2", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["q2", "2"]}], "+", 
             SuperscriptBox["q3", "2"]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "n1"}], " ", "q2", " ", "q3"}], "+", 
          RowBox[{"2", " ", "n1", " ", 
           SuperscriptBox["n2", "2"], " ", "q2", " ", "q3"}], "+", 
          RowBox[{"n2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["q2", "2"], "-", 
             SuperscriptBox["q3", "2"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["n2", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["q2", "2"]}], "+", 
             SuperscriptBox["q3", "2"]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{"n1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", "n2", " ", 
          SuperscriptBox["q1", "3"]}], "-", 
         RowBox[{
          SqrtBox["g"], " ", "n2", " ", 
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n1", " ", "q2"}], "+", 
            RowBox[{"n2", " ", "q3"}]}], ")"}]}], "+", 
         RowBox[{"q3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n1", " ", "q2"}], "+", 
            RowBox[{"n2", " ", "q3"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"5", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"g", " ", 
        SuperscriptBox["n2", "2"], " ", 
        SuperscriptBox["q1", "3"]}], "-", 
       RowBox[{
        SqrtBox["g"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["n2", "2"]}], ")"}], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], "+", 
       RowBox[{"n2", " ", "q3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}]}], 
      RowBox[{
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"5", "/", "2"}]]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670259835615882*^9, {3.670259870196973*^9, 3.670259874750641*^9}, 
   3.670259924881887*^9, 3.6702599587731953`*^9, 3.670260333645115*^9, 
   3.686605238744849*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"absAnN", ",", "q1"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6702606363483343`*^9, 3.6702606809982862`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"g", " ", 
        SuperscriptBox["q1", "3"]}], "+", 
       RowBox[{"5", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q2", "2"], "+", 
          RowBox[{"2", " ", "n1", " ", "n2", " ", "q2", " ", "q3"}], "+", 
          RowBox[{
           SuperscriptBox["n2", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["q2", "2"]}], "+", 
             SuperscriptBox["q3", "2"]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "n1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "n2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "g"}], " ", 
        SuperscriptBox["q1", "3"], " ", "q2"}], "+", 
       RowBox[{"4", " ", 
        SqrtBox["g"], " ", "n2", " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["n2", "2"]}]}], ")"}], " ", "q2", " ", "q3"}], 
          "+", 
          RowBox[{"n1", " ", "n2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["q2", "2"], "-", 
             SuperscriptBox["q3", "2"]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"7", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q2", "3"], "+", 
          RowBox[{"2", " ", "n1", " ", "n2", " ", 
           SuperscriptBox["q2", "2"], " ", "q3"}], "+", 
          RowBox[{
           SuperscriptBox["n2", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["q2", "3"]}], "+", 
             RowBox[{"q2", " ", 
              SuperscriptBox["q3", "2"]}]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"9", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "g"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["n2", "2"]}], ")"}], " ", 
        SuperscriptBox["q1", "3"]}], "-", 
       RowBox[{"2", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["n2", "2"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], "-", 
       RowBox[{"5", " ", "q2", " ", 
        RowBox[{"(", 
         RowBox[{"q2", "-", 
          RowBox[{
           SuperscriptBox["n2", "2"], " ", "q2"}], "+", 
          RowBox[{"n1", " ", "n2", " ", "q3"}]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{"n2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", "n1", " ", 
          SuperscriptBox["q1", "3"]}], "-", 
         RowBox[{"5", " ", "q2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n1", " ", "q2"}], "+", 
            RowBox[{"n2", " ", "q3"}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["g"], " ", 
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], " ", 
          RowBox[{"(", 
           RowBox[{"q2", "-", 
            RowBox[{
             SuperscriptBox["n2", "2"], " ", "q2"}], "+", 
            RowBox[{"n1", " ", "n2", " ", "q3"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "g"}], " ", 
        SuperscriptBox["q1", "3"], " ", "q3"}], "+", 
       RowBox[{"4", " ", 
        SqrtBox["g"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2", " ", "q3"}], "-", 
          RowBox[{"2", " ", "n1", " ", 
           SuperscriptBox["n2", "2"], " ", "q2", " ", "q3"}], "+", 
          RowBox[{
           SuperscriptBox["n2", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["q2", "2"], "-", 
             SuperscriptBox["q3", "2"]}], ")"}]}], "+", 
          RowBox[{"n2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["q2", "2"]}], "+", 
             SuperscriptBox["q3", "2"]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"7", " ", "q3", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q2", "2"], "+", 
          RowBox[{"2", " ", "n1", " ", "n2", " ", "q2", " ", "q3"}], "+", 
          RowBox[{
           SuperscriptBox["n2", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["q2", "2"]}], "+", 
             SuperscriptBox["q3", "2"]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"9", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{"n1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", "n2", " ", 
          SuperscriptBox["q1", "3"]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["g"], " ", "n2", " ", 
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n1", " ", "q2"}], "+", 
            RowBox[{"n2", " ", "q3"}]}], ")"}]}], "-", 
         RowBox[{"5", " ", "q3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n1", " ", "q2"}], "+", 
            RowBox[{"n2", " ", "q3"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"g", " ", 
        SuperscriptBox["n2", "2"], " ", 
        SuperscriptBox["q1", "3"]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["g"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["n2", "2"]}], ")"}], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], "-", 
       RowBox[{"5", " ", "n2", " ", "q3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SqrtBox["g"], " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670260647343799*^9, 3.6702606820084267`*^9, 
  3.686605244042583*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plsAnN", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"RnN", ".", "pls\[CapitalLambda]nN", ".", "LnN"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n1", "^", "2"}], "+", 
       RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
      "\[Element]", "Reals"}], "&&", 
     RowBox[{"q1", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.670260220710455*^9, 3.6702602301007433`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]], "-", 
         RowBox[{"n1", " ", "q2"}], "-", 
         RowBox[{"n2", " ", "q3"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]], "+", 
         RowBox[{"n1", " ", "q2"}], "+", 
         RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", 
        RowBox[{"5", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{"n1", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]], "+", 
         RowBox[{"n1", " ", "q2"}], "+", 
         RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{"n2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]], "+", 
         RowBox[{"n1", " ", "q2"}], "+", 
         RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"n2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"n2", " ", "q2"}], "-", 
           RowBox[{"n1", " ", "q3"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"n1", " ", "q2"}], "+", 
           RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
        SuperscriptBox["q1", "2"]]}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", 
           SuperscriptBox["q1", 
            RowBox[{"3", "/", "2"}]]}], "+", "q2"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], "-", 
          RowBox[{"n1", " ", "q2"}], "-", 
          RowBox[{"n2", " ", "q3"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], "+", 
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["q1", 
         RowBox[{"7", "/", "2"}]]}]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["n2", "2"]}], ")"}]}], " ", 
        SuperscriptBox["q1", "3"]}], "+", 
       RowBox[{"q2", " ", 
        RowBox[{"(", 
         RowBox[{"q2", "-", 
          RowBox[{
           SuperscriptBox["n2", "2"], " ", "q2"}], "+", 
          RowBox[{"n1", " ", "n2", " ", "q3"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["n2", "2"]}], ")"}], " ", "q2"}], "+", 
          RowBox[{"n2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["n2", "2"]}], ")"}], " ", "q3"}]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", 
        RowBox[{"5", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{"n2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["n2", "2"]}], ")"}]}], " ", 
          SuperscriptBox["q1", "3"]}], "+", 
         RowBox[{"q2", " ", 
          RowBox[{"(", 
           RowBox[{"q2", "-", 
            RowBox[{
             SuperscriptBox["n2", "2"], " ", "q2"}], "+", 
            RowBox[{"n1", " ", "n2", " ", "q3"}]}], ")"}]}], "+", 
         RowBox[{"n2", " ", 
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n1", " ", "n2", " ", "q2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["n2", "2"]}], ")"}], " ", "q3"}]}], ")"}]}]}], 
        ")"}]}], 
      RowBox[{"2", " ", "n1", " ", 
       SuperscriptBox["q1", 
        RowBox[{"5", "/", "2"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"n1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n2", " ", "q2"}], "-", 
          RowBox[{"n1", " ", "q3"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
       SuperscriptBox["q1", "2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n2", " ", 
           SuperscriptBox["q1", 
            RowBox[{"3", "/", "2"}]]}], "+", "q3"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], "-", 
          RowBox[{"n1", " ", "q2"}], "-", 
          RowBox[{"n2", " ", "q3"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], "+", 
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["q1", 
         RowBox[{"7", "/", "2"}]]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"n1", " ", "n2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"n1", " ", "q2"}], "+", 
           RowBox[{"n2", " ", "q3"}]}], ")"}]}], "q1"]}], "+", 
      FractionBox[
       RowBox[{"n1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n2", " ", 
           SuperscriptBox["q1", 
            RowBox[{"3", "/", "2"}]]}], "+", "q3"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], "+", 
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["n2", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"n1", " ", "q2"}], "+", 
           RowBox[{"n2", " ", "q3"}]}], ")"}]}], "q1"]}], "+", 
      FractionBox[
       RowBox[{"n2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n2", " ", 
           SuperscriptBox["q1", 
            RowBox[{"3", "/", "2"}]]}], "+", "q3"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], "+", 
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.67026023339493*^9, 3.670260347509519*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"plsAnN", ",", "q1"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n1", "^", "2"}], "+", 
      RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
     "\[Element]", "Reals"}], "&&", 
    RowBox[{"q1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670260999031123*^9, 3.6702610011081877`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["q1", "3"], "+", 
       RowBox[{"5", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"n1", " ", "q2"}], "+", 
           RowBox[{"n2", " ", "q3"}]}], ")"}], "2"]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "n1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "n2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", "q2"}], "+", 
          RowBox[{"n2", " ", "q3"}]}], ")"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["q1", 
         RowBox[{"5", "/", "2"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["q1", "3"]}], " ", "q2"}], "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["q2", "3"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["n2", "3"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", "q2", " ", "q3"}], "+", 
       RowBox[{
        SuperscriptBox["n2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "7"}], " ", 
           SuperscriptBox["q2", "3"]}], "+", 
          RowBox[{"7", " ", "q2", " ", 
           SuperscriptBox["q3", "2"]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "n1", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q1", 
           RowBox[{"9", "/", "2"}]], "+", 
          RowBox[{"7", " ", "n2", " ", 
           SuperscriptBox["q2", "2"], " ", "q3"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["q1", 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["q2", "2"], "+", 
             RowBox[{
              SuperscriptBox["n2", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["q2", "2"], "-", 
                SuperscriptBox["q3", "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
      
      RowBox[{"4", " ", 
       SuperscriptBox["q1", 
        RowBox[{"9", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["n2", "2"]}], ")"}]}], " ", 
        SuperscriptBox["q1", "3"]}], "-", 
       RowBox[{"5", " ", "q2", " ", 
        RowBox[{"(", 
         RowBox[{"q2", "-", 
          RowBox[{
           SuperscriptBox["n2", "2"], " ", "q2"}], "+", 
          RowBox[{"n1", " ", "n2", " ", "q3"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["n2", "2"]}], ")"}], " ", "q2"}], "+", 
          RowBox[{"n2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["n2", "2"]}], ")"}], " ", "q3"}]}], ")"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{"n2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["n2", "2"]}], ")"}]}], " ", 
          SuperscriptBox["q1", "3"]}], "-", 
         RowBox[{"5", " ", "q2", " ", 
          RowBox[{"(", 
           RowBox[{"q2", "-", 
            RowBox[{
             SuperscriptBox["n2", "2"], " ", "q2"}], "+", 
            RowBox[{"n1", " ", "n2", " ", "q3"}]}], ")"}]}], "-", 
         RowBox[{"2", " ", "n2", " ", 
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n1", " ", "n2", " ", "q2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["n2", "2"]}], ")"}], " ", "q3"}]}], ")"}]}]}], 
        ")"}]}], 
      RowBox[{"4", " ", "n1", " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", 
        SuperscriptBox["q1", 
         RowBox[{"9", "/", "2"}]]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["q1", "3"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["n1", "3"], " ", 
            SuperscriptBox["q1", 
             RowBox[{"3", "/", "2"}]], " ", "q2"}], "+", 
           RowBox[{"7", " ", 
            SuperscriptBox["n1", "2"], " ", 
            SuperscriptBox["q2", "2"]}]}], ")"}], " ", "q3"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["n2", "3"], " ", 
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]], " ", 
         SuperscriptBox["q3", "2"]}], "+", 
        RowBox[{"7", " ", 
         SuperscriptBox["n2", "2"], " ", 
         SuperscriptBox["q3", "3"]}], "+", 
        RowBox[{"2", " ", "n2", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["q1", 
            RowBox[{"9", "/", "2"}]], "+", 
           RowBox[{"7", " ", "n1", " ", "q2", " ", 
            SuperscriptBox["q3", "2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["n2", "2"]}], ")"}], " ", 
            SuperscriptBox["q1", 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["q2", "2"], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["q3", "2"]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
     ",", 
     FractionBox[
      RowBox[{"n1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["n2", "2"], " ", 
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]], " ", "q3"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["q1", 
              RowBox[{"3", "/", "2"}]]}], "+", 
            RowBox[{"5", " ", "n1", " ", "q2"}]}], ")"}], " ", "q3"}], "+", 
         RowBox[{"n2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["q1", "3"], "+", 
            RowBox[{"2", " ", "n1", " ", 
             SuperscriptBox["q1", 
              RowBox[{"3", "/", "2"}]], " ", "q2"}], "-", 
            RowBox[{"5", " ", 
             SuperscriptBox["q3", "2"]}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", "n1", " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", "q2"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["n2", "3"], " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]], " ", "q3"}], "-", 
       RowBox[{"n2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", 
           SuperscriptBox["q1", 
            RowBox[{"3", "/", "2"}]]}], "+", 
          RowBox[{"5", " ", "n1", " ", "q2"}]}], ")"}], " ", "q3"}], "+", 
       RowBox[{
        SuperscriptBox["n2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q1", "3"], "+", 
          RowBox[{"2", " ", "n1", " ", 
           SuperscriptBox["q1", 
            RowBox[{"3", "/", "2"}]], " ", "q2"}], "-", 
          RowBox[{"5", " ", 
           SuperscriptBox["q3", "2"]}]}], ")"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["q1", 
        RowBox[{"7", "/", "2"}]]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670261004496039*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnsAnN", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"RnN", ".", "mns\[CapitalLambda]nN", ".", "LnN"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n1", "^", "2"}], "+", 
       RowBox[{"n2", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3", ",", "n1", ",", "n2"}], "}"}], 
      "\[Element]", "Reals"}], "&&", 
     RowBox[{"q1", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6702603608953447`*^9, 3.670260367367094*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]], "+", 
         RowBox[{"n1", " ", "q2"}], "+", 
         RowBox[{"n2", " ", "q3"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox["q1"]}], "+", "Vn"}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", 
        RowBox[{"3", "/", "2"}]]}]], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"n1", "-", 
        FractionBox[
         RowBox[{"n1", " ", "Vn"}], 
         SqrtBox["q1"]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"n2", "-", 
        FractionBox[
         RowBox[{"n2", " ", "Vn"}], 
         SqrtBox["q1"]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n1", " ", 
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]]}], "-", "q2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]], "+", 
         RowBox[{"n1", " ", "q2"}], "+", 
         RowBox[{"n2", " ", "q3"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox["q1"], "-", "Vn"}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", 
        RowBox[{"5", "/", "2"}]]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"n1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", 
           SuperscriptBox["q1", 
            RowBox[{"3", "/", "2"}]]}], "-", "q2"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox["q1"], "-", "Vn"}], ")"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"n2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n1", " ", 
           SuperscriptBox["q1", 
            RowBox[{"3", "/", "2"}]]}], "-", "q2"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox["q1"], "-", "Vn"}], ")"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["q1", 
         RowBox[{"3", "/", "2"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n2", " ", 
          SuperscriptBox["q1", 
           RowBox[{"3", "/", "2"}]]}], "-", "q3"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]], "+", 
         RowBox[{"n1", " ", "q2"}], "+", 
         RowBox[{"n2", " ", "q3"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox["q1"], "-", "Vn"}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["q1", 
        RowBox[{"5", "/", "2"}]]}]], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", "n1", " ", 
      RowBox[{"(", 
       RowBox[{"n2", "-", 
        FractionBox["q3", 
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox["q1"]}], "+", "Vn"}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", "n2", " ", 
      RowBox[{"(", 
       RowBox[{"n2", "-", 
        FractionBox["q3", 
         SuperscriptBox["q1", 
          RowBox[{"3", "/", "2"}]]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox["q1"]}], "+", "Vn"}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.670260369733944*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The third case: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     SqrtBox["h"]}], "\[LessEqual]", 
    SubscriptBox["V", "n"], "<", "0"}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.670257556414957*^9, 3.67025781613446*^9}, {
  3.670259337553647*^9, 3.670259356849967*^9}, {3.670259456715044*^9, 
  3.6702594727054157`*^9}, {3.670259513213108*^9, 3.6702595132132483`*^9}, {
  3.670259560236452*^9, 3.6702595611103992`*^9}, {3.6702596174946203`*^9, 
  3.670259636655384*^9}, {3.6702596675665903`*^9, 3.670259703758144*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "The fourth case: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", "n"], "<", 
    RowBox[{"-", 
     SqrtBox["h"]}], "<", "0"}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.670257556414957*^9, 3.67025781613446*^9}, {
   3.670259337553647*^9, 3.670259356849967*^9}, {3.670259480425436*^9, 
   3.670259523035879*^9}, 3.6702595643739862`*^9, {3.670259683383665*^9, 
   3.670259709190135*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"t", " ", "y", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"t", " ", "x", " ", "y"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"t", "+", "x", "+", "y"}], "]"}]}], "-", 
    RowBox[{"t", " ", "x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"t", " ", "x", " ", "y"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"x", "+", "y"}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"x", " ", "y", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"t", " ", "x", " ", "y"}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"t", " ", "x", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"t", " ", "x", " ", "y"}], "]"}], "2"]}], 
     RowBox[{"10", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}]], "-", 
    FractionBox[
     RowBox[{"t", " ", "x", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", "x", " ", "y"}], "]"}], "2"]}], 
     RowBox[{"10", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}]], "+", 
    FractionBox[
     RowBox[{"t", " ", "y", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "x", " ", "y"}], "]"}]}], 
     RowBox[{"10", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"t", " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", "x", " ", "y"}], "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"t", "+", "x", "+", "y"}], "]"}], "+", 
        RowBox[{"t", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"10", "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ")"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"t", " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "x", " ", "y"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"t", "+", "x", "+", "y"}], "]"}], "+", 
        RowBox[{"t", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"10", "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"t", " ", 
            RowBox[{"(", 
             RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ")"}], "2"]}]], "+", 
    
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"10", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"t", "+", "x", "+", "y"}], "]"}], "+", 
       RowBox[{"t", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "x"}], " ", "y", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"t", " ", "x", " ", "y"}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"t", " ", "y", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"t", " ", "x", " ", "y"}], "]"}], "2"]}], 
     RowBox[{"10", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}]], "-", 
    FractionBox[
     RowBox[{"t", " ", "y", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", "x", " ", "y"}], "]"}], "2"]}], 
     RowBox[{"10", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}]], "-", 
    FractionBox[
     RowBox[{"t", " ", "x", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "x", " ", "y"}], "]"}]}], 
     RowBox[{"10", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"t", " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"t", " ", "x", " ", "y"}], "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"t", "+", "x", "+", "y"}], "]"}], "+", 
        RowBox[{"t", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"10", "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ")"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"t", " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "x", " ", "y"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"t", "+", "x", "+", "y"}], "]"}], "+", 
        RowBox[{"t", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"10", "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"t", " ", 
            RowBox[{"(", 
             RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ")"}], "2"]}]], "+", 
    
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"10", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{"x", "+", "y"}], ")"}]}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"t", "+", "x", "+", "y"}], "]"}], "+", 
       RowBox[{"t", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", "+", "x", "+", "y"}], "]"}]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.672162714045145*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1407, 1033},
WindowMargins->{{253, Automatic}, {Automatic, 71}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 979, 30, 42, "Input"],
Cell[1540, 52, 494, 12, 42, "Input"],
Cell[CellGroupData[{
Cell[2059, 68, 509, 12, 42, "Input"],
Cell[2571, 82, 1639, 51, 71, "Output"]
}, Open  ]],
Cell[4225, 136, 1994, 57, 71, "Input"],
Cell[CellGroupData[{
Cell[6244, 197, 482, 12, 42, "Input"],
Cell[6729, 211, 1811, 53, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8577, 269, 648, 16, 42, "Input"],
Cell[9228, 287, 956, 28, 80, "Output"]
}, Open  ]],
Cell[10199, 318, 1777, 45, 96, "Input"],
Cell[CellGroupData[{
Cell[12001, 367, 1581, 42, 100, "Input"],
Cell[13585, 411, 2743, 73, 131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16365, 489, 211, 4, 40, "Input"],
Cell[16579, 495, 455, 9, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17071, 509, 1174, 24, 42, "Input"],
Cell[18248, 535, 667, 14, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18952, 554, 535, 16, 45, "Input"],
Cell[19490, 572, 2228, 72, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21755, 649, 1571, 36, 45, "Input"],
Cell[23329, 687, 2273, 74, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25639, 766, 176, 3, 40, "Input"],
Cell[25818, 771, 663, 13, 132, "Output"]
}, Open  ]],
Cell[26496, 787, 897, 27, 42, "Input"],
Cell[27396, 816, 844, 26, 42, "Input"],
Cell[28243, 844, 424, 11, 42, "Input"],
Cell[CellGroupData[{
Cell[28692, 859, 181, 4, 42, "Input"],
Cell[28876, 865, 1362, 45, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30275, 915, 515, 13, 42, "Input"],
Cell[30793, 930, 582, 15, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31412, 950, 185, 4, 42, "Input"],
Cell[31600, 956, 1361, 45, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32998, 1006, 481, 15, 45, "Input"],
Cell[33482, 1023, 2978, 97, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36497, 1125, 833, 26, 45, "Input"],
Cell[37333, 1153, 343, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37713, 1169, 478, 10, 42, "Input"],
Cell[38194, 1181, 843, 25, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39074, 1211, 733, 24, 72, "Input"],
Cell[39810, 1237, 1068, 33, 117, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40915, 1275, 125, 2, 40, "Input"],
Cell[41043, 1279, 238, 5, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41318, 1289, 839, 19, 42, "Input"],
Cell[42160, 1310, 1739, 48, 141, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43936, 1363, 518, 13, 42, "Input"],
Cell[44457, 1378, 772, 24, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45266, 1407, 423, 11, 40, "Input"],
Cell[45692, 1420, 408, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46137, 1437, 698, 18, 40, "Input"],
Cell[46838, 1457, 438, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47313, 1470, 823, 20, 45, "Input"],
Cell[48139, 1492, 1401, 46, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49577, 1543, 86, 2, 40, "Input"],
Cell[49666, 1547, 3111, 97, 143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52814, 1649, 151, 3, 40, "Input"],
Cell[52968, 1654, 1580, 52, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54585, 1711, 88, 1, 44, "Subsubsection"],
Cell[54676, 1714, 3896, 62, 40, "Input"],
Cell[58575, 1778, 693, 19, 65, "Input"],
Cell[59271, 1799, 298, 8, 40, "Input"],
Cell[59572, 1809, 291, 9, 40, "Input"],
Cell[CellGroupData[{
Cell[59888, 1822, 193, 4, 40, "Input"],
Cell[60084, 1828, 198, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60319, 1837, 293, 7, 40, "Input"],
Cell[60615, 1846, 176, 3, 40, "Output"]
}, Open  ]],
Cell[60806, 1852, 1733, 47, 71, "Input"],
Cell[62542, 1901, 1459, 43, 71, "Input"],
Cell[CellGroupData[{
Cell[64026, 1948, 248, 7, 40, "Input"],
Cell[64277, 1957, 1064, 26, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65378, 1988, 1329, 36, 43, "Input"],
Cell[66710, 2026, 7550, 220, 305, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74297, 2251, 681, 19, 42, "Input"],
Cell[74981, 2272, 7386, 205, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82404, 2482, 428, 8, 40, "Input"],
Cell[82835, 2492, 173, 4, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83045, 2501, 180, 4, 40, "Input"],
Cell[83228, 2507, 928, 16, 153, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84193, 2528, 231, 5, 40, "Input"],
Cell[84427, 2535, 936, 16, 130, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85400, 2556, 803, 13, 42, "Input"],
Cell[86206, 2571, 1716, 32, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87959, 2608, 117, 2, 40, "Input"],
Cell[88079, 2612, 264, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88380, 2621, 1569, 30, 42, "Input"],
Cell[89952, 2653, 271932, 4698, 525, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361921, 7356, 761, 17, 42, "Input"],
Cell[362685, 7375, 146039, 2410, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508761, 9790, 495, 15, 42, "Input"],
Cell[509259, 9807, 36804, 695, 453, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546100, 10507, 128, 2, 40, "Input"],
Cell[546231, 10511, 831, 14, 202, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547099, 10530, 789, 20, 42, "Input"],
Cell[547891, 10552, 1484, 39, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549412, 10596, 130, 2, 40, "Input"],
Cell[549545, 10600, 196, 4, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549778, 10609, 401, 12, 42, "Input"],
Cell[550182, 10623, 572, 17, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550791, 10645, 156, 3, 42, "Input"],
Cell[550950, 10650, 386, 11, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[551385, 10667, 99, 1, 81, "Section"],
Cell[CellGroupData[{
Cell[551509, 10672, 164, 3, 42, "Input"],
Cell[551676, 10677, 1406, 48, 71, "Output"]
}, Open  ]],
Cell[553097, 10728, 971, 28, 42, "Input"],
Cell[CellGroupData[{
Cell[554093, 10760, 158, 3, 42, "Input"],
Cell[554254, 10765, 652, 22, 71, "Output"]
}, Open  ]],
Cell[554921, 10790, 921, 28, 42, "Input"],
Cell[CellGroupData[{
Cell[555867, 10822, 211, 4, 42, "Input"],
Cell[556081, 10828, 959, 27, 71, "Output"]
}, Open  ]],
Cell[557055, 10858, 424, 11, 42, "Input"],
Cell[CellGroupData[{
Cell[557504, 10873, 213, 5, 42, "Input"],
Cell[557720, 10880, 1546, 49, 73, "Output"]
}, Open  ]],
Cell[559281, 10932, 1377, 28, 42, "Input"],
Cell[CellGroupData[{
Cell[560683, 10964, 290, 6, 42, "Input"],
Cell[560976, 10972, 1060, 32, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562073, 11009, 555, 14, 100, "Input"],
Cell[562631, 11025, 291, 7, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562959, 11037, 579, 17, 55, "Input"],
Cell[563541, 11056, 861, 29, 65, "Output"]
}, Open  ]],
Cell[564417, 11088, 1055, 25, 42, "Input"],
Cell[CellGroupData[{
Cell[565497, 11117, 230, 5, 42, "Input"],
Cell[565730, 11124, 1375, 46, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567142, 11175, 1407, 39, 55, "Input"],
Cell[568552, 11216, 1205, 36, 47, "Output"]
}, Open  ]],
Cell[569772, 11255, 919, 23, 42, "Input"],
Cell[CellGroupData[{
Cell[570716, 11282, 631, 17, 42, "Input"],
Cell[571350, 11301, 1838, 61, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573225, 11367, 640, 17, 42, "Input"],
Cell[573868, 11386, 526, 12, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574431, 11403, 530, 15, 42, "Input"],
Cell[574964, 11420, 1131, 36, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[576132, 11461, 534, 15, 42, "Input"],
Cell[576669, 11478, 431, 13, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[577137, 11496, 530, 15, 42, "Input"],
Cell[577670, 11513, 429, 13, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578136, 11531, 716, 18, 42, "Input"],
Cell[578855, 11551, 848, 27, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[579740, 11583, 566, 16, 42, "Input"],
Cell[580309, 11601, 424, 12, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580770, 11618, 566, 16, 42, "Input"],
Cell[581339, 11636, 392, 11, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581768, 11652, 564, 16, 42, "Input"],
Cell[582335, 11670, 2049, 69, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[584421, 11744, 568, 16, 42, "Input"],
Cell[584992, 11762, 732, 24, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585761, 11791, 566, 16, 42, "Input"],
Cell[586330, 11809, 756, 25, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587123, 11839, 475, 12, 51, "Subsubsection"],
Cell[587601, 11853, 1262, 27, 55, "Input"],
Cell[CellGroupData[{
Cell[588888, 11884, 671, 17, 42, "Input"],
Cell[589562, 11903, 977, 31, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[590576, 11939, 534, 15, 42, "Input"],
Cell[591113, 11956, 1216, 39, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592366, 12000, 584, 16, 42, "Input"],
Cell[592953, 12018, 451, 13, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593441, 12036, 580, 16, 42, "Input"],
Cell[594024, 12054, 481, 14, 65, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[594554, 12074, 424, 11, 51, "Subsubsection"],
Cell[594981, 12087, 1335, 29, 55, "Input"],
Cell[CellGroupData[{
Cell[596341, 12120, 671, 17, 42, "Input"],
Cell[597015, 12139, 984, 30, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[598036, 12174, 534, 15, 42, "Input"],
Cell[598573, 12191, 1204, 38, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[599814, 12234, 584, 16, 42, "Input"],
Cell[600401, 12252, 520, 15, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600958, 12272, 580, 16, 42, "Input"],
Cell[601541, 12290, 551, 16, 65, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[602141, 12312, 544, 14, 51, "Subsubsection"],
Cell[602688, 12328, 1378, 30, 55, "Input"],
Cell[CellGroupData[{
Cell[604091, 12362, 671, 17, 42, "Input"],
Cell[604765, 12381, 1063, 33, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605865, 12419, 534, 15, 42, "Input"],
Cell[606402, 12436, 1224, 37, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607663, 12478, 584, 16, 42, "Input"],
Cell[608250, 12496, 564, 16, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[608851, 12517, 580, 16, 42, "Input"],
Cell[609434, 12535, 597, 17, 65, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[610080, 12558, 570, 14, 51, "Subsubsection"],
Cell[610653, 12574, 1453, 32, 55, "Input"],
Cell[CellGroupData[{
Cell[612131, 12610, 671, 17, 42, "Input"],
Cell[612805, 12629, 1126, 34, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[613968, 12668, 534, 15, 42, "Input"],
Cell[614505, 12685, 1241, 37, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615783, 12727, 584, 16, 42, "Input"],
Cell[616370, 12745, 632, 18, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[617039, 12768, 580, 16, 42, "Input"],
Cell[617622, 12786, 667, 19, 65, "Output"]
}, Open  ]],
Cell[618304, 12808, 695, 20, 55, "Input"],
Cell[CellGroupData[{
Cell[619024, 12832, 179, 4, 42, "Input"],
Cell[619206, 12838, 809, 27, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620052, 12870, 425, 12, 55, "Input"],
Cell[620480, 12884, 620, 20, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[621137, 12909, 423, 12, 55, "Input"],
Cell[621563, 12923, 418, 13, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[622018, 12941, 556, 15, 42, "Input"],
Cell[622577, 12958, 7530, 235, 351, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[630144, 13198, 522, 15, 42, "Input"],
Cell[630669, 13215, 7760, 236, 351, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[638466, 13456, 558, 15, 42, "Input"],
Cell[639027, 13473, 7380, 232, 406, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646444, 13710, 520, 15, 42, "Input"],
Cell[646967, 13727, 8364, 251, 457, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655368, 13983, 558, 15, 42, "Input"],
Cell[655929, 14000, 3721, 126, 211, "Output"]
}, Open  ]]
}, Open  ]],
Cell[659677, 14130, 573, 13, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[660275, 14147, 439, 12, 43, "Subsubsection"],
Cell[660717, 14161, 8606, 260, 320, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

